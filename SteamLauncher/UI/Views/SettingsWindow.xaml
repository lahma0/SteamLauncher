<Window x:Class="SteamLauncher.UI.Views.SettingsWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:conv="clr-namespace:SteamLauncher.UI.Converters"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:fw="clr-namespace:SteamLauncher.UI.Framework"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:su="clr-namespace:SteamLauncher.DataStore.SelectiveUse"
        xmlns:ut="clr-namespace:SteamLauncher.UI.Utils"
        xmlns:vm="clr-namespace:SteamLauncher.UI.ViewModels"
        x:Name="WindowSettings"
        Title="SteamLauncher"
        Width="820"
        Height="640"
        MinWidth="820"
        MinHeight="640"
        Icon="/SteamLauncher;component/Resources/logo2_icon.ico"
        Style="{DynamicResource CustomWindowStyle}"
        Topmost="True"
        mc:Ignorable="d">
    <!--  d:DataContext="{d:DesignInstance Type=vm:SettingsVmForDesignTime, IsDesignTimeCreatable=True}"  -->
    <Window.DataContext>
        <vm:SettingsViewModel />
    </Window.DataContext>
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding SteamStatusTimer.StartTimerCommand}" />
        </i:EventTrigger>
        <i:EventTrigger EventName="Closing">
            <i:InvokeCommandAction Command="{Binding SteamStatusTimer.StopTimerCommand}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Window.Resources>
        <ResourceDictionary>
            <Thickness x:Key="SliderMargin">0,6,0,0</Thickness>
            <Thickness x:Key="StackPanelMargin">0,3</Thickness>
            <Style x:Key="NumericTextBox"
                   BasedOn="{StaticResource {x:Type TextBox}}"
                   TargetType="TextBox">
                <Setter Property="Padding"
                        Value="2,2" />
                <Setter Property="MaxLines"
                        Value="1" />
                <Setter Property="Validation.ErrorTemplate">
                    <Setter.Value>
                        <ControlTemplate x:Name="NumericTextBoxErrorTemplate">
                            <StackPanel>
                                <AdornedElementPlaceholder x:Name="textBox">
                                    <Border BorderBrush="Red"
                                            BorderThickness="1" />
                                </AdornedElementPlaceholder>
                                <ItemsControl HorizontalContentAlignment="Center"
                                              ItemsSource="{Binding}">
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock HorizontalAlignment="Center"
                                                       Foreground="Red"
                                                       Text="{Binding ErrorContent}" />
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                            </StackPanel>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="Validation.HasError" Value="True">
                        <Setter Property="ToolTip"
                                Value="{Binding RelativeSource={x:Static RelativeSource.Self},
                                                Path=(Validation.Errors)[0].ErrorContent}" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="MiscFilePathTextBox"
                   BasedOn="{StaticResource {x:Type TextBox}}"
                   TargetType="TextBox">
                <Setter Property="Padding"
                        Value="2,2" />
                <Setter Property="Validation.ErrorTemplate">
                    <Setter.Value>
                        <ControlTemplate x:Name="TextBoxFilePathErrorTemplate">
                            <StackPanel>
                                <AdornedElementPlaceholder x:Name="textBox">
                                    <Border BorderBrush="Red"
                                            BorderThickness="1" />
                                </AdornedElementPlaceholder>
                                <ItemsControl HorizontalContentAlignment="Center"
                                              ItemsSource="{Binding}">
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock HorizontalAlignment="Center"
                                                       Foreground="Red"
                                                       Text="{Binding ErrorContent}" />
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                            </StackPanel>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="Validation.HasError" Value="True">
                        <Setter Property="ToolTip"
                                Value="{Binding RelativeSource={x:Static RelativeSource.Self},
                                                Path=(Validation.Errors)[0].ErrorContent}" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="CheckboxHeaderStyle"
                   BasedOn="{StaticResource {x:Type CheckBox}}"
                   TargetType="CheckBox">
                <Setter Property="HorizontalAlignment"
                        Value="Center" />
                <Setter Property="Margin"
                        Value="0,5,0,3" />
            </Style>
            <Style x:Key="SliderHeaderStyle"
                   BasedOn="{StaticResource {x:Type Label}}"
                   TargetType="Label">
                <Setter Property="HorizontalAlignment"
                        Value="Center" />
                <Setter Property="Padding"
                        Value="3" />
            </Style>
            <Style x:Key="SliderCaptionStyle"
                   BasedOn="{StaticResource {x:Type Label}}"
                   TargetType="Label">
                <Setter Property="ContentTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <TextBlock Text="{Binding}">
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,
                                                                                                          AncestorType={x:Type Label}},
                                                                           Path=Tag}"
                                                         Value="False">
                                                <Setter Property="Foreground"
                                                        Value="Red" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="FontSize"
                        Value="11" />
                <Setter Property="FontWeight"
                        Value="ExtraLight" />
                <Setter Property="HorizontalAlignment"
                        Value="Center" />
            </Style>
            <BooleanToVisibilityConverter x:Key="BoolToVis" />
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../Themes/ColorfulDarkTheme.xaml" />
            </ResourceDictionary.MergedDictionaries>

        </ResourceDictionary>
    </Window.Resources>
    <Grid Margin="4">
        <Grid.RowDefinitions>
            <RowDefinition Height="2*" />
            <RowDefinition Height="5" />
            <RowDefinition Height="Auto"
                           MinHeight="80" />
            <RowDefinition Height="5" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="210" />
            <ColumnDefinition Width="4" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <ScrollViewer Grid.Row="0"
                      Grid.RowSpan="3"
                      Grid.Column="0"
                      VerticalScrollBarVisibility="Auto">
            <StackPanel Margin="4,0,4,4"
                        Orientation="Vertical">
                <StackPanel.Resources>
                    <Style TargetType="{x:Type StackPanel}">
                        <Setter Property="Margin"
                                Value="{StaticResource StackPanelMargin}" />
                        <Setter Property="ToolTipService.ShowDuration"
                                Value="180000" />
                    </Style>
                    <Style BasedOn="{StaticResource {x:Type Slider}}"
                           TargetType="{x:Type Slider}">
                        <Setter Property="Margin"
                                Value="{StaticResource SliderMargin}" />
                    </Style>
                </StackPanel.Resources>
                <StackPanel x:Name="StackPanelEnableUniversalSteamLaunching"
                            ut:MouseObserver.Observe="True"
                            ut:MouseObserver.PropertyInfo="{conv:PropertyInfoOf {Binding UniversalSteamLaunching}}"
                            ut:MouseObserver.PropertyInfoBinding="{Binding CurrentSettingPropertyInfo,
                                                                           Mode=OneWayToSource}"
                            Background="Transparent">
                    <CheckBox Name="ChkEnableUniversalSteamLaunching"
                              Margin="-20,5,0,3"
                              HorizontalAlignment="Center"
                              Content="Enable SteamLauncher"
                              IsChecked="{Binding Path=UniversalSteamLaunching,
                                                  FallbackValue=True}"
                              Style="{StaticResource CheckboxHeaderStyle}" />
                    <!--<StackPanel.ToolTip>
                        <ToolTip>
                            <ToolTip.Content>
                                <StackPanel>
                                    <TextBlock Margin="0,0,0,5"
                                               FontSize="14"
                                               FontWeight="Bold"
                                               Text="Enable SteamLauncher"
                                               TextWrapping="NoWrap" />
                                    <Separator />
                                    <TextBlock MaxWidth="300"
                                               Text="{Binding ConverterParameter=UniversalSteamLaunching,
                                                              Converter={conv:PropertyToDisplayDescriptionConverter}}"
                                               TextWrapping="Wrap" />
                                </StackPanel>
                            </ToolTip.Content>
                        </ToolTip>
                    </StackPanel.ToolTip>-->
                </StackPanel>
                <Separator />
                <StackPanel x:Name="StackPanelLogLevel"
                            ut:MouseObserver.Observe="True"
                            ut:MouseObserver.PropertyInfo="{conv:PropertyInfoOf {Binding LogLevel}}"
                            ut:MouseObserver.PropertyInfoBinding="{Binding CurrentSettingPropertyInfo,
                                                                           Mode=OneWayToSource}"
                            Background="Transparent">
                    <!--<TextBlock HorizontalAlignment="Center"
                           Text="Log Level" />-->
                    <Label Content="Log Level"
                           Style="{StaticResource SliderHeaderStyle}" />
                    <ComboBox Name="CmbLogLevel"
                              Margin="0,6,0,6"
                              DisplayMemberPath="Item2"
                              ItemsSource="{Binding Path=LogLevel,
                                                    Converter={conv:EnumToCollectionConverter},
                                                    Mode=OneTime}"
                              SelectedValue="{Binding Path=LogLevel}"
                              SelectedValuePath="Item1" />
                </StackPanel>
                <Separator />
                <StackPanel x:Name="StackPanelPreventSteamFocusStealing"
                            ut:MouseObserver.Observe="True"
                            ut:MouseObserver.PropertyInfo="{conv:PropertyInfoOf {Binding PreventSteamFocusStealing}}"
                            ut:MouseObserver.PropertyInfoBinding="{Binding CurrentSettingPropertyInfo,
                                                                           Mode=OneWayToSource}"
                            Background="Transparent">
                    <!--<CheckBox Name="ChkPreventSteamFocusStealing"
                          VerticalContentAlignment="Stretch"
                          Height="16"
                          IsChecked="{Binding Path=PreventSteamFocusStealing, FallbackValue=True}" >
                    <CheckBox.Content>
                        <Viewbox Stretch="Fill">
                            <TextBlock Text="Prevent Steam Focus Stealing"/>
                        </Viewbox>
                    </CheckBox.Content>
                </CheckBox>-->
                    <CheckBox Name="ChkPreventSteamFocusStealing"
                              Content="Prevent Steam Focus Stealing"
                              IsChecked="{Binding Path=PreventSteamFocusStealing,
                                                  FallbackValue=True}"
                              Style="{StaticResource CheckboxHeaderStyle}" />
                    <StackPanel Name="SteamFocusPanel"
                                Margin="0"
                                Visibility="{Binding ElementName=ChkPreventSteamFocusStealing,
                                                     Path=IsChecked,
                                                     Converter={StaticResource BoolToVis},
                                                     FallbackValue=Visible}">
                        <Slider Name="SliderPreventSteamFocusSec"
                                IsEnabled="{Binding ElementName=ChkPreventSteamFocusStealing,
                                                    Path=IsChecked}"
                                IsSnapToTickEnabled="True"
                                Maximum="{Binding Path=TotalSecondsToPreventSteamFocusValidRange.Maximum}"
                                Minimum="{Binding Path=TotalSecondsToPreventSteamFocusValidRange.Minimum}"
                                SmallChange="1"
                                TickPlacement="BottomRight"
                                Value="{Binding Path=TotalSecondsToPreventSteamFocus}" />
                        <Label Content="{Binding Path=TotalSecondsToPreventSteamFocus,
                                                 Converter={conv:SliderCaptionConverter},
                                                 FallbackValue=6 Seconds}"
                               Style="{StaticResource SliderCaptionStyle}"
                               Tag="{Binding Path=IsTotalSecondsToPreventSteamFocusInValidRange}" />
                    </StackPanel>
                </StackPanel>
                <Separator />
                <StackPanel x:Name="StackPanelProcessStartTimeout"
                            ut:MouseObserver.Observe="True"
                            ut:MouseObserver.PropertyInfo="{conv:PropertyInfoOf {Binding ProcessStartTimeoutSec}}"
                            ut:MouseObserver.PropertyInfoBinding="{Binding CurrentSettingPropertyInfo,
                                                                           Mode=OneWayToSource}"
                            Background="Transparent">
                    <Label Content="Process Start Timeout"
                           Style="{StaticResource SliderHeaderStyle}" />
                    <Slider Name="SliderProcessStartTimeout"
                            IsSnapToTickEnabled="True"
                            Maximum="{Binding Path=ProcessStartTimeoutSecValidRange.Maximum}"
                            Minimum="{Binding Path=ProcessStartTimeoutSecValidRange.Minimum}"
                            SmallChange="1"
                            TickPlacement="BottomRight"
                            Value="{Binding Path=ProcessStartTimeoutSec}" />
                    <Label Content="{Binding Path=ProcessStartTimeoutSec,
                                             Converter={conv:SliderCaptionConverter},
                                             FallbackValue=10 Seconds}"
                           Style="{StaticResource SliderCaptionStyle}"
                           Tag="{Binding Path=IsProcessStartTimeoutSecInValidRange,
                                         Mode=OneWay}" />
                </StackPanel>
                <Separator />
                <StackPanel x:Name="StackPanelProcessPollingInterval"
                            ut:MouseObserver.Observe="True"
                            ut:MouseObserver.PropertyInfo="{conv:PropertyInfoOf {Binding ProcessWatcherPollingIntervalSec}}"
                            ut:MouseObserver.PropertyInfoBinding="{Binding CurrentSettingPropertyInfo,
                                                                           Mode=OneWayToSource}"
                            Background="Transparent">
                    <Label Content="Process Polling Interval"
                           Style="{StaticResource SliderHeaderStyle}" />
                    <Slider Name="SliderProcessWatcherPollInterval"
                            IsSnapToTickEnabled="True"
                            Maximum="{Binding Path=ProcessWatcherPollingIntervalSecValidRange.Maximum}"
                            Minimum="{Binding Path=ProcessWatcherPollingIntervalSecValidRange.Minimum}"
                            SmallChange="1"
                            TickPlacement="BottomRight"
                            Value="{Binding Path=ProcessWatcherPollingIntervalSec}" />
                    <Label Content="{Binding Path=ProcessWatcherPollingIntervalSec,
                                             Converter={conv:SliderCaptionConverter},
                                             FallbackValue=2 Seconds}"
                           Style="{StaticResource SliderCaptionStyle}"
                           Tag="{Binding Path=IsProcessWatcherPollingIntervalSecInValidRange}" />
                </StackPanel>
                <Separator />
                <StackPanel x:Name="StackPanelDosBoxScummVmProxySleep"
                            ut:MouseObserver.Observe="True"
                            ut:MouseObserver.PropertyInfo="{conv:PropertyInfoOf {Binding DosBoxScummVmProxySleepMs}}"
                            ut:MouseObserver.PropertyInfoBinding="{Binding CurrentSettingPropertyInfo,
                                                                           Mode=OneWayToSource}"
                            Background="Transparent">
                    <Label Content="DosBox/ScummVM Proxy Sleep"
                           Style="{StaticResource SliderHeaderStyle}" />
                    <!--<Viewbox Height="16"
                         Stretch="Fill">
                    <TextBlock Name="TbDosBoxScummVmProxySleep"
                               Text="DosBox/ScummVM Proxy Sleep" />
                </Viewbox>-->
                    <!--  LayoutTransform="{StaticResource FontStretchCondensed}"  -->
                    <Slider Name="SliderDosBoxScummVmProxySleepMs"
                            IsSnapToTickEnabled="True"
                            LargeChange="100"
                            Maximum="{Binding Path=DosBoxScummVmProxySleepMsValidRange.Maximum}"
                            Minimum="{Binding Path=DosBoxScummVmProxySleepMsValidRange.Minimum}"
                            SmallChange="100"
                            TickFrequency="100"
                            TickPlacement="BottomRight"
                            Value="{Binding Path=DosBoxScummVmProxySleepMs}" />
                    <Label Content="{Binding Path=DosBoxScummVmProxySleepMs,
                                             Converter={conv:SliderCaptionConverter},
                                             ConverterParameter=Millisecond,
                                             FallbackValue=400 Milliseconds}"
                           Style="{StaticResource SliderCaptionStyle}"
                           Tag="{Binding Path=IsDosBoxScummVmProxySleepMsInValidRange}" />
                </StackPanel>
            </StackPanel>
        </ScrollViewer>

        <Separator Grid.Row="3"
                   Grid.Column="0"
                   Grid.ColumnSpan="3"
                   Margin="0,-4,0,2"
                   VerticalAlignment="Center" />
        <TabControl Name="TabCtrlRightPanel"
                    Grid.Row="0"
                    Grid.Column="2">
            <TabItem x:Name="TabItemPlatformNames"
                     ut:MouseObserver.Observe="True"
                     ut:MouseObserver.PropertyInfo="{conv:PropertyInfoOf {Binding CustomPlatformNames}}"
                     ut:MouseObserver.PropertyInfoBinding="{Binding CurrentSettingPropertyInfo,
                                                                    Mode=OneWayToSource}"
                     Background="Transparent"
                     Header="Platform Names">
                <TabItem.Resources>
                    <Style BasedOn="{StaticResource {x:Type TabItem}}"
                           TargetType="{x:Type TabItem}">
                        <Setter Property="ToolTipService.ShowDuration"
                                Value="180000" />
                    </Style>
                </TabItem.Resources>
                <DataGrid Name="DgCustomPlatformNames"
                          HorizontalAlignment="Stretch"
                          VerticalAlignment="Stretch"
                          AutoGenerateColumns="False"
                          CanUserAddRows="True"
                          CanUserDeleteRows="True"
                          CanUserReorderColumns="False"
                          ItemsSource="{Binding Path=CustomPlatformNames,
                                                Mode=TwoWay}">
                    <DataGrid.Columns>
                        <DataGridTextColumn Width="Auto"
                                            Binding="{Binding Path=Name,
                                                              Mode=TwoWay}"
                                            Header="Original Platform Name" />
                        <DataGridTextColumn Width="*"
                                            Binding="{Binding Path=Custom,
                                                              Mode=TwoWay}"
                                            Header="Custom Platform Name" />
                    </DataGrid.Columns>
                </DataGrid>
            </TabItem>
            <TabItem x:Name="TabItemGameLaunchers"
                     ut:MouseObserver.Observe="True"
                     ut:MouseObserver.PropertyInfo="{conv:PropertyInfoOf {Binding LauncherToExeDefinitions}}"
                     ut:MouseObserver.PropertyInfoBinding="{Binding CurrentSettingPropertyInfo,
                                                                    Mode=OneWayToSource}"
                     Background="Transparent"
                     Header="Game Launchers">
                <TabItem.Resources>
                    <Style BasedOn="{StaticResource {x:Type TabItem}}"
                           TargetType="{x:Type TabItem}">
                        <Setter Property="ToolTipService.ShowDuration"
                                Value="180000" />
                    </Style>
                </TabItem.Resources>
                <DataGrid Name="DgLauncherToExeDefinitions"
                          HorizontalAlignment="Stretch"
                          VerticalAlignment="Stretch"
                          AutoGenerateColumns="False"
                          CanUserAddRows="True"
                          CanUserDeleteRows="True"
                          CanUserReorderColumns="False"
                          ItemsSource="{Binding Path=LauncherToExeDefinitions,
                                                Mode=TwoWay}">
                    <DataGrid.Columns>
                        <DataGridCheckBoxColumn Width="Auto"
                                                Binding="{Binding Path=Enable}"
                                                Header="Enable" />
                        <DataGridTextColumn Width="*"
                                            Binding="{Binding Path=LauncherFilename}"
                                            Header="Launcher Executable" />
                        <DataGridTextColumn Width="*"
                                            Binding="{Binding Path=TargetFilename}"
                                            Header="Started by Launcher" />
                    </DataGrid.Columns>
                </DataGrid>
            </TabItem>
            <TabItem x:Name="TabItemSelectiveUse"
                     ut:MouseObserver.Observe="True"
                     ut:MouseObserver.PropertyInfo="{conv:PropertyInfoOf {Binding Filtering}}"
                     ut:MouseObserver.PropertyInfoBinding="{Binding CurrentSettingPropertyInfo,
                                                                    Mode=OneWayToSource}"
                     Background="Transparent"
                     Header="Selective Use">
                <TabItem.Resources>
                    <Style BasedOn="{StaticResource {x:Type TabItem}}"
                           TargetType="{x:Type TabItem}">
                        <Setter Property="ToolTipService.ShowDuration"
                                Value="180000" />
                    </Style>
                </TabItem.Resources>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <GroupBox x:Name="GroupBoxFilterMode"
                              Grid.Row="0"
                              Background="Transparent"
                              Header="Filter Mode">
                        <Grid ut:MouseObserver.Observe="True"
                              ut:MouseObserver.PropertyInfo="{conv:PropertyInfoOf {Binding FilterMode}}"
                              ut:MouseObserver.PropertyInfoBinding="{Binding CurrentSettingPropertyInfo,
                                                                             Mode=OneWayToSource}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="6" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="20" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="6" />
                            </Grid.ColumnDefinitions>
                            <ComboBox Name="CmbFilterMode"
                                      Grid.Column="1"
                                      Margin="0,6,0,6"
                                      DisplayMemberPath="Item2"
                                      ItemsSource="{Binding Path=FilterMode,
                                                            Converter={conv:EnumToCollectionConverter},
                                                            Mode=OneTime}"
                                      SelectedValue="{Binding Path=FilterMode}"
                                      SelectedValuePath="Item1" />
                            <CheckBox x:Name="CheckBoxIgnoreCustomFields"
                                      Grid.Column="3"
                                      Content="Ignore Custom Fields"
                                      IsChecked="{Binding Filtering.IgnoreCustomFields}" />
                        </Grid>
                    </GroupBox>
                    <GroupBox x:Name="GroupBoxFiltersList"
                              Grid.Row="1"
                              ut:MouseObserver.Observe="True"
                              ut:MouseObserver.PropertyInfo="{conv:PropertyInfoOf {Binding Filters}}"
                              ut:MouseObserver.PropertyInfoBinding="{Binding CurrentSettingPropertyInfo,
                                                                             Mode=OneWayToSource}"
                              Background="Transparent"
                              Header="Filters List">
                        <DataGrid Name="DgFilters"
                                  HorizontalAlignment="Stretch"
                                  VerticalAlignment="Stretch"
                                  AutoGenerateColumns="False"
                                  CanUserAddRows="True"
                                  CanUserDeleteRows="True"
                                  CanUserReorderColumns="False"
                                  ItemsSource="{Binding Path=Filters,
                                                        Mode=TwoWay}">
                            <DataGrid.Columns>
                                <DataGridCheckBoxColumn Width="Auto"
                                                        Binding="{Binding Path=Enable}"
                                                        Header="Enable" />
                                <DataGridTextColumn Width="2*"
                                                    Binding="{Binding Path=Description}"
                                                    Header="Description (optional)" />
                                <DataGridTextColumn Width="3*"
                                                    Binding="{Binding Path=FilterString}"
                                                    Header="Filter String" />
                                <DataGridComboBoxColumn Width="160"
                                                        DisplayMemberPath="Item2"
                                                        Header="Filter Type"
                                                        SelectedValueBinding="{Binding FilterType}"
                                                        SelectedValuePath="Item1">
                                    <DataGridComboBoxColumn.ElementStyle>
                                        <Style TargetType="ComboBox">
                                            <Setter Property="ItemsSource"
                                                    Value="{Binding FilterType,
                                                                    Converter={conv:EnumToCollectionConverter}}" />
                                        </Style>
                                    </DataGridComboBoxColumn.ElementStyle>
                                    <DataGridComboBoxColumn.EditingElementStyle>
                                        <Style TargetType="ComboBox">
                                            <Setter Property="ItemsSource"
                                                    Value="{Binding FilterType,
                                                                    Converter={conv:EnumToCollectionConverter}}" />
                                        </Style>
                                    </DataGridComboBoxColumn.EditingElementStyle>
                                </DataGridComboBoxColumn>
                            </DataGrid.Columns>
                        </DataGrid>
                    </GroupBox>
                </Grid>
            </TabItem>
            <TabItem x:Name="TabItemMisc"
                     Header="Miscellaneous">
                <TabItem.Resources>
                    <Style BasedOn="{StaticResource {x:Type TabItem}}"
                           TargetType="{x:Type TabItem}">
                        <Setter Property="ToolTipService.ShowDuration"
                                Value="180000" />
                    </Style>
                    <Style BasedOn="{StaticResource {x:Type GroupBox}}"
                           TargetType="GroupBox">
                        <Setter Property="Margin"
                                Value="2" />
                    </Style>
                    <Style BasedOn="{StaticResource {x:Type Button}}"
                           TargetType="Button">
                        <Setter Property="Margin"
                                Value="0,4,0,0" />
                        <Setter Property="Padding"
                                Value="15,2" />
                    </Style>
                </TabItem.Resources>
                <StackPanel Orientation="Vertical">
                    <GroupBox x:Name="GroupBoxDosBoxPath"
                              ut:MouseObserver.Observe="True"
                              ut:MouseObserver.PropertyInfo="{conv:PropertyInfoOf {Binding DosBoxExePath}}"
                              ut:MouseObserver.PropertyInfoBinding="{Binding CurrentSettingPropertyInfo,
                                                                             Mode=OneWayToSource}"
                              Background="Transparent"
                              Header="DOSBox Path">
                        <StackPanel Orientation="Vertical">
                            <TextBox Style="{StaticResource MiscFilePathTextBox}"
                                     Text="{Binding Path=DosBoxExePath,
                                                    FallbackValue=ThirdParty\\DOSBox\\DOSBox.exe,
                                                    UpdateSourceTrigger=LostFocus,
                                                    ValidatesOnDataErrors=True,
                                                    ValidatesOnNotifyDataErrors=True}" />
                            <Button HorizontalAlignment="Left"
                                    CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}},
                                                               Path=DialogWindow}"
                                    Command="{Binding Path=SelectDosBoxPathCommand}"
                                    Content="Browse" />
                        </StackPanel>
                    </GroupBox>
                    <GroupBox x:Name="GroupBoxScummVmPath"
                              ut:MouseObserver.Observe="True"
                              ut:MouseObserver.PropertyInfo="{conv:PropertyInfoOf {Binding ScummVmExePath}}"
                              ut:MouseObserver.PropertyInfoBinding="{Binding CurrentSettingPropertyInfo,
                                                                             Mode=OneWayToSource}"
                              Background="Transparent"
                              Header="ScummVM Path">
                        <StackPanel Orientation="Vertical">
                            <TextBox Style="{StaticResource MiscFilePathTextBox}"
                                     Text="{Binding Path=ScummVmExePath,
                                                    FallbackValue=ThirdParty\\ScummVM\\scummvm.exe,
                                                    UpdateSourceTrigger=LostFocus,
                                                    ValidatesOnDataErrors=True,
                                                    ValidatesOnNotifyDataErrors=True}" />
                            <Button HorizontalAlignment="Left"
                                    CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}},
                                                               Path=DialogWindow}"
                                    Command="{Binding Path=SelectScummVmPathCommand}"
                                    Content="Browse" />
                        </StackPanel>
                    </GroupBox>
                    <GroupBox x:Name="GroupBoxVTableInfo"
                              Background="Transparent"
                              Header="VTables">
                        <StackPanel Orientation="Vertical">
                            <DockPanel>
                                <CheckBox Name="ChkEnableAutoUpdateOnline"
                                          HorizontalAlignment="Left"
                                          ut:MouseObserver.Observe="True"
                                          ut:MouseObserver.PropertyInfo="{conv:PropertyInfoOf {Binding AutoUpdateVTables}}"
                                          ut:MouseObserver.PropertyInfoBinding="{Binding CurrentSettingPropertyInfo,
                                                                                         Mode=OneWayToSource}"
                                          Content="Automatic Online Updates"
                                          IsChecked="{Binding Path=AutoUpdateVTables,
                                                              FallbackValue=True}" />
                                <Button Margin="0,2"
                                        HorizontalAlignment="Right"
                                        Command="{Binding ForceUpdateCommand}"
                                        ut:MouseObserver.Observe="True"
                                        ut:MouseObserver.PropertyInfo="{conv:PropertyInfoOf {Binding ForceUpdateCommand}}"
                                        ut:MouseObserver.PropertyInfoBinding="{Binding CurrentSettingPropertyInfo,
                                                                                       Mode=OneWayToSource}"
                                        Content="Force Update" />
                            </DockPanel>

                            <Label HorizontalAlignment="Center"
                                   ut:MouseObserver.Observe="True"
                                   ut:MouseObserver.PropertyInfo="{conv:PropertyInfoOf {Binding OnlineDbLastUpdatedLocalDateTime}}"
                                   ut:MouseObserver.PropertyInfoBinding="{Binding CurrentSettingPropertyInfo,
                                                                                  Mode=OneWayToSource}"
                                   Content="{Binding OnlineDbLastUpdatedLocalFormattedString,
                                                     FallbackValue=Online DB Last Updated: 5/18/2021 3:02:00 AM}"
                                   Visibility="{Binding OnlineDbLastUpdatedLocalFormattedString,
                                                        Converter={conv:NullToVisibilityConverter},
                                                        FallbackValue=Visible}" />
                        </StackPanel>



                        <!--<GroupBox x:Name="GroupBoxGetIClientShortcuts"
                                      ut:MouseObserver.Observe="True"
                                      ut:MouseObserver.PropertyInfo="{conv:PropertyInfoOf {Binding GetIClientShortcutsIndex}}"
                                      ut:MouseObserver.PropertyInfoBinding="{Binding CurrentSettingPropertyInfo,
                                                                                     Mode=OneWayToSource}"
                                      Background="Transparent"
                                      Header="'GetIClientShortcuts' Vtable Index">
                                <TextBox IsReadOnly="{Binding Path=AutoUpdateVTables,
                                                              FallbackValue=False}"
                                         MaxLength="3"
                                         Style="{StaticResource NumericTextBox}"
                                         Text="{Binding Path=GetIClientShortcutsIndex,
                                                        FallbackValue=55,
                                                        UpdateSourceTrigger=LostFocus,
                                                        ValidatesOnDataErrors=True,
                                                        ValidatesOnNotifyDataErrors=True}" />
                            </GroupBox>
                            <GroupBox x:Name="GroupBoxBetaGetIClientShortcuts"
                                      ut:MouseObserver.Observe="True"
                                      ut:MouseObserver.PropertyInfo="{conv:PropertyInfoOf {Binding BetaGetIClientShortcutsIndex}}"
                                      ut:MouseObserver.PropertyInfoBinding="{Binding CurrentSettingPropertyInfo,
                                                                                     Mode=OneWayToSource}"
                                      Background="Transparent"
                                      Header="Beta 'GetIClientShortcuts' Vtable Index">
                                <TextBox IsReadOnly="{Binding Path=AutoUpdateVTables,
                                                              FallbackValue=False}"
                                         MaxLength="3"
                                         Style="{StaticResource NumericTextBox}"
                                         Text="{Binding Path=BetaGetIClientShortcutsIndex,
                                                        FallbackValue=55,
                                                        UpdateSourceTrigger=LostFocus,
                                                        ValidatesOnDataErrors=True,
                                                        ValidatesOnNotifyDataErrors=True}" />
                            </GroupBox>-->

                    </GroupBox>
                </StackPanel>
            </TabItem>
        </TabControl>
        <GroupBox Grid.Row="2"
                  Grid.Column="2"
                  Margin="0,0,0,4"
                  Header="Description">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <TextBox x:Name="TxtBoxDescriptionHeader"
                         Grid.Row="0"
                         BorderThickness="1,1,1,0"
                         FontSize="14"
                         FontWeight="Bold"
                         IsReadOnly="True"
                         Text="{Binding CurrentSettingName,
                                        Mode=OneWay}" />
                <TextBox x:Name="TxtBoxDescriptionBody"
                         Grid.Row="1"
                         Padding="0,4,0,0"
                         BorderThickness="1,0,1,0"
                         IsReadOnly="True"
                         Text="{Binding CurrentSettingDescription,
                                        Mode=OneWay}"
                         TextWrapping="Wrap" />
                <TextBox x:Name="TxtBoxDescriptionFooter"
                         Grid.Row="2"
                         Padding="0,4,0,0"
                         BorderThickness="1,0,1,1"
                         FontWeight="Bold"
                         IsReadOnly="True"
                         Text="{Binding CurrentSettingFootnote,
                                        Mode=OneWay}"
                         TextWrapping="Wrap" />
            </Grid>
        </GroupBox>
        <DockPanel Grid.Row="4"
                   Grid.Column="0"
                   Grid.ColumnSpan="3">
            <Label Content="SteamLauncher:" />
            <Label Name="LblSteamLauncherStatus"
                   Margin="0,0,0,0"
                   Content="{conv:SwitchBinding UniversalSteamLaunching,
                                                Enabled,
                                                Disabled}"
                   Foreground="{Binding Path=UniversalSteamLaunching,
                                        Converter={conv:BoolToForegroundConverter}}" />
            <Separator Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" />
            <Label Margin="0,0,0,0"
                   Content="Steam:" />
            <Label Name="LblSteamStatus"
                   Content="{Binding Path=SteamStatus.Status,
                                     FallbackValue=Running}"
                   DataContext="{Binding SteamStatusTimer}"
                   Foreground="{Binding Path=SteamStatus.Color,
                                        FallbackValue=LimeGreen}" />
            <Button Name="BtnResetToDefaults"
                    Width="140"
                    Margin="0,0,0,0"
                    HorizontalAlignment="Right"
                    Command="{Binding Path=SetDefaultsCommand}"
                    Content="Reset to Defaults"
                    DockPanel.Dock="Right"
                    ToolTip="Reset all config entries to default values." />
            <Button Name="BtnCancel"
                    Width="104"
                    Margin="0,0,4,0"
                    HorizontalAlignment="Right"
                    Content="Cancel"
                    DockPanel.Dock="Right"
                    IsCancel="True"
                    ToolTip="Discard changes and exit." />
            <Button Name="BtnSave"
                    Width="104"
                    Margin="0,0,4,0"
                    HorizontalAlignment="Right"
                    CommandParameter="{Binding ElementName=WindowSettings}"
                    Command="{Binding Path=SaveConfigCommand}"
                    Content="Save"
                    DockPanel.Dock="Right"
                    ToolTip="Save changes to the config file." />
        </DockPanel>
    </Grid>

</Window>