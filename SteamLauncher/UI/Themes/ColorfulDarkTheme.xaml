<ResourceDictionary x:Class="SteamLauncher.UI.Themes.ColorfulDarkTheme"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2">
    <!--  Window Colors. Background, Border and TitleBar Colors.  -->
    <SolidColorBrush x:Key="BackgroundColor"
                     Color="#FF191919" />
    <SolidColorBrush x:Key="WindowBorderColor"
                     Color="#FF2A2A2A" />
    <SolidColorBrush x:Key="WindowTitleColor"
                     Color="#FF242424" />
    <!--  Control color themes. Do not mess with them unless you are good at styles.  -->
    <!--  Complete DarkTheme Colors  -->
    <SolidColorBrush x:Key="TransparentBrush"
                     Color="Transparent" />
    <SolidColorBrush x:Key="ContainerBackground"
                     Color="#FF1D1D1D" />
    <SolidColorBrush x:Key="ContainerBorder"
                     Color="#FF212121" />
    <SolidColorBrush x:Key="ControlDefaultForeground"
                     Color="#FFEBEBEB" />

    <SolidColorBrush x:Key="ControlDarkerBackground"
                     Color="#FF202020" />
    <SolidColorBrush x:Key="ControlDarkerBorderBrush"
                     Color="#FF252525" />
    <SolidColorBrush x:Key="ControlDefaultBackground"
                     Color="#FF232323" />
    <SolidColorBrush x:Key="ControlDefaultBorderBrush"
                     Color="#FF282828" />
    <SolidColorBrush x:Key="ControlBrightDefaultBackground"
                     Color="#FF2A2A2A" />
    <SolidColorBrush x:Key="ControlBrightDefaultBorderBrush"
                     Color="#FF323232" />
    <SolidColorBrush x:Key="ControlDisabledBackground"
                     Color="#FF383838" />
    <SolidColorBrush x:Key="ControlDisabledBorderBrush"
                     Color="#FF3C3C3C" />
    <SolidColorBrush x:Key="ControlMouseOverBackground"
                     Color="#FF353535" />
    <SolidColorBrush x:Key="ControlMouseOverBorderBrush"
                     Color="#FF373737" />
    <SolidColorBrush x:Key="ControlSelectedBackground"
                     Color="#FF282828" />
    <SolidColorBrush x:Key="ControlSelectedBorderBrush"
                     Color="#FF2D2D2D" />
    <SolidColorBrush x:Key="ControlSelectedMouseOverBackground"
                     Color="#FF353535" />
    <SolidColorBrush x:Key="ControlSelectedMouseOverBorderBrush"
                     Color="#FF383838" />
    <SolidColorBrush x:Key="ControlGlyphColor"
                     Color="#FFEBEBEB" />
    <SolidColorBrush x:Key="ControlMouseOverGlyphColor"
                     Color="#FFD7D7D7" />
    <SolidColorBrush x:Key="ControlSelectedGlyphColor"
                     Color="#FFC8C8C8" />
    <SolidColorBrush x:Key="ControlDisabledGlyphColor"
                     Color="#FFA0A0A0" />

    <!--  Colorful theme  Colors  -->

    <SolidColorBrush x:Key="ControlPrimaryDarkerBackground"
                     Color="#FF1565C0" />
    <SolidColorBrush x:Key="ControlPrimaryDarkerBorderBrush"
                     Color="#FF1976D2" />
    <SolidColorBrush x:Key="ControlPrimaryDefaultBackground"
                     Color="#FF2084E8" />
    <SolidColorBrush x:Key="ControlPrimaryDefaultBorderBrush"
                     Color="#FF3294E8" />
    <SolidColorBrush x:Key="ControlPrimaryBrightDefaultBackground"
                     Color="#FF3296FA" />
    <SolidColorBrush x:Key="ControlPrimaryBrightDefaultBorderBrush"
                     Color="#FF50A4FA" />
    <SolidColorBrush x:Key="ControlPrimaryDisabledBackground"
                     Color="#FF3278C8" />
    <SolidColorBrush x:Key="ControlPrimaryDisabledBorderBrush"
                     Color="#FF3C78C8" />
    <SolidColorBrush x:Key="ControlPrimaryMouseOverBackground"
                     Color="#FF208CF0" />
    <SolidColorBrush x:Key="ControlPrimaryMouseOverBorderBrush"
                     Color="#FF2896F5" />
    <SolidColorBrush x:Key="ControlPrimarySelectedBackground"
                     Color="#FF1482DC" />
    <SolidColorBrush x:Key="ControlPrimarySelectedBorderBrush"
                     Color="#FF28A0F0" />
    <SolidColorBrush x:Key="ControlPrimarySelectedMouseOverBackground"
                     Color="#FF1484D1" />
    <SolidColorBrush x:Key="ControlPrimarySelectedMouseOverBorderBrush"
                     Color="#FF1491E8" />
    <SolidColorBrush x:Key="ControlPrimaryCaretSelectionBackground"
                     Color="#FF3297E8" />
    <SolidColorBrush x:Key="ControlPrimaryCaretBackground"
                     Color="#FF1992F1" />
    <SolidColorBrush x:Key="ControlPrimaryGlyphColor"
                     Color="#FF1E88E5" />
    <SolidColorBrush x:Key="ControlPrimaryMouseOverGlyphColor"
                     Color="#FF2196F3" />
    <SolidColorBrush x:Key="ControlPrimarySelectedGlyphColor"
                     Color="#FF42A5F5" />
    <SolidColorBrush x:Key="ControlPrimarySelectedMouseOverGlyphColor"
                     Color="#FF339AF7" />
    <SolidColorBrush x:Key="ControlPrimaryDisabledGlyphColor"
                     Color="#FF081E3C" />

    <SolidColorBrush x:Key="ControlBrightPrimaryColorBorderBrush"
                     Color="#FF50A4FA" />


    <!--  Expression Colors  -->

    <!--  Theme  -->

    <!--  Original  -->
    <!--<LinearGradientBrush x:Key="ThemeBackgroundBrush" StartPoint="0.5,1" EndPoint="0.5,0">
        <GradientStop Offset="0" Color="#FF171717" />
        <GradientStop Offset="1" Color="#FF0A0A0A" />
    </LinearGradientBrush>-->

    <!--  Modified  -->
    <!--<LinearGradientBrush x:Key="ThemeBackgroundBrush"
                         StartPoint="0.5,1"
                         EndPoint="0.5,0">
        <GradientStop Offset="0"
                      Color="{Binding Source={StaticResource ControlDefaultBackground},Path=Color}" />
        <GradientStop Offset="1"
                      Color="{Binding Source={StaticResource ControlDarkerBackground},Path=Color}" />
    </LinearGradientBrush>-->

    <!--<SolidColorBrush x:Key="ThemeForegroundBrush"
                     Color="White" />-->

    <!--  EXPRESSION DARK VALUES  -->

    <!--<SolidColorBrush x:Key="TextBrush"
                     Color="#FFFFFFFF" />
    <Color x:Key="TextColor">#FFFFFFFF</Color>-->

    <!--<SolidColorBrush x:Key="NormalBrush"
                     Color="#FF595959" />
    <SolidColorBrush x:Key="NormalBorderBrush"
                     Color="#FF333333" />
    <SolidColorBrush x:Key="HoverBrush"
                     Color="#FF393939" />-->

    <SolidColorBrush x:Key="NormalBrush"
                     Color="{Binding Source={StaticResource ControlDefaultBackground},
                                     Path=Color}" />
    <SolidColorBrush x:Key="NormalBorderBrush"
                     Color="{Binding Source={StaticResource ControlDefaultBorderBrush},
                                     Path=Color}" />
    <SolidColorBrush x:Key="HoverBrush"
                     Color="{Binding Source={StaticResource ControlMouseOverBackground},
                                     Path=Color}" />

    <SolidColorBrush x:Key="GlyphBrush"
                     Color="{Binding Source={StaticResource ControlGlyphColor},
                                     Path=Color}" />

    <LinearGradientBrush x:Key="PressedBrush" StartPoint="0.5,0.042" EndPoint="0.5,0.971">
        <GradientStop Offset="0" Color="#4C000000" />
        <GradientStop Offset="1" Color="#26FFFFFF" />
        <GradientStop Offset="0.467" Color="#4C000000" />
        <GradientStop Offset="0.479" Color="#26FFFFFF" />
    </LinearGradientBrush>


    <!--<SolidColorBrush x:Key="ControlBackgroundBrush"
                     Color="#FF333333" />-->

    <!--<LinearGradientBrush x:Key="SelectedBackgroundBrush" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Color="#FFFFFFFF" />
        <GradientStop Offset="1" Color="#FF737373" />
    </LinearGradientBrush>-->

    <LinearGradientBrush x:Key="SelectedBackgroundBrush" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Color="{Binding Source={StaticResource ControlPrimarySelectedBackground}, Path=Color}" />
        <GradientStop Offset="1" Color="{Binding Source={StaticResource ControlPrimarySelectedGlyphColor}, Path=Color}" />
    </LinearGradientBrush>

    <SolidColorBrush x:Key="DisabledForegroundBrush"
                     Color="#888" />
    <SolidColorBrush x:Key="DisabledBackgroundBrush"
                     Color="#FF787878" />
    <SolidColorBrush x:Key="DisabledBorderBrush"
                     Color="#AAA" />
    <SolidColorBrush x:Key="WindowBackgroundBrush"
                     Color="#FF595959" />

    <!--  EXPRESSION COMMON VALUES  -->

    <LinearGradientBrush x:Key="ShineBrush" StartPoint="0.5,0.042" EndPoint="0.5,0.971">
        <GradientStop Offset="0" Color="#59FFFFFF" />
        <GradientStop Offset="1" Color="#00FFFFFF" />
        <GradientStop Offset="0.467" Color="#26FFFFFF" />
        <GradientStop Offset="0.475" Color="#00FFFFFF" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="HoverShineBrush" StartPoint="0.5,0.042" EndPoint="0.5,0.971">
        <GradientStop Offset="0" Color="#4CFFFFFF" />
        <GradientStop Offset="1" Color="#26FFFFFF" />
        <GradientStop Offset="0.467" Color="#26FFFFFF" />
        <GradientStop Offset="0.475" Color="#00FFFFFF" />
        <GradientStop Offset="0.856" Color="#00FFFFFF" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="PressedBorderBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Offset="0.0" Color="#444" />
        <GradientStop Offset="1.0" Color="#888" />
    </LinearGradientBrush>


    <!--  End Expression Colors  -->



    <!--  Setup Stuff  -->

    <!--  Focus Visual  -->
    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2"
                               SnapsToDevicePixels="true"
                               Stroke="{StaticResource ControlBrightPrimaryColorBorderBrush}"
                               StrokeDashArray="1 2"
                               StrokeThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  -_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-  -->

    <!--  RepeatButton  -->
    <Style x:Key="RepeatButtonTransparent"
           TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle"
                Value="true" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="Focusable"
                Value="false" />
        <Setter Property="IsTabStop"
                Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle Width="{TemplateBinding Width}"
                               Height="{TemplateBinding Height}"
                               Fill="{TemplateBinding Background}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  -_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-  -->

    <!--  Controls all in Order in toolbox  -->

    <!--  Button  -->
    <Style TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle"
                Value="{StaticResource FocusVisual}" />
        <Setter Property="Background"
                Value="{StaticResource ControlDefaultBackground}" />
        <Setter Property="BorderBrush"
                Value="{StaticResource ControlDefaultBorderBrush}" />
        <Setter Property="Foreground"
                Value="{StaticResource ControlDefaultForeground}" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Padding"
                Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter"
                                          Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          Focusable="False"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter TargetName="border"
                                    Property="BorderBrush"
                                    Value="{StaticResource ControlMouseOverBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border"
                                    Property="Background"
                                    Value="{StaticResource ControlPrimaryMouseOverBackground}" />
                            <Setter TargetName="border"
                                    Property="BorderBrush"
                                    Value="{StaticResource ControlPrimaryMouseOverBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="border"
                                    Property="Background"
                                    Value="{StaticResource ControlPrimarySelectedBackground}" />
                            <Setter TargetName="border"
                                    Property="BorderBrush"
                                    Value="{StaticResource ControlPrimarySelectedBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="border"
                                    Property="Background"
                                    Value="{StaticResource ControlBrightDefaultBackground}" />
                            <Setter TargetName="border"
                                    Property="BorderBrush"
                                    Value="{StaticResource ControlBrightDefaultBorderBrush}" />
                            <Setter TargetName="contentPresenter"
                                    Property="TextElement.Foreground"
                                    Value="{StaticResource ControlDisabledGlyphColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RoundedCorners"
           TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle"
                Value="{StaticResource FocusVisual}" />
        <Setter Property="Background"
                Value="{StaticResource ControlDefaultBackground}" />
        <Setter Property="BorderBrush"
                Value="{StaticResource ControlDefaultBorderBrush}" />
        <Setter Property="Foreground"
                Value="{StaticResource ControlDefaultForeground}" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Padding"
                Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="2"
                            SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter"
                                          Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          Focusable="False"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter TargetName="border"
                                    Property="BorderBrush"
                                    Value="{StaticResource ControlMouseOverBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border"
                                    Property="Background"
                                    Value="{StaticResource ControlPrimaryMouseOverBackground}" />
                            <Setter TargetName="border"
                                    Property="BorderBrush"
                                    Value="{StaticResource ControlPrimaryMouseOverBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="border"
                                    Property="Background"
                                    Value="{StaticResource ControlPrimarySelectedBackground}" />
                            <Setter TargetName="border"
                                    Property="BorderBrush"
                                    Value="{StaticResource ControlPrimarySelectedBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="border"
                                    Property="Background"
                                    Value="{StaticResource ControlBrightDefaultBackground}" />
                            <Setter TargetName="border"
                                    Property="BorderBrush"
                                    Value="{StaticResource ControlBrightDefaultBorderBrush}" />
                            <Setter TargetName="contentPresenter"
                                    Property="TextElement.Foreground"
                                    Value="{StaticResource ControlDisabledGlyphColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  -_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-  -->

    <!--  Calendar  -->
    <Style TargetType="{x:Type Calendar}">
        <Setter Property="Foreground"
                Value="{DynamicResource ControlDefaultForeground}" />
        <Setter Property="Background"
                Value="{DynamicResource ControlDefaultBackground}" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource ControlDefaultBorderBrush}" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Calendar}">
                    <StackPanel x:Name="PART_Root"
                                HorizontalAlignment="Center">
                        <CalendarItem x:Name="PART_CalendarItem"
                                      Background="{TemplateBinding Background}"
                                      BorderBrush="{TemplateBinding BorderBrush}"
                                      BorderThickness="{TemplateBinding BorderThickness}" />
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type CalendarItem}">
        <Setter Property="Margin"
                Value="0,3,0,3" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CalendarItem}">
                    <ControlTemplate.Resources>
                        <DataTemplate x:Key="{x:Static CalendarItem.DayTitleTemplateResourceKey}">
                            <TextBlock Margin="0,6,0,6"
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Center"
                                       FontFamily="Verdana"
                                       FontSize="9.5"
                                       FontWeight="Bold"
                                       Foreground="{DynamicResource ControlDefaultForeground}"
                                       Text="{Binding}" />
                        </DataTemplate>
                    </ControlTemplate.Resources>
                    <Grid x:Name="PART_Root">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="1">
                            <Border BorderBrush="Transparent"
                                    BorderThickness="2"
                                    CornerRadius="1">
                                <Grid>
                                    <Grid.Resources>
                                        <ControlTemplate x:Key="PreviousButtonTemplate"
                                                         TargetType="{x:Type Button}">
                                            <Grid Cursor="Hand">
                                                <Rectangle Fill="#11E5EBF1"
                                                           Opacity="1"
                                                           Stretch="Fill" />
                                                <Grid>
                                                    <Path x:Name="path"
                                                          Width="6"
                                                          Height="10"
                                                          Margin="14,-6,0,0"
                                                          HorizontalAlignment="Left"
                                                          VerticalAlignment="Center"
                                                          Data="M288.75,232.25 L288.75,240.625 L283,236.625 z"
                                                          Fill="#FF333333"
                                                          Stretch="Fill" />
                                                </Grid>
                                                <VisualStateManager.VisualStateGroups>
                                                    <VisualStateGroup x:Name="CommonStates">
                                                        <VisualState x:Name="Normal" />
                                                        <VisualState x:Name="MouseOver">
                                                            <Storyboard>
                                                                <ColorAnimation Storyboard.TargetName="path"
                                                                                Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)"
                                                                                To="#FF73A9D8"
                                                                                Duration="0" />
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="Disabled">
                                                            <Storyboard>
                                                                <DoubleAnimation Storyboard.TargetName="path"
                                                                                 Storyboard.TargetProperty="(Shape.Fill).(Brush.Opacity)"
                                                                                 To=".5"
                                                                                 Duration="0" />
                                                            </Storyboard>
                                                        </VisualState>
                                                    </VisualStateGroup>
                                                </VisualStateManager.VisualStateGroups>
                                            </Grid>
                                        </ControlTemplate>
                                        <ControlTemplate x:Key="NextButtonTemplate"
                                                         TargetType="{x:Type Button}">
                                            <Grid Cursor="Hand">
                                                <Rectangle Fill="#11E5EBF1"
                                                           Opacity="1"
                                                           Stretch="Fill" />
                                                <Grid>
                                                    <Path x:Name="path"
                                                          Width="6"
                                                          Height="10"
                                                          Margin="0,-6,14,0"
                                                          HorizontalAlignment="Right"
                                                          VerticalAlignment="Center"
                                                          Data="M282.875,231.875 L282.875,240.375 L288.625,236 z"
                                                          Fill="#FF333333"
                                                          Stretch="Fill" />
                                                </Grid>
                                                <VisualStateManager.VisualStateGroups>
                                                    <VisualStateGroup x:Name="CommonStates">
                                                        <VisualState x:Name="Normal" />
                                                        <VisualState x:Name="MouseOver">
                                                            <Storyboard>
                                                                <ColorAnimation Storyboard.TargetName="path"
                                                                                Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)"
                                                                                To="#FF73A9D8"
                                                                                Duration="0" />
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="Disabled">
                                                            <Storyboard>
                                                                <DoubleAnimation Storyboard.TargetName="path"
                                                                                 Storyboard.TargetProperty="(Shape.Fill).(Brush.Opacity)"
                                                                                 To=".5"
                                                                                 Duration="0" />
                                                            </Storyboard>
                                                        </VisualState>
                                                    </VisualStateGroup>
                                                </VisualStateManager.VisualStateGroups>
                                            </Grid>
                                        </ControlTemplate>
                                        <ControlTemplate x:Key="HeaderButtonTemplate"
                                                         TargetType="{x:Type Button}">
                                            <Grid Cursor="Hand">
                                                <ContentPresenter x:Name="buttonContent"
                                                                  Margin="1,4,1,9"
                                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                  Content="{TemplateBinding Content}"
                                                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                  TextElement.Foreground="#FF333333" />
                                                <VisualStateManager.VisualStateGroups>
                                                    <VisualStateGroup x:Name="CommonStates">
                                                        <VisualState x:Name="Normal" />
                                                        <VisualState x:Name="MouseOver">
                                                            <Storyboard>
                                                                <ColorAnimation Storyboard.TargetName="buttonContent"
                                                                                Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)"
                                                                                To="#FF73A9D8"
                                                                                Duration="0" />
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="Disabled">
                                                            <Storyboard>
                                                                <DoubleAnimation Storyboard.TargetName="buttonContent"
                                                                                 Storyboard.TargetProperty="Opacity"
                                                                                 To=".5"
                                                                                 Duration="0" />
                                                            </Storyboard>
                                                        </VisualState>
                                                    </VisualStateGroup>
                                                </VisualStateManager.VisualStateGroups>
                                            </Grid>
                                        </ControlTemplate>
                                    </Grid.Resources>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>
                                    <Button x:Name="PART_PreviousButton"
                                            Grid.Row="0"
                                            Grid.Column="0"
                                            Width="28"
                                            Height="20"
                                            HorizontalAlignment="Left"
                                            Focusable="False"
                                            Template="{StaticResource PreviousButtonTemplate}" />
                                    <Button x:Name="PART_HeaderButton"
                                            Grid.Row="0"
                                            Grid.Column="1"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            Focusable="False"
                                            FontSize="10.5"
                                            FontWeight="Bold"
                                            Template="{StaticResource HeaderButtonTemplate}" />
                                    <Button x:Name="PART_NextButton"
                                            Grid.Row="0"
                                            Grid.Column="2"
                                            Width="28"
                                            Height="20"
                                            HorizontalAlignment="Right"
                                            Focusable="False"
                                            Template="{StaticResource NextButtonTemplate}" />
                                    <Grid x:Name="PART_MonthView"
                                          Grid.Row="1"
                                          Grid.ColumnSpan="3"
                                          Margin="6,-1,6,6"
                                          HorizontalAlignment="Center"
                                          Visibility="Visible">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>
                                    </Grid>
                                    <Grid x:Name="PART_YearView"
                                          Grid.Row="1"
                                          Grid.ColumnSpan="3"
                                          Margin="6,-3,7,6"
                                          HorizontalAlignment="Center"
                                          Visibility="Hidden">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>
                                    </Grid>
                                </Grid>
                            </Border>
                        </Border>
                        <Rectangle x:Name="PART_DisabledVisual"
                                   Fill="{StaticResource ControlDisabledGlyphColor}"
                                   Opacity="0"
                                   RadiusX="2"
                                   RadiusY="2"
                                   Stretch="Fill"
                                   Stroke="{StaticResource ControlDisabledGlyphColor}"
                                   StrokeThickness="1"
                                   Visibility="Collapsed" />
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PART_DisabledVisual"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1"
                                                         Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="PART_DisabledVisual"
                                    Property="Visibility"
                                    Value="Visible" />
                        </Trigger>
                        <DataTrigger Binding="{Binding DisplayMode,
                                                       RelativeSource={RelativeSource FindAncestor,
                                                                                      AncestorType={x:Type Calendar}}}"
                                     Value="Year">
                            <Setter TargetName="PART_MonthView"
                                    Property="Visibility"
                                    Value="Hidden" />
                            <Setter TargetName="PART_YearView"
                                    Property="Visibility"
                                    Value="Visible" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding DisplayMode,
                                                       RelativeSource={RelativeSource FindAncestor,
                                                                                      AncestorType={x:Type Calendar}}}"
                                     Value="Decade">
                            <Setter TargetName="PART_MonthView"
                                    Property="Visibility"
                                    Value="Hidden" />
                            <Setter TargetName="PART_YearView"
                                    Property="Visibility"
                                    Value="Visible" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  -_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-  -->

    <!--  CheckBox  -->

    <Style x:Key="OptionMarkFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="14,0,0,0"
                               SnapsToDevicePixels="true"
                               Stroke="{StaticResource ControlDefaultForeground}"
                               StrokeDashArray="1 2"
                               StrokeThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type CheckBox}">
        <Setter Property="MinHeight"
                Value="16" />
        <Setter Property="Height"
                Value="20" />
        <Setter Property="FocusVisualStyle"
                Value="{StaticResource FocusVisual}" />
        <Setter Property="Background"
                Value="{StaticResource ControlDefaultBackground}" />
        <Setter Property="BorderBrush"
                Value="{StaticResource ControlDefaultBorderBrush}" />
        <Setter Property="Foreground"
                Value="{StaticResource ControlDefaultForeground}" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid x:Name="templateRoot"
                          Margin="0"
                          Background="Transparent"
                          SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"
                                              MinWidth="16" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Border x:Name="checkBoxBorder"
                                Width="16"
                                Height="16"
                                Margin="0"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <Grid x:Name="markGrid">
                                <Path x:Name="optionMark"
                                      Margin="1"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      Data="F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z "
                                      Fill="{StaticResource ControlPrimaryGlyphColor}"
                                      Opacity="0"
                                      Stretch="None" />
                                <Rectangle x:Name="indeterminateMark"
                                           Margin="0"
                                           Fill="{StaticResource ControlPrimaryDarkerBackground}"
                                           Opacity="0" />
                            </Grid>
                        </Border>
                        <ContentPresenter x:Name="contentPresenter"
                                          Grid.Column="1"
                                          Margin="6,0,0,0"
                                          HorizontalAlignment="Left"
                                          VerticalAlignment="Center"
                                          Focusable="False"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent" Value="true">
                            <Setter Property="FocusVisualStyle"
                                    Value="{StaticResource OptionMarkFocusVisual}" />
                            <Setter Property="Padding"
                                    Value="4,-1,0,0" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="checkBoxBorder"
                                    Property="Background"
                                    Value="{StaticResource ControlMouseOverBackground}" />
                            <Setter TargetName="checkBoxBorder"
                                    Property="BorderBrush"
                                    Value="{StaticResource ControlMouseOverBorderBrush}" />
                            <Setter TargetName="optionMark"
                                    Property="Fill"
                                    Value="{StaticResource ControlPrimaryMouseOverGlyphColor}" />
                            <Setter TargetName="indeterminateMark"
                                    Property="Fill"
                                    Value="{StaticResource ControlPrimaryMouseOverGlyphColor}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="checkBoxBorder"
                                    Property="Background"
                                    Value="{StaticResource ControlDisabledBackground}" />
                            <Setter TargetName="checkBoxBorder"
                                    Property="BorderBrush"
                                    Value="{StaticResource ControlDisabledBorderBrush}" />
                            <Setter TargetName="optionMark"
                                    Property="Fill"
                                    Value="{StaticResource ControlPrimaryDisabledGlyphColor}" />
                            <Setter TargetName="indeterminateMark"
                                    Property="Fill"
                                    Value="{StaticResource ControlPrimaryDisabledGlyphColor}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="checkBoxBorder"
                                    Property="Background"
                                    Value="{StaticResource ControlSelectedBackground}" />
                            <Setter TargetName="checkBoxBorder"
                                    Property="BorderBrush"
                                    Value="{StaticResource ControlSelectedBorderBrush}" />
                            <Setter TargetName="optionMark"
                                    Property="Fill"
                                    Value="{StaticResource ControlPrimarySelectedGlyphColor}" />
                            <Setter TargetName="indeterminateMark"
                                    Property="Fill"
                                    Value="{StaticResource ControlPrimarySelectedGlyphColor}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="true" />
                                <Condition Property="IsPressed" Value="true" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="optionMark"
                                    Property="Fill"
                                    Value="{StaticResource ControlPrimarySelectedMouseOverGlyphColor}" />
                            <Setter TargetName="indeterminateMark"
                                    Property="Fill"
                                    Value="{StaticResource ControlPrimarySelectedMouseOverGlyphColor}" />
                        </MultiTrigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="optionMark"
                                    Property="Opacity"
                                    Value="1" />
                            <Setter TargetName="indeterminateMark"
                                    Property="Opacity"
                                    Value="0" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter TargetName="optionMark"
                                    Property="Opacity"
                                    Value="0" />
                            <Setter TargetName="indeterminateMark"
                                    Property="Opacity"
                                    Value="1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  -_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-  -->

    <!--  ComboBox and ComboBoxItems  -->
    <Style x:Key="ComboBoxToggleButton"
           TargetType="{x:Type ToggleButton}">
        <Setter Property="Background"
                Value="{StaticResource ControlDefaultBackground}" />
        <Setter Property="BorderBrush"
                Value="{StaticResource ControlDefaultBorderBrush}" />
        <Setter Property="Foreground"
                Value="{StaticResource ControlDefaultForeground}" />
        <Setter Property="OverridesDefaultStyle"
                Value="true" />
        <Setter Property="IsTabStop"
                Value="false" />
        <Setter Property="Focusable"
                Value="false" />
        <Setter Property="ClickMode"
                Value="Press" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="templateRoot"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true">
                        <Border x:Name="splitBorder"
                                Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"
                                Margin="0"
                                HorizontalAlignment="Right"
                                BorderBrush="Transparent"
                                BorderThickness="1,0,0,0"
                                SnapsToDevicePixels="true">
                            <Path x:Name="arrow"
                                  Margin="0"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  Data="F1 M 0,0 L 2.667,2.66665 L 5.3334,0 L 5.3334,-1.78168 L 2.6667,0.88501 L0,-1.78168 L0,0 Z"
                                  Fill="{StaticResource ControlGlyphColor}" />
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true" />
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false" />
                                <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false" />
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="templateRoot"
                                    Property="Background"
                                    Value="{StaticResource ControlDefaultBackground}" />
                            <Setter TargetName="templateRoot"
                                    Property="BorderBrush"
                                    Value="{StaticResource ControlDefaultBorderBrush}" />
                            <Setter TargetName="splitBorder"
                                    Property="Background"
                                    Value="{StaticResource ControlDefaultBackground}" />
                            <Setter TargetName="splitBorder"
                                    Property="BorderBrush"
                                    Value="{StaticResource ControlDefaultBorderBrush}" />
                        </MultiDataTrigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="arrow"
                                    Property="Fill"
                                    Value="{StaticResource ControlMouseOverGlyphColor}" />
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true" />
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="templateRoot"
                                    Property="Background"
                                    Value="{StaticResource ControlPrimaryMouseOverBackground}" />
                            <Setter TargetName="templateRoot"
                                    Property="BorderBrush"
                                    Value="{StaticResource ControlPrimaryMouseOverBorderBrush}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true" />
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="templateRoot"
                                    Property="Background"
                                    Value="{StaticResource ControlPrimaryMouseOverBackground}" />
                            <Setter TargetName="templateRoot"
                                    Property="BorderBrush"
                                    Value="{StaticResource ControlPrimaryMouseOverBorderBrush}" />
                            <Setter TargetName="splitBorder"
                                    Property="Background"
                                    Value="{StaticResource ControlPrimaryMouseOverBackground}" />
                            <Setter TargetName="splitBorder"
                                    Property="BorderBrush"
                                    Value="{StaticResource ControlPrimaryMouseOverBorderBrush}" />
                        </MultiDataTrigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="arrow"
                                    Property="Fill"
                                    Value="{StaticResource ControlSelectedBackground}" />
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true" />
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="templateRoot"
                                    Property="Background"
                                    Value="{StaticResource ControlPrimarySelectedBackground}" />
                            <Setter TargetName="templateRoot"
                                    Property="BorderBrush"
                                    Value="{StaticResource ControlPrimarySelectedBorderBrush}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true" />
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="templateRoot"
                                    Property="Background"
                                    Value="{StaticResource ControlPrimarySelectedBackground}" />
                            <Setter TargetName="templateRoot"
                                    Property="BorderBrush"
                                    Value="{StaticResource ControlPrimarySelectedBorderBrush}" />
                            <Setter TargetName="splitBorder"
                                    Property="Background"
                                    Value="{StaticResource ControlPrimarySelectedBackground}" />
                            <Setter TargetName="splitBorder"
                                    Property="BorderBrush"
                                    Value="{StaticResource ControlPrimarySelectedBorderBrush}" />
                        </MultiDataTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="arrow"
                                    Property="Fill"
                                    Value="{StaticResource ControlDisabledGlyphColor}" />
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false" />
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="templateRoot"
                                    Property="Background"
                                    Value="{StaticResource ControlDisabledBackground}" />
                            <Setter TargetName="templateRoot"
                                    Property="BorderBrush"
                                    Value="{StaticResource ControlDisabledBorderBrush}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false" />
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="templateRoot"
                                    Property="Background"
                                    Value="{StaticResource ControlDisabledBackground}" />
                            <Setter TargetName="templateRoot"
                                    Property="BorderBrush"
                                    Value="{StaticResource ControlDisabledBorderBrush}" />
                            <Setter TargetName="splitBorder"
                                    Property="Background"
                                    Value="{StaticResource ControlDisabledBackground}" />
                            <Setter TargetName="splitBorder"
                                    Property="BorderBrush"
                                    Value="{StaticResource ControlDisabledBorderBrush}" />
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="ComboBoxTemplate"
                     TargetType="{x:Type ComboBox}">
        <Grid x:Name="templateRoot"
              SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="0"
                                  MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
            </Grid.ColumnDefinitions>
            <Popup x:Name="PART_Popup"
                   Grid.ColumnSpan="2"
                   Margin="1"
                   AllowsTransparency="true"
                   IsOpen="{Binding IsDropDownOpen,
                                    Mode=TwoWay,
                                    RelativeSource={RelativeSource TemplatedParent}}"
                   Placement="Bottom"
                   PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                <Themes:SystemDropShadowChrome x:Name="shadow"
                                               MinWidth="{Binding ActualWidth,
                                                                  ElementName=templateRoot}"
                                               MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                               Color="Transparent">
                    <!--  Dropdown stuff  -->
                    <Border x:Name="dropDownBorder"
                            Background="{StaticResource ContainerBackground}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="1">
                        <ScrollViewer x:Name="DropDownScrollViewer">
                            <Grid x:Name="grid"
                                  RenderOptions.ClearTypeHint="Enabled">
                                <Canvas x:Name="canvas"
                                        Width="0"
                                        Height="0"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Top">
                                    <Rectangle x:Name="opaqueRect"
                                               Width="{Binding ActualWidth,
                                                               ElementName=dropDownBorder}"
                                               Height="{Binding ActualHeight,
                                                                ElementName=dropDownBorder}"
                                               Fill="{Binding Background,
                                                              ElementName=dropDownBorder}" />
                                </Canvas>
                                <ItemsPresenter x:Name="ItemsPresenter"
                                                KeyboardNavigation.DirectionalNavigation="Contained"
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </Themes:SystemDropShadowChrome>
            </Popup>
            <ToggleButton x:Name="toggleButton"
                          Grid.Column="0"
                          Grid.ColumnSpan="2"
                          Background="{TemplateBinding Background}"
                          BorderBrush="{TemplateBinding BorderBrush}"
                          BorderThickness="{TemplateBinding BorderThickness}"
                          IsChecked="{Binding IsDropDownOpen,
                                              Mode=TwoWay,
                                              RelativeSource={RelativeSource TemplatedParent}}"
                          Style="{StaticResource ComboBoxToggleButton}" />
            <ContentPresenter x:Name="contentPresenter"
                              Grid.Column="0"
                              Margin="{TemplateBinding Padding}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              Content="{TemplateBinding SelectionBoxItem}"
                              ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                              ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                              IsHitTestVisible="false"
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger SourceName="PART_Popup" Property="HasDropShadow" Value="true">
                <Setter TargetName="shadow"
                        Property="Margin"
                        Value="0,0,5,5" />
                <Setter TargetName="shadow"
                        Property="Color"
                        Value="#71000000" />
            </Trigger>
            <Trigger Property="HasItems" Value="false">
                <Setter TargetName="dropDownBorder"
                        Property="Height"
                        Value="95" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping" Value="true" />
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll"
                        Value="false" />
            </MultiTrigger>
            <Trigger SourceName="DropDownScrollViewer" Property="ScrollViewer.CanContentScroll" Value="false">
                <Setter TargetName="opaqueRect"
                        Property="Canvas.Top"
                        Value="{Binding VerticalOffset,
                                        ElementName=DropDownScrollViewer}" />
                <Setter TargetName="opaqueRect"
                        Property="Canvas.Left"
                        Value="{Binding HorizontalOffset,
                                        ElementName=DropDownScrollViewer}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="ComboBoxEditableTextBox"
           TargetType="{x:Type TextBox}">
        <Setter Property="Foreground"
                Value="{StaticResource ControlDefaultForeground}" />
        <Setter Property="SelectionBrush"
                Value="{StaticResource ControlPrimaryCaretSelectionBackground}" />
        <Setter Property="CaretBrush"
                Value="{StaticResource ControlPrimaryCaretBackground}" />
        <Setter Property="OverridesDefaultStyle"
                Value="true" />
        <Setter Property="AllowDrop"
                Value="true" />
        <Setter Property="MinWidth"
                Value="0" />
        <Setter Property="MinHeight"
                Value="0" />
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}" />
        <Setter Property="ScrollViewer.PanningMode"
                Value="VerticalFirst" />
        <Setter Property="Stylus.IsFlicksEnabled"
                Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <ScrollViewer x:Name="PART_ContentHost"
                                  Background="Transparent"
                                  Focusable="false"
                                  HorizontalScrollBarVisibility="Hidden"
                                  VerticalScrollBarVisibility="Hidden" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="ComboBoxEditableTemplate"
                     TargetType="{x:Type ComboBox}">
        <Grid x:Name="templateRoot"
              SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="0"
                                  MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
            </Grid.ColumnDefinitions>
            <Popup x:Name="PART_Popup"
                   Grid.ColumnSpan="2"
                   AllowsTransparency="true"
                   IsOpen="{Binding IsDropDownOpen,
                                    RelativeSource={RelativeSource TemplatedParent}}"
                   Placement="Bottom"
                   PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                <Themes:SystemDropShadowChrome x:Name="shadow"
                                               MinWidth="{Binding ActualWidth,
                                                                  ElementName=templateRoot}"
                                               MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                               Color="Transparent">
                    <!--  Dropdown stuff editable  -->
                    <Border x:Name="dropDownBorder"
                            Background="{StaticResource ContainerBackground}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="1">
                        <ScrollViewer x:Name="DropDownScrollViewer">
                            <Grid x:Name="grid"
                                  RenderOptions.ClearTypeHint="Enabled">
                                <Canvas x:Name="canvas"
                                        Width="0"
                                        Height="0"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Top">
                                    <Rectangle x:Name="opaqueRect"
                                               Width="{Binding ActualWidth,
                                                               ElementName=dropDownBorder}"
                                               Height="{Binding ActualHeight,
                                                                ElementName=dropDownBorder}"
                                               Fill="{Binding Background,
                                                              ElementName=dropDownBorder}" />
                                </Canvas>
                                <ItemsPresenter x:Name="ItemsPresenter"
                                                KeyboardNavigation.DirectionalNavigation="Contained"
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </Themes:SystemDropShadowChrome>
            </Popup>
            <ToggleButton x:Name="toggleButton"
                          Grid.ColumnSpan="2"
                          Background="{TemplateBinding Background}"
                          BorderBrush="{TemplateBinding BorderBrush}"
                          BorderThickness="{TemplateBinding BorderThickness}"
                          IsChecked="{Binding IsDropDownOpen,
                                              Mode=TwoWay,
                                              RelativeSource={RelativeSource TemplatedParent}}"
                          Style="{StaticResource ComboBoxToggleButton}" />
            <Border x:Name="border"
                    Margin="{TemplateBinding BorderThickness}"
                    Background="{TemplateBinding Background}">
                <TextBox x:Name="PART_EditableTextBox"
                         Margin="{TemplateBinding Padding}"
                         HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                         VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                         IsReadOnly="{Binding IsReadOnly,
                                              RelativeSource={RelativeSource TemplatedParent}}"
                         Style="{StaticResource ComboBoxEditableTextBox}" />
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter TargetName="border"
                        Property="Opacity"
                        Value="0.56" />
            </Trigger>
            <Trigger Property="IsKeyboardFocusWithin" Value="true">
                <Setter Property="Foreground"
                        Value="Black" />
            </Trigger>
            <Trigger SourceName="PART_Popup" Property="HasDropShadow" Value="true">
                <Setter TargetName="shadow"
                        Property="Margin"
                        Value="0,0,5,5" />
                <Setter TargetName="shadow"
                        Property="Color"
                        Value="#71000000" />
            </Trigger>
            <Trigger Property="HasItems" Value="false">
                <Setter TargetName="dropDownBorder"
                        Property="Height"
                        Value="95" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping" Value="true" />
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll"
                        Value="false" />
            </MultiTrigger>
            <Trigger SourceName="DropDownScrollViewer" Property="ScrollViewer.CanContentScroll" Value="false">
                <Setter TargetName="opaqueRect"
                        Property="Canvas.Top"
                        Value="{Binding VerticalOffset,
                                        ElementName=DropDownScrollViewer}" />
                <Setter TargetName="opaqueRect"
                        Property="Canvas.Left"
                        Value="{Binding HorizontalOffset,
                                        ElementName=DropDownScrollViewer}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style TargetType="{x:Type ComboBox}">
        <Setter Property="FocusVisualStyle"
                Value="{StaticResource FocusVisual}" />
        <Setter Property="Background"
                Value="{StaticResource ControlDefaultBackground}" />
        <Setter Property="BorderBrush"
                Value="{StaticResource ControlDefaultBorderBrush}" />
        <Setter Property="Foreground"
                Value="{StaticResource ControlDefaultForeground}" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
                Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
                Value="Auto" />
        <Setter Property="Padding"
                Value="6,3,5,3" />
        <Setter Property="ScrollViewer.CanContentScroll"
                Value="true" />
        <Setter Property="ScrollViewer.PanningMode"
                Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled"
                Value="False" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="HorizontalContentAlignment"
                Value="Left" />
        <Setter Property="Template"
                Value="{StaticResource ComboBoxTemplate}" />
        <Style.Triggers>
            <Trigger Property="IsEditable" Value="true">
                <Setter Property="IsTabStop"
                        Value="false" />
                <Setter Property="Padding"
                        Value="2" />
                <Setter Property="Template"
                        Value="{StaticResource ComboBoxEditableTemplate}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type ComboBoxItem}">
        <Setter Property="SnapsToDevicePixels"
                Value="True" />
        <Setter Property="Padding"
                Value="4,1" />
        <Setter Property="HorizontalContentAlignment"
                Value="{Binding HorizontalContentAlignment,
                                RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment"
                Value="{Binding VerticalContentAlignment,
                                RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Foreground"
                Value="{StaticResource ControlDefaultForeground}" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="BorderBrush"
                Value="Transparent" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="FocusVisualStyle"
                Value="{StaticResource FocusVisual}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border x:Name="Bd"
                            Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Bd"
                                    Property="TextElement.Foreground"
                                    Value="{StaticResource ControlDisabledGlyphColor}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="False" />
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsKeyboardFocused" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{StaticResource ControlPrimaryMouseOverBackground}" />
                            <Setter TargetName="Bd"
                                    Property="BorderBrush"
                                    Value="{StaticResource ControlPrimaryMouseOverBorderBrush}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                                <Condition Property="IsMouseOver" Value="False" />
                                <Condition Property="IsKeyboardFocused" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{StaticResource ControlPrimarySelectedBackground}" />
                            <Setter TargetName="Bd"
                                    Property="BorderBrush"
                                    Value="{StaticResource ControlPrimarySelectedBorderBrush}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{StaticResource ControlPrimarySelectedMouseOverBackground}" />
                            <Setter TargetName="Bd"
                                    Property="BorderBrush"
                                    Value="{StaticResource ControlPrimarySelectedMouseOverBorderBrush}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                                <Condition Property="IsMouseOver" Value="False" />
                                <Condition Property="IsKeyboardFocused" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{StaticResource ControlDisabledBackground}" />
                            <Setter TargetName="Bd"
                                    Property="BorderBrush"
                                    Value="{StaticResource ControlDisabledBorderBrush}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="False" />
                                <Condition Property="IsMouseOver" Value="False" />
                                <Condition Property="IsKeyboardFocused" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd"
                                    Property="BorderBrush"
                                    Value="{StaticResource ControlPrimaryMouseOverBackground}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="False" />
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsKeyboardFocused" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{StaticResource ControlPrimaryMouseOverBackground}" />
                            <Setter TargetName="Bd"
                                    Property="BorderBrush"
                                    Value="{StaticResource ControlPrimaryMouseOverBackground}" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  -_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-  -->

    <!--  Expander  -->

    <Style x:Key="ExpanderRightHeaderStyle"
           TargetType="{x:Type ToggleButton}">
        <Setter Property="Foreground"
                Value="{DynamicResource ControlDefaultForeground}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}">
                        <Grid Background="Transparent"
                              SnapsToDevicePixels="False">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="19" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Grid>
                                <Grid.LayoutTransform>
                                    <TransformGroup>
                                        <TransformGroup.Children>
                                            <TransformCollection>
                                                <RotateTransform Angle="-90" />
                                            </TransformCollection>
                                        </TransformGroup.Children>
                                    </TransformGroup>
                                </Grid.LayoutTransform>
                                <Ellipse x:Name="circle"
                                         Width="19"
                                         Height="19"
                                         HorizontalAlignment="Center"
                                         VerticalAlignment="Center"
                                         Fill="{StaticResource ControlDefaultBackground}"
                                         Stroke="{StaticResource ControlDefaultBorderBrush}" />
                                <Path x:Name="arrow"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      Data="M 1,1.5 L 4.5,5 L 8,1.5"
                                      SnapsToDevicePixels="false"
                                      Stroke="{StaticResource ControlGlyphColor}"
                                      StrokeThickness="2" />
                            </Grid>
                            <ContentPresenter Grid.Row="1"
                                              Margin="0,4,0,0"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Top"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="True" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="arrow"
                                    Property="Data"
                                    Value="M 1,4.5  L 4.5,1  L 8,4.5" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="circle"
                                    Property="Stroke"
                                    Value="{StaticResource ControlPrimaryMouseOverBackground}" />
                            <Setter TargetName="circle"
                                    Property="Fill"
                                    Value="{StaticResource ControlPrimaryMouseOverBorderBrush}" />
                            <Setter TargetName="arrow"
                                    Property="Stroke"
                                    Value="{StaticResource ControlDefaultForeground}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="circle"
                                    Property="Stroke"
                                    Value="{StaticResource ControlPrimarySelectedBorderBrush}" />
                            <Setter TargetName="circle"
                                    Property="StrokeThickness"
                                    Value="1.5" />
                            <Setter TargetName="circle"
                                    Property="Fill"
                                    Value="{StaticResource ControlPrimarySelectedBackground}" />
                            <Setter TargetName="arrow"
                                    Property="Stroke"
                                    Value="{StaticResource ControlDefaultForeground}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="circle"
                                    Property="Stroke"
                                    Value="{StaticResource ControlDisabledBorderBrush}" />
                            <Setter TargetName="circle"
                                    Property="Fill"
                                    Value="{StaticResource ControlDisabledBackground}" />
                            <Setter TargetName="arrow"
                                    Property="Stroke"
                                    Value="{StaticResource ControlDisabledGlyphColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ExpanderUpHeaderStyle"
           TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}">
                        <Grid Background="Transparent"
                              SnapsToDevicePixels="False">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="19" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid>
                                <Grid.LayoutTransform>
                                    <TransformGroup>
                                        <TransformGroup.Children>
                                            <TransformCollection>
                                                <RotateTransform Angle="180" />
                                            </TransformCollection>
                                        </TransformGroup.Children>
                                    </TransformGroup>
                                </Grid.LayoutTransform>
                                <Ellipse x:Name="circle"
                                         Width="19"
                                         Height="19"
                                         HorizontalAlignment="Center"
                                         VerticalAlignment="Center"
                                         Fill="{StaticResource ControlDefaultBackground}"
                                         Stroke="{StaticResource ControlDefaultBorderBrush}" />
                                <Path x:Name="arrow"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      Data="M 1,1.5 L 4.5,5 L 8,1.5"
                                      SnapsToDevicePixels="false"
                                      Stroke="{StaticResource ControlGlyphColor}"
                                      StrokeThickness="2" />
                            </Grid>
                            <ContentPresenter Grid.Column="1"
                                              Margin="4,0,0,0"
                                              HorizontalAlignment="Left"
                                              VerticalAlignment="Center"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="True" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="arrow"
                                    Property="Data"
                                    Value="M 1,4.5  L 4.5,1  L 8,4.5" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="circle"
                                    Property="Stroke"
                                    Value="{StaticResource ControlPrimaryMouseOverBackground}" />
                            <Setter TargetName="circle"
                                    Property="Fill"
                                    Value="{StaticResource ControlPrimaryMouseOverBorderBrush}" />
                            <Setter TargetName="arrow"
                                    Property="Stroke"
                                    Value="{StaticResource ControlDefaultForeground}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="circle"
                                    Property="Stroke"
                                    Value="{StaticResource ControlPrimarySelectedBorderBrush}" />
                            <Setter TargetName="circle"
                                    Property="StrokeThickness"
                                    Value="1.5" />
                            <Setter TargetName="circle"
                                    Property="Fill"
                                    Value="{StaticResource ControlPrimarySelectedBackground}" />
                            <Setter TargetName="arrow"
                                    Property="Stroke"
                                    Value="{StaticResource ControlDefaultForeground}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="circle"
                                    Property="Stroke"
                                    Value="{StaticResource ControlDisabledBorderBrush}" />
                            <Setter TargetName="circle"
                                    Property="Fill"
                                    Value="{StaticResource ControlDisabledBackground}" />
                            <Setter TargetName="arrow"
                                    Property="Stroke"
                                    Value="{StaticResource ControlDisabledGlyphColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ExpanderLeftHeaderStyle"
           TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}">
                        <Grid Background="Transparent"
                              SnapsToDevicePixels="False">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="19" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Grid>
                                <Grid.LayoutTransform>
                                    <TransformGroup>
                                        <TransformGroup.Children>
                                            <TransformCollection>
                                                <RotateTransform Angle="90" />
                                            </TransformCollection>
                                        </TransformGroup.Children>
                                    </TransformGroup>
                                </Grid.LayoutTransform>
                                <Ellipse x:Name="circle"
                                         Width="19"
                                         Height="19"
                                         HorizontalAlignment="Center"
                                         VerticalAlignment="Center"
                                         Fill="{StaticResource ControlDefaultBackground}"
                                         Stroke="{StaticResource ControlDefaultBorderBrush}" />
                                <Path x:Name="arrow"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      Data="M 1,1.5 L 4.5,5 L 8,1.5"
                                      SnapsToDevicePixels="false"
                                      Stroke="{StaticResource ControlGlyphColor}"
                                      StrokeThickness="2" />
                            </Grid>
                            <ContentPresenter Grid.Row="1"
                                              Margin="0,4,0,0"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Top"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="True" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="arrow"
                                    Property="Data"
                                    Value="M 1,4.5  L 4.5,1  L 8,4.5" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="circle"
                                    Property="Stroke"
                                    Value="{StaticResource ControlPrimaryMouseOverBackground}" />
                            <Setter TargetName="circle"
                                    Property="Fill"
                                    Value="{StaticResource ControlPrimaryMouseOverBorderBrush}" />
                            <Setter TargetName="arrow"
                                    Property="Stroke"
                                    Value="{StaticResource ControlDefaultForeground}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="circle"
                                    Property="Stroke"
                                    Value="{StaticResource ControlPrimarySelectedBorderBrush}" />
                            <Setter TargetName="circle"
                                    Property="StrokeThickness"
                                    Value="1.5" />
                            <Setter TargetName="circle"
                                    Property="Fill"
                                    Value="{StaticResource ControlPrimarySelectedBackground}" />
                            <Setter TargetName="arrow"
                                    Property="Stroke"
                                    Value="{StaticResource ControlDefaultForeground}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="circle"
                                    Property="Stroke"
                                    Value="{StaticResource ControlDisabledBorderBrush}" />
                            <Setter TargetName="circle"
                                    Property="Fill"
                                    Value="{StaticResource ControlDisabledBackground}" />
                            <Setter TargetName="arrow"
                                    Property="Stroke"
                                    Value="{StaticResource ControlDisabledGlyphColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ExpanderHeaderFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border>
                        <Rectangle Margin="0"
                                   SnapsToDevicePixels="true"
                                   Stroke="Black"
                                   StrokeDashArray="1 2"
                                   StrokeThickness="1" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ExpanderDownHeaderStyle"
           TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}">
                        <Grid Background="Transparent"
                              SnapsToDevicePixels="False">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="19" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Ellipse x:Name="circle"
                                     Width="19"
                                     Height="19"
                                     HorizontalAlignment="Center"
                                     VerticalAlignment="Center"
                                     Fill="{DynamicResource ControlDefaultBackground}"
                                     Stroke="{StaticResource ControlDefaultBorderBrush}" />
                            <Path x:Name="arrow"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  Data="M 1,1.5 L 4.5,5 L 8,1.5"
                                  SnapsToDevicePixels="false"
                                  Stroke="{DynamicResource ControlDefaultForeground}"
                                  StrokeThickness="2" />
                            <ContentPresenter Grid.Column="1"
                                              Margin="4,0,0,0"
                                              HorizontalAlignment="Left"
                                              VerticalAlignment="Center"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="True" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="arrow"
                                    Property="Data"
                                    Value="M 1,4.5  L 4.5,1  L 8,4.5" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="circle"
                                    Property="Stroke"
                                    Value="{StaticResource ControlPrimaryMouseOverBackground}" />
                            <Setter TargetName="circle"
                                    Property="Fill"
                                    Value="{StaticResource ControlPrimaryMouseOverBorderBrush}" />
                            <Setter TargetName="arrow"
                                    Property="Stroke"
                                    Value="{StaticResource ControlDefaultForeground}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="circle"
                                    Property="Stroke"
                                    Value="{StaticResource ControlPrimarySelectedBorderBrush}" />
                            <Setter TargetName="circle"
                                    Property="StrokeThickness"
                                    Value="1.5" />
                            <Setter TargetName="circle"
                                    Property="Fill"
                                    Value="{StaticResource ControlPrimarySelectedBackground}" />
                            <Setter TargetName="arrow"
                                    Property="Stroke"
                                    Value="{StaticResource ControlDefaultForeground}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="circle"
                                    Property="Stroke"
                                    Value="{StaticResource ControlDisabledBorderBrush}" />
                            <Setter TargetName="circle"
                                    Property="Fill"
                                    Value="{StaticResource ControlDisabledBackground}" />
                            <Setter TargetName="arrow"
                                    Property="Stroke"
                                    Value="{StaticResource ControlDisabledGlyphColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type Expander}">
        <Setter Property="Foreground"
                Value="{DynamicResource ControlDefaultForeground}" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="HorizontalContentAlignment"
                Value="Stretch" />
        <Setter Property="VerticalContentAlignment"
                Value="Stretch" />
        <Setter Property="BorderBrush"
                Value="Transparent" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="3"
                            SnapsToDevicePixels="true">
                        <DockPanel>
                            <ToggleButton x:Name="HeaderSite"
                                          MinWidth="0"
                                          MinHeight="0"
                                          Margin="1"
                                          Padding="{TemplateBinding Padding}"
                                          HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Content="{TemplateBinding Header}"
                                          ContentTemplate="{TemplateBinding HeaderTemplate}"
                                          ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                          DockPanel.Dock="Top"
                                          FocusVisualStyle="{StaticResource ExpanderHeaderFocusVisual}"
                                          FontFamily="{TemplateBinding FontFamily}"
                                          FontSize="{TemplateBinding FontSize}"
                                          FontStretch="{TemplateBinding FontStretch}"
                                          FontStyle="{TemplateBinding FontStyle}"
                                          FontWeight="{TemplateBinding FontWeight}"
                                          Foreground="{TemplateBinding Foreground}"
                                          IsChecked="{Binding IsExpanded,
                                                              Mode=TwoWay,
                                                              RelativeSource={RelativeSource TemplatedParent}}"
                                          Style="{StaticResource ExpanderDownHeaderStyle}" />
                            <ContentPresenter x:Name="ExpandSite"
                                              Margin="{TemplateBinding Padding}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              DockPanel.Dock="Bottom"
                                              Focusable="false"
                                              Visibility="Collapsed" />
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="true">
                            <Setter TargetName="ExpandSite"
                                    Property="Visibility"
                                    Value="Visible" />
                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Right">
                            <Setter TargetName="ExpandSite"
                                    Property="DockPanel.Dock"
                                    Value="Right" />
                            <Setter TargetName="HeaderSite"
                                    Property="DockPanel.Dock"
                                    Value="Left" />
                            <Setter TargetName="HeaderSite"
                                    Property="Style"
                                    Value="{StaticResource ExpanderRightHeaderStyle}" />
                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Up">
                            <Setter TargetName="ExpandSite"
                                    Property="DockPanel.Dock"
                                    Value="Top" />
                            <Setter TargetName="HeaderSite"
                                    Property="DockPanel.Dock"
                                    Value="Bottom" />
                            <Setter TargetName="HeaderSite"
                                    Property="Style"
                                    Value="{StaticResource ExpanderUpHeaderStyle}" />
                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Left">
                            <Setter TargetName="ExpandSite"
                                    Property="DockPanel.Dock"
                                    Value="Left" />
                            <Setter TargetName="HeaderSite"
                                    Property="DockPanel.Dock"
                                    Value="Right" />
                            <Setter TargetName="HeaderSite"
                                    Property="Style"
                                    Value="{StaticResource ExpanderLeftHeaderStyle}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground"
                                    Value="{StaticResource ControlDisabledGlyphColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  -_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-  -->

    <!--  GridSplitter  -->

    <Style x:Key="GridSplitterPreviewStyle">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Fill="{DynamicResource ControlDefaultBackground}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type GridSplitter}">
        <Setter Property="Background"
                Value="{DynamicResource ControlDefaultBackground}" />
        <Setter Property="PreviewStyle"
                Value="{StaticResource GridSplitterPreviewStyle}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GridSplitter}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  -_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-  -->

    <!--  GroupBox  -->
    <BorderGapMaskConverter x:Key="BorderGapMaskConverter" />
    <Style TargetType="{x:Type GroupBox}">
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="BorderBrush"
                Value="{StaticResource ControlDefaultBackground}" />
        <Setter Property="Foreground"
                Value="{StaticResource ControlDefaultForeground}" />
        <Setter Property="BorderThickness"
                Value="3" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GroupBox}">
                    <Grid SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="6" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition />
                            <ColumnDefinition Width="6" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="32"
                                           MinHeight="32" />
                            <RowDefinition />
                            <RowDefinition Height="6" />
                        </Grid.RowDefinitions>
                        <Border Grid.Row="1"
                                Grid.RowSpan="3"
                                Grid.Column="0"
                                Grid.ColumnSpan="4"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="0" />
                        <Border Grid.Row="1"
                                Grid.RowSpan="3"
                                Grid.ColumnSpan="4"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="0">
                            <Border.OpacityMask>
                                <MultiBinding Converter="{StaticResource BorderGapMaskConverter}"
                                              ConverterParameter="7">
                                    <Binding ElementName="Header"
                                             Path="ActualWidth" />
                                    <Binding Path="ActualWidth"
                                             RelativeSource="{RelativeSource Self}" />
                                    <Binding Path="ActualHeight"
                                             RelativeSource="{RelativeSource Self}" />
                                </MultiBinding>
                            </Border.OpacityMask>
                        </Border>
                        <Rectangle Grid.RowSpan="2"
                                   Grid.ColumnSpan="4"
                                   Fill="{TemplateBinding BorderBrush}" />
                        <Border x:Name="Header"
                                Grid.Row="0"
                                Grid.RowSpan="2"
                                Grid.Column="1"
                                Padding="3,1,3,0">
                            <ContentPresenter VerticalAlignment="Center"
                                              ContentSource="Header"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                        <ContentPresenter Grid.Row="2"
                                          Grid.Column="1"
                                          Grid.ColumnSpan="2"
                                          Margin="0,3,0,0"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--  Original one  -->
    <Style x:Key="OriginalGroupBox"
           TargetType="{x:Type GroupBox}">
        <Setter Property="BorderBrush"
                Value="{StaticResource ControlDefaultBackground}" />
        <Setter Property="Foreground"
                Value="{StaticResource ControlDefaultForeground}" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GroupBox}">
                    <Grid SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="6" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="6" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="6" />
                        </Grid.RowDefinitions>
                        <Border Grid.Row="1"
                                Grid.RowSpan="3"
                                Grid.Column="0"
                                Grid.ColumnSpan="4"
                                Background="{TemplateBinding Background}"
                                BorderBrush="Transparent"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="4" />
                        <Border Grid.Row="1"
                                Grid.RowSpan="3"
                                Grid.ColumnSpan="4"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="4">
                            <Border.OpacityMask>
                                <MultiBinding Converter="{StaticResource BorderGapMaskConverter}"
                                              ConverterParameter="7">
                                    <Binding ElementName="Header"
                                             Path="ActualWidth" />
                                    <Binding Path="ActualWidth"
                                             RelativeSource="{RelativeSource Self}" />
                                    <Binding Path="ActualHeight"
                                             RelativeSource="{RelativeSource Self}" />
                                </MultiBinding>
                            </Border.OpacityMask>
                            <Border BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="3">
                                <Border BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        CornerRadius="2" />
                            </Border>
                        </Border>
                        <Border x:Name="Header"
                                Grid.Row="0"
                                Grid.RowSpan="2"
                                Grid.Column="1"
                                Padding="3,1,3,0">
                            <ContentPresenter ContentSource="Header"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                        <ContentPresenter Grid.Row="2"
                                          Grid.Column="1"
                                          Grid.ColumnSpan="2"
                                          Margin="{TemplateBinding Padding}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  -_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-  -->

    <!--  Label  -->

    <Style TargetType="{x:Type Label}">
        <Setter Property="Foreground"
                Value="{StaticResource ControlDefaultForeground}" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="Padding"
                Value="5" />
        <Setter Property="HorizontalContentAlignment"
                Value="Left" />
        <Setter Property="VerticalContentAlignment"
                Value="Top" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Label}">
                    <Border Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground"
                                    Value="{StaticResource ControlDisabledGlyphColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  -_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-  -->

    <!--  ListBox and ListBoxItems  -->
    <Style TargetType="{x:Type ListBox}">
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="BorderBrush"
                Value="{StaticResource ControlBrightDefaultBorderBrush}" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="Foreground"
                Value="{StaticResource ControlDefaultForeground}" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
                Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
                Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll"
                Value="true" />
        <Setter Property="ScrollViewer.PanningMode"
                Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled"
                Value="False" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <Border x:Name="Bd"
                            Padding="1"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True">
                        <ScrollViewer Padding="{TemplateBinding Padding}"
                                      Focusable="false">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{StaticResource ControlDisabledBackground}" />
                            <Setter TargetName="Bd"
                                    Property="BorderBrush"
                                    Value="{StaticResource ControlDisabledBackground}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsGrouping" Value="true" />
                                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter Property="ScrollViewer.CanContentScroll"
                                    Value="false" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ListBoxItem}">
        <Setter Property="SnapsToDevicePixels"
                Value="True" />
        <Setter Property="Padding"
                Value="4,1" />
        <Setter Property="HorizontalContentAlignment"
                Value="{Binding HorizontalContentAlignment,
                                RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment"
                Value="{Binding VerticalContentAlignment,
                                RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="BorderBrush"
                Value="Transparent" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="FocusVisualStyle"
                Value="{StaticResource FocusVisual}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border x:Name="Bd"
                            Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{StaticResource ControlPrimaryMouseOverBackground}" />
                            <Setter TargetName="Bd"
                                    Property="BorderBrush"
                                    Value="{StaticResource ControlPrimaryMouseOverBorderBrush}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="False" />
                                <Condition Property="IsSelected" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{StaticResource ControlPrimaryDisabledBackground}" />
                            <Setter TargetName="Bd"
                                    Property="BorderBrush"
                                    Value="{StaticResource ControlPrimaryDisabledBorderBrush}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="True" />
                                <Condition Property="IsSelected" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{StaticResource ControlPrimarySelectedBackground}" />
                            <Setter TargetName="Bd"
                                    Property="BorderBrush"
                                    Value="{StaticResource ControlPrimarySelectedBorderBrush}" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Bd"
                                    Property="TextElement.Foreground"
                                    Value="{StaticResource ControlDisabledGlyphColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  -_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-  -->

    <!--  DataGrid  -->

    <!--  DataGridRow  -->
    <Style x:Key="RowStyle"
           TargetType="{x:Type DataGridRow}">
        <!--<Setter Property="Foreground"
                Value="{DynamicResource ControlDefaultForeground}" />
        <Setter Property="Background"
                Value="{DynamicResource ControlDefaultBackground}" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource ControlDefaultBorderBrush}" />-->
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="SnapsToDevicePixels"
                Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridRow}">
                    <Border x:Name="DGR_Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True">
                        <SelectiveScrollingGrid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>

                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <!--<Rectangle x:Name="Selected" Margin="0" Grid.RowSpan="2" Grid.ColumnSpan="2"
                                   Fill="{StaticResource BtnOverFill}" Stroke="{StaticResource selectedStroke}"
                                   Opacity="0"/>
                            <Rectangle x:Name="SelectedHighlight" Margin="1" Grid.RowSpan="2" Grid.ColumnSpan="2"
                                   Stroke="#A0FFFFFF"
                                   Opacity="0"/>-->
                            <Rectangle x:Name="BackgroundRectangle"
                                       Grid.Row="0"
                                       Grid.RowSpan="2"
                                       Grid.Column="0"
                                       Grid.ColumnSpan="2"
                                       Fill="{StaticResource ControlDefaultBackground}"
                                       Opacity="0.25" />
                            <Rectangle x:Name="SelectedRectangle"
                                       Grid.Row="0"
                                       Grid.RowSpan="2"
                                       Grid.Column="0"
                                       Grid.ColumnSpan="2"
                                       Fill="{StaticResource ControlPrimarySelectedBackground}"
                                       Opacity="0" />
                            <Rectangle x:Name="HoverRectangle"
                                       Grid.Row="0"
                                       Grid.RowSpan="2"
                                       Grid.Column="0"
                                       Grid.ColumnSpan="2"
                                       Fill="{StaticResource ControlPrimaryMouseOverBackground}"
                                       Opacity="0" />
                            <DataGridRowHeader Grid.Row="0"
                                               Grid.RowSpan="2"
                                               Grid.Column="0"
                                               SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical"
                                               Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}},
                                                                    Path=HeadersVisibility,
                                                                    Converter={x:Static DataGrid.HeadersVisibilityConverter},
                                                                    ConverterParameter={x:Static DataGridHeadersVisibility.Row}}" />
                            <DataGridCellsPresenter Grid.Row="0"
                                                    Grid.Column="1"
                                                    ItemsPanel="{TemplateBinding ItemsPanel}"
                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            <DataGridDetailsPresenter x:Name="DetailsPresenter"
                                                      Grid.Row="1"
                                                      Grid.Column="1"
                                                      SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}},
                                                                                                                     Path=AreRowDetailsFrozen,
                                                                                                                     Converter={x:Static DataGrid.RowDetailsScrollingConverter},
                                                                                                                     ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical}}"
                                                      Visibility="{TemplateBinding DetailsVisibility}" />
                            <!--<Rectangle Height="1" HorizontalAlignment="Stretch"
                                       x:Name="BottomGridLine"
                                       Fill="{StaticResource HorizontalVerticalGridLinesBrush}"
                                       Grid.Column="1" Grid.Row="2" />-->
                            <Rectangle x:Name="BottomGridLine"
                                       Grid.Row="2"
                                       Grid.Column="1"
                                       Height="1"
                                       HorizontalAlignment="Stretch" />
                        </SelectiveScrollingGrid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Storyboard.TargetName="HoverRectangle"
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Duration="00:00:00.0010000">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Storyboard.TargetName="HoverRectangle"
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Duration="00:00:00.0010000">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00"
                                                                  Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Storyboard.TargetName="SelectedRectangle"
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Duration="00:00:00.0010000">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Storyboard.TargetName="SelectedRectangle"
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Duration="00:00:00.0010000">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00"
                                                                  Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                            <!--<Setter Property="DetailsVisibility" Value="Visible" />-->
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsSelected" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Storyboard.TargetName="HoverRectangle"
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Duration="00:00:00.0010000">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00"
                                                                  Value="0.5" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Storyboard.TargetName="SelectedRectangle"
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Duration="00:00:00.0010000">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Storyboard.TargetName="HoverRectangle"
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Duration="00:00:00.0010000">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00"
                                                                  Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Storyboard.TargetName="SelectedRectangle"
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Duration="00:00:00.0010000">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00"
                                                                  Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                        <!--<MultiTrigger >
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsSelected" Value="False" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="HoverRectangle" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0.5" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="SelectedRectangle" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="HoverRectangle" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="SelectedRectangle" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>-->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                                <Condition Property="IsFocused" Value="False" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Storyboard.TargetName="SelectedRectangle"
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Duration="00:00:00.0010000">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00"
                                                                  Value="0.6" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Storyboard.TargetName="SelectedRectangle"
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Duration="00:00:00.0010000">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00"
                                                                  Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--  DataGridCell  -->
    <Style x:Key="CellStyle"
           TargetType="{x:Type DataGridCell}">
        <Setter Property="Foreground"
                Value="{StaticResource ControlDefaultForeground}" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="HorizontalContentAlignment"
                Value="Stretch" />
        <Setter Property="VerticalContentAlignment"
                Value="Stretch" />
        <Setter Property="Cursor"
                Value="Arrow" />
        <Setter Property="IsTabStop"
                Value="False" />
        <!--<Setter Property="BorderThickness" Value="1" />-->
        <!--  Padding hack  -->
        <Setter Property="Padding"
                Value="2,5,2,5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">

                    <!--  Original  -->
                    <!--<Grid x:Name="Root"
                          Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Rectangle x:Name="FocusVisual"
                                   HorizontalAlignment="Stretch"
                                   VerticalAlignment="Stretch"
                                   Fill="{StaticResource DisabledBackgroundBrush}"
                                   IsHitTestVisible="false"
                                   Opacity="0"
                                   Stroke="{StaticResource GlyphBrush}"
                                   StrokeThickness="1" />
                        <ContentPresenter Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Content="{TemplateBinding Content}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          Cursor="{TemplateBinding Cursor}" />
                        <Rectangle x:Name="RightGridLine"
                                   Grid.Column="1"
                                   Width="1"
                                   VerticalAlignment="Stretch" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="FocusVisual" Property="Opacity" Value="0.8" />
                    -->
                    <!--<Setter Property="BorderThickness" Value="1" />-->
                    <!--
                        </Trigger>
                    </ControlTemplate.Triggers>-->
                    <!--  End Original  -->

                    <!--  Modified  -->
                    <Border x:Name="Bd"
                            Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{StaticResource ControlPrimaryMouseOverBackground}" />
                            <Setter TargetName="Bd"
                                    Property="BorderBrush"
                                    Value="{StaticResource ControlPrimaryMouseOverBorderBrush}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="False" />
                                <Condition Property="IsSelected" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{StaticResource ControlPrimaryDisabledBackground}" />
                            <Setter TargetName="Bd"
                                    Property="BorderBrush"
                                    Value="{StaticResource ControlPrimaryDisabledBorderBrush}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="True" />
                                <Condition Property="IsSelected" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{StaticResource ControlPrimarySelectedBackground}" />
                            <Setter TargetName="Bd"
                                    Property="BorderBrush"
                                    Value="{StaticResource ControlPrimarySelectedBorderBrush}" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Bd"
                                    Property="TextElement.Foreground"
                                    Value="{StaticResource ControlDisabledGlyphColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                    <!--  End Modified  -->

                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="IsSelected"
                Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor,
                                                               AncestorType=DataGridRow},
                                Path=IsSelected,
                                Mode=OneWayToSource,
                                UpdateSourceTrigger=PropertyChanged}" />
    </Style>
    <!--  DataGridColumnHeader  -->
    <Style x:Key="ColumnHeaderGripperStyle"
           TargetType="{x:Type Thumb}">
        <Setter Property="Width"
                Value="8" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="Cursor"
                Value="SizeWE" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ColumnHeaderStyle"
           TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="Foreground"
                Value="#FFFFFFFF" />
        <Setter Property="HorizontalContentAlignment"
                Value="Left" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="FontSize"
                Value="10.5" />
        <Setter Property="FontWeight"
                Value="Bold" />
        <Setter Property="IsTabStop"
                Value="False" />
        <Setter Property="SeparatorBrush"
                Value="#FFC9CACA" />
        <!--<Setter Property="Padding" Value="4,4,5,4" />-->
        <Setter Property="Padding"
                Value="4,6,5,6" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                    <Grid>
                        <Themes:DataGridHeaderBorder x:Name="HeaderBorder"
                                                     Background="{StaticResource NormalBrush}"
                                                     BorderThickness="0,0,1,1"
                                                     IsClickable="{TemplateBinding CanUserSort}"
                                                     IsHovered="{TemplateBinding IsMouseOver}"
                                                     IsPressed="{TemplateBinding IsPressed}"
                                                     SeparatorBrush="#FFC9CACA"
                                                     SeparatorVisibility="{TemplateBinding SeparatorVisibility}"
                                                     SortDirection="{TemplateBinding SortDirection}">
                            <Grid Background="Transparent">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Rectangle x:Name="BackgroundRectangle"
                                           Grid.RowSpan="2"
                                           Grid.ColumnSpan="2"
                                           Fill="{StaticResource NormalBrush}"
                                           Stretch="Fill"
                                           Stroke="{StaticResource NormalBorderBrush}"
                                           StrokeThickness="1" />
                                <Rectangle x:Name="HoverRectangle"
                                           Grid.RowSpan="2"
                                           Grid.ColumnSpan="2"
                                           Fill="{StaticResource HoverBrush}"
                                           Opacity="0"
                                           Stretch="Fill" />
                                <ContentPresenter Grid.Column="0"
                                                  Margin="{TemplateBinding Padding}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  Cursor="{TemplateBinding Cursor}"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                <Rectangle x:Name="ShineRectangle"
                                           Grid.RowSpan="2"
                                           Grid.ColumnSpan="2"
                                           Fill="{StaticResource ShineBrush}"
                                           Stretch="Fill"
                                           Stroke="{StaticResource NormalBorderBrush}"
                                           StrokeThickness="1" />
                                <!--<Rectangle x:Name="VerticalSeparator" VerticalAlignment="Stretch" Width="1" Visibility="{TemplateBinding SeparatorVisibility}"
                                   Grid.Column="2" Grid.RowSpan="2" Fill="{TemplateBinding SeparatorBrush}" />-->
                                <Path x:Name="SortArrow"
                                      Grid.RowSpan="2"
                                      Grid.Column="1"
                                      Width="8"
                                      HorizontalAlignment="Left"
                                      VerticalAlignment="Center"
                                      Data="F1 M -5.215,6.099L 5.215,6.099L 0,0L -5.215,6.099 Z "
                                      Fill="#FFFFFFFF"
                                      Opacity="0"
                                      RenderTransformOrigin=".5,.5"
                                      Stretch="Uniform">
                                    <Path.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform x:Name="SortIconTransform" ScaleX=".9" ScaleY=".9" />
                                        </TransformGroup>
                                    </Path.RenderTransform>
                                </Path>
                            </Grid>
                        </Themes:DataGridHeaderBorder>
                        <Thumb x:Name="PART_LeftHeaderGripper"
                               HorizontalAlignment="Left"
                               Style="{StaticResource ColumnHeaderGripperStyle}" />
                        <Thumb x:Name="PART_RightHeaderGripper"
                               HorizontalAlignment="Right"
                               Style="{StaticResource ColumnHeaderGripperStyle}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="SortDirection" Value="Ascending">
                            <Setter TargetName="SortArrow"
                                    Property="Opacity"
                                    Value="1" />
                            <Setter TargetName="SortArrow"
                                    Property="RenderTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="180" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="ShineRectangle"
                                    Property="Opacity"
                                    Value="1" />
                        </Trigger>
                        <Trigger Property="SortDirection" Value="Descending">
                            <Setter TargetName="SortArrow"
                                    Property="Opacity"
                                    Value="1" />
                            <Setter TargetName="ShineRectangle"
                                    Property="Opacity"
                                    Value="1" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation BeginTime="00:00:00"
                                                         Storyboard.TargetName="HoverRectangle"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         To="1.0"
                                                         Duration="00:00:00.20000" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation BeginTime="00:00:00"
                                                         Storyboard.TargetName="HoverRectangle"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         To="0"
                                                         Duration="00:00:00.20000" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>


    </Style>

    <!--  DataGrid  -->
    <Style TargetType="{x:Type DataGrid}">
        <Setter Property="Foreground"
                Value="{StaticResource ControlDefaultForeground}" />
        <Setter Property="ScrollViewer.CanContentScroll"
                Value="False" />
        <Setter Property="AutoGenerateColumns"
                Value="False" />
        <Setter Property="IsTabStop"
                Value="True" />
        <Setter Property="RowBackground"
                Value="{x:Null}" />
        <!--<Setter Property="Background" Value="{StaticResource ControlBackgroundBrush}" />-->
        <Setter Property="Background"
                Value="{StaticResource ControlDefaultBackground}" />
        <Setter Property="AlternatingRowBackground"
                Value="#00FFFFFF" />
        <Setter Property="GridLinesVisibility"
                Value="Vertical" />
        <Setter Property="HorizontalGridLinesBrush"
                Value="#FFC9CACA" />
        <Setter Property="IsTabStop"
                Value="True" />
        <Setter Property="VerticalGridLinesBrush"
                Value="#FFC9CACA" />
        <Setter Property="BorderBrush">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                    <GradientStop Offset="0" Color="#FFA3AEB9" />
                    <GradientStop Offset="0.375" Color="#FF8399A9" />
                    <GradientStop Offset="0.375" Color="#FF718597" />
                    <GradientStop Offset="1" Color="#FF617584" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="SelectionUnit"
                Value="CellOrRowHeader" />
        <Setter Property="SelectionMode"
                Value="Single" />
        <Setter Property="IsReadOnly"
                Value="False" />
        <Setter Property="CanUserAddRows"
                Value="True" />
        <Setter Property="CanUserSortColumns"
                Value="True" />
        <Setter Property="CanUserResizeRows"
                Value="False" />
        <Setter Property="CanUserSortColumns"
                Value="True" />
        <Setter Property="IsSynchronizedWithCurrentItem"
                Value="True" />
        <Setter Property="EnableRowVirtualization"
                Value="True" />
        <Setter Property="CellStyle"
                Value="{StaticResource CellStyle}" />
        <Setter Property="RowStyle"
                Value="{StaticResource RowStyle}" />
        <Setter Property="RowDetailsVisibilityMode"
                Value="VisibleWhenSelected" />
        <Setter Property="ColumnHeaderStyle"
                Value="{StaticResource ColumnHeaderStyle}" />
        <Setter Property="VerticalAlignment"
                Value="Center" />
        <Setter Property="FontFamily"
                Value="Verdana" />
        <!--  FontSize hack  -->
        <Setter Property="FontSize"
                Value="11" />
    </Style>


    <!--  End DataGrid  -->

    <!--  ListView  -->
    <Style TargetType="{x:Type ListView}">
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="BorderBrush"
                Value="{StaticResource ControlBrightDefaultBorderBrush}" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="Foreground"
                Value="{StaticResource ControlDefaultForeground}" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
                Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
                Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll"
                Value="true" />
        <Setter Property="ScrollViewer.PanningMode"
                Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled"
                Value="False" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListView}">
                    <Border x:Name="Bd"
                            Padding="1"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True">
                        <ScrollViewer Padding="{TemplateBinding Padding}"
                                      Focusable="false">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{StaticResource ControlDisabledBackground}" />
                            <Setter TargetName="Bd"
                                    Property="BorderBrush"
                                    Value="{StaticResource ControlDisabledBackground}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsGrouping" Value="true" />
                                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter Property="ScrollViewer.CanContentScroll"
                                    Value="false" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type ListViewItem}">
        <Setter Property="SnapsToDevicePixels"
                Value="True" />
        <Setter Property="Padding"
                Value="4,1" />
        <Setter Property="HorizontalContentAlignment"
                Value="{Binding HorizontalContentAlignment,
                                RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment"
                Value="{Binding VerticalContentAlignment,
                                RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="BorderBrush"
                Value="Transparent" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="FocusVisualStyle"
                Value="{StaticResource FocusVisual}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <Border x:Name="Bd"
                            Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{StaticResource ControlPrimaryMouseOverBackground}" />
                            <Setter TargetName="Bd"
                                    Property="BorderBrush"
                                    Value="{StaticResource ControlPrimaryMouseOverBorderBrush}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="False" />
                                <Condition Property="IsSelected" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{StaticResource ControlPrimaryDisabledBackground}" />
                            <Setter TargetName="Bd"
                                    Property="BorderBrush"
                                    Value="{StaticResource ControlPrimaryDisabledBorderBrush}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="True" />
                                <Condition Property="IsSelected" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{StaticResource ControlPrimarySelectedBackground}" />
                            <Setter TargetName="Bd"
                                    Property="BorderBrush"
                                    Value="{StaticResource ControlPrimarySelectedBorderBrush}" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Bd"
                                    Property="TextElement.Foreground"
                                    Value="{StaticResource ControlDisabledGlyphColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  -_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-  -->

    <!--  Menus  -->
    <Style TargetType="{x:Type ContextMenu}">
        <Setter Property="Background"
                Value="{StaticResource ControlDefaultBackground}" />
        <Setter Property="Foreground"
                Value="{StaticResource ControlDefaultForeground}" />
        <Setter Property="BorderBrush"
                Value="{StaticResource ControlDefaultBorderBrush}" />
        <Setter Property="SnapsToDevicePixels"
                Value="True" />
        <Setter Property="OverridesDefaultStyle"
                Value="True" />
        <Setter Property="Grid.IsSharedSizeScope"
                Value="true" />
        <Setter Property="HasDropShadow"
                Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <Border x:Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="2">
                        <ScrollViewer x:Name="ScrollViewer"
                                      VerticalScrollBarVisibility="Hidden">
                            <ItemsPresenter />
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  -_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-  -->

    <!--  Menu  -->
    <Style TargetType="{x:Type Menu}">
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="FontFamily"
                Value="{DynamicResource {x:Static SystemFonts.MenuFontFamilyKey}}" />
        <Setter Property="FontSize"
                Value="{DynamicResource {x:Static SystemFonts.MenuFontSizeKey}}" />
        <Setter Property="FontStyle"
                Value="{DynamicResource {x:Static SystemFonts.MenuFontStyleKey}}" />
        <Setter Property="FontWeight"
                Value="{DynamicResource {x:Static SystemFonts.MenuFontWeightKey}}" />
        <Setter Property="Foreground"
                Value="{StaticResource ControlDefaultForeground}" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Menu}">
                    <Border Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true">
                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type MenuItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Border x:Name="templateRoot"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True">
                        <Grid x:Name="Grid"
                              VerticalAlignment="Center">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <ContentPresenter x:Name="Icon"
                                              Width="16"
                                              Height="16"
                                              Margin="3"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Center"
                                              Content="{TemplateBinding Icon}"
                                              ContentSource="Icon"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            <Path x:Name="GlyphPanel"
                                  Margin="3"
                                  VerticalAlignment="Center"
                                  Data="F1M10,1.2L4.7,9.1 4.5,9.1 0,5.2 1.3,3.5 4.3,6.1 8.3,0 10,1.2z"
                                  Fill="{TemplateBinding Foreground}"
                                  FlowDirection="LeftToRight"
                                  Visibility="Collapsed" />
                            <ContentPresenter x:Name="ContentPresenter"
                                              Grid.Column="1"
                                              Margin="{TemplateBinding Padding}"
                                              Content="{TemplateBinding Header}"
                                              ContentSource="Header"
                                              ContentStringFormat="{TemplateBinding HeaderStringFormat}"
                                              ContentTemplate="{TemplateBinding HeaderTemplate}"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            <Popup x:Name="PART_Popup"
                                   AllowsTransparency="True"
                                   Focusable="False"
                                   IsOpen="{Binding IsSubmenuOpen,
                                                    RelativeSource={RelativeSource TemplatedParent}}"
                                   Placement="Bottom"
                                   PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
                                <Border x:Name="SubMenuBorder"
                                        Padding="0"
                                        Background="{StaticResource ControlDefaultBackground}"
                                        BorderBrush="{StaticResource ControlDefaultBorderBrush}"
                                        BorderThickness="1">
                                    <ScrollViewer x:Name="SubMenuScrollViewer"
                                                  Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer,
                                                                                                TypeInTargetAssembly={x:Type FrameworkElement}}}">
                                        <Grid x:Name="Grid1"
                                              RenderOptions.ClearTypeHint="Enabled">
                                            <Canvas x:Name="Canvas"
                                                    Width="22"
                                                    Height="Auto"
                                                    HorizontalAlignment="Left"
                                                    VerticalAlignment="Stretch">
                                                <Rectangle x:Name="OpaqueRect"
                                                           Width="{Binding ActualWidth,
                                                                           ElementName=SubMenuBorder}"
                                                           Height="{Binding ActualHeight,
                                                                            ElementName=SubMenuBorder}"
                                                           Fill="{Binding Background,
                                                                          ElementName=SubMenuBorder}" />
                                            </Canvas>
                                            <Rectangle x:Name="Rectangle"
                                                       Width="1"
                                                       Margin="22,0,0,0"
                                                       HorizontalAlignment="Left"
                                                       Fill="{StaticResource ControlDarkerBorderBrush}" />
                                            <Rectangle Width="22"
                                                       Margin="0"
                                                       HorizontalAlignment="Left"
                                                       Fill="{StaticResource ControlBrightDefaultBackground}" />
                                            <ItemsPresenter x:Name="ItemsPresenter"
                                                            Grid.IsSharedSizeScope="True"
                                                            KeyboardNavigation.DirectionalNavigation="Cycle"
                                                            KeyboardNavigation.TabNavigation="Cycle"
                                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                        </Grid>
                                    </ScrollViewer>
                                </Border>
                            </Popup>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSuspendingPopupAnimation" Value="True">
                            <Setter TargetName="PART_Popup"
                                    Property="PopupAnimation"
                                    Value="None" />
                        </Trigger>
                        <Trigger Property="Icon" Value="{x:Null}">
                            <Setter TargetName="Icon"
                                    Property="Visibility"
                                    Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="GlyphPanel"
                                    Property="Visibility"
                                    Value="Visible" />
                            <Setter TargetName="Icon"
                                    Property="Visibility"
                                    Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsHighlighted" Value="True">
                            <Setter TargetName="templateRoot"
                                    Property="Background"
                                    Value="{StaticResource ControlPrimaryMouseOverBackground}" />
                            <Setter TargetName="templateRoot"
                                    Property="BorderBrush"
                                    Value="{StaticResource ControlPrimaryMouseOverBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="templateRoot"
                                    Property="TextElement.Foreground"
                                    Value="{StaticResource ControlDisabledGlyphColor}" />
                        </Trigger>
                        <Trigger SourceName="SubMenuScrollViewer" Property="CanContentScroll" Value="False">
                            <Setter TargetName="OpaqueRect"
                                    Property="Canvas.Top"
                                    Value="{Binding VerticalOffset,
                                                    ElementName=SubMenuScrollViewer}" />
                            <Setter TargetName="OpaqueRect"
                                    Property="Canvas.Left"
                                    Value="{Binding HorizontalOffset,
                                                    ElementName=SubMenuScrollViewer}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="DropDownMenuItemStyle"
                     TargetType="{x:Type MenuItem}">
        <Border x:Name="templateRoot"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                SnapsToDevicePixels="True">
            <Grid Margin="-1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"
                                      MinWidth="22"
                                      SharedSizeGroup="MenuItemIconColumnGroup" />
                    <ColumnDefinition Width="13" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="30" />
                    <ColumnDefinition Width="Auto"
                                      SharedSizeGroup="MenuItemIGTColumnGroup" />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
                <ContentPresenter x:Name="Icon"
                                  Width="16"
                                  Height="16"
                                  Margin="3"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  Content="{TemplateBinding Icon}"
                                  ContentSource="Icon"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                <Border x:Name="GlyphPanel"
                        Width="22"
                        Height="22"
                        Margin="-1,0,0,0"
                        VerticalAlignment="Center"
                        Background="#3D26A0DA"
                        BorderBrush="#FF26A0DA"
                        BorderThickness="1"
                        Visibility="Hidden">
                    <Path x:Name="Glyph"
                          Width="9"
                          Height="11"
                          Data="F1M10,1.2L4.7,9.1 4.5,9.1 0,5.2 1.3,3.5 4.3,6.1 8.3,0 10,1.2z"
                          Fill="#FF212121"
                          FlowDirection="LeftToRight" />
                </Border>
                <ContentPresenter Grid.Column="2"
                                  Margin="{TemplateBinding Padding}"
                                  HorizontalAlignment="Left"
                                  VerticalAlignment="Center"
                                  Content="{TemplateBinding Header}"
                                  ContentSource="Header"
                                  ContentStringFormat="{TemplateBinding HeaderStringFormat}"
                                  ContentTemplate="{TemplateBinding HeaderTemplate}"
                                  RecognizesAccessKey="True"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                <TextBlock Grid.Column="4"
                           Margin="{TemplateBinding Padding}"
                           VerticalAlignment="Center"
                           Opacity="0.7"
                           Text="{TemplateBinding InputGestureText}" />
                <Path x:Name="RightArrow"
                      Grid.Column="5"
                      Margin="10,0,0,0"
                      HorizontalAlignment="Left"
                      VerticalAlignment="Center"
                      Data="M0,0L4,3.5 0,7z"
                      Fill="{StaticResource ControlGlyphColor}" />
                <Popup x:Name="PART_Popup"
                       AllowsTransparency="True"
                       Focusable="False"
                       HorizontalOffset="-2"
                       IsOpen="{Binding IsSubmenuOpen,
                                        RelativeSource={RelativeSource TemplatedParent}}"
                       Placement="Right"
                       PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
                       VerticalOffset="-3">
                    <Border x:Name="SubMenuBorder"
                            Padding="0"
                            Background="{StaticResource ControlDefaultBackground}"
                            BorderBrush="{StaticResource ControlDefaultBorderBrush}"
                            BorderThickness="1">
                        <ScrollViewer x:Name="SubMenuScrollViewer"
                                      Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer,
                                                                                    TypeInTargetAssembly={x:Type FrameworkElement}}}">
                            <Grid RenderOptions.ClearTypeHint="Enabled">
                                <Canvas x:Name="Canvas"
                                        Width="22"
                                        Height="Auto"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Stretch">
                                    <Rectangle x:Name="OpaqueRect"
                                               Width="{Binding ActualWidth,
                                                               ElementName=SubMenuBorder}"
                                               Height="{Binding ActualHeight,
                                                                ElementName=SubMenuBorder}"
                                               Fill="{Binding Background,
                                                              ElementName=SubMenuBorder}" />
                                </Canvas>
                                <Rectangle x:Name="Rectangle"
                                           Width="1"
                                           Margin="22,0,0,0"
                                           HorizontalAlignment="Left"
                                           Fill="{StaticResource ControlDarkerBorderBrush}" />
                                <Rectangle Width="22"
                                           Margin="0"
                                           HorizontalAlignment="Left"
                                           Fill="{StaticResource ControlBrightDefaultBackground}" />
                                <ItemsPresenter x:Name="ItemsPresenter"
                                                Grid.IsSharedSizeScope="True"
                                                KeyboardNavigation.DirectionalNavigation="Cycle"
                                                KeyboardNavigation.TabNavigation="Cycle"
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSuspendingPopupAnimation" Value="True">
                <Setter TargetName="PART_Popup"
                        Property="PopupAnimation"
                        Value="None" />
            </Trigger>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon"
                        Property="Visibility"
                        Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter TargetName="GlyphPanel"
                        Property="Visibility"
                        Value="Visible" />
                <Setter TargetName="Icon"
                        Property="Visibility"
                        Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter TargetName="templateRoot"
                        Property="Background"
                        Value="{StaticResource ControlPrimaryMouseOverBackground}" />
                <Setter TargetName="templateRoot"
                        Property="BorderBrush"
                        Value="{StaticResource ControlPrimaryMouseOverBorderBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="templateRoot"
                        Property="TextElement.Foreground"
                        Value="{StaticResource ControlDisabledGlyphColor}" />
                <Setter TargetName="Glyph"
                        Property="Fill"
                        Value="{StaticResource ControlDisabledGlyphColor}" />
                <Setter TargetName="RightArrow"
                        Property="Fill"
                        Value="{StaticResource ControlDisabledGlyphColor}" />
            </Trigger>
            <Trigger SourceName="SubMenuScrollViewer" Property="CanContentScroll" Value="False">
                <Setter TargetName="OpaqueRect"
                        Property="Canvas.Top"
                        Value="{Binding VerticalOffset,
                                        ElementName=SubMenuScrollViewer}" />
                <Setter TargetName="OpaqueRect"
                        Property="Canvas.Left"
                        Value="{Binding HorizontalOffset,
                                        ElementName=SubMenuScrollViewer}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="SingleDropDownMenuItem"
                     TargetType="{x:Type MenuItem}">
        <Border x:Name="templateRoot"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                SnapsToDevicePixels="True">
            <Grid Margin="-1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"
                                      MinWidth="22"
                                      SharedSizeGroup="MenuItemIconColumnGroup" />
                    <ColumnDefinition Width="13" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="30" />
                    <ColumnDefinition Width="Auto"
                                      SharedSizeGroup="MenuItemIGTColumnGroup" />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
                <ContentPresenter x:Name="Icon"
                                  Width="16"
                                  Height="16"
                                  Margin="3"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  Content="{TemplateBinding Icon}"
                                  ContentSource="Icon"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                <Border x:Name="GlyphPanel"
                        Width="22"
                        Height="22"
                        Margin="-1,0,0,0"
                        VerticalAlignment="Center"
                        Background="#3D26A0DA"
                        BorderBrush="#FF26A0DA"
                        BorderThickness="1"
                        Visibility="Hidden">
                    <Path x:Name="Glyph"
                          Width="9"
                          Height="11"
                          Data="F1M10,1.2L4.7,9.1 4.5,9.1 0,5.2 1.3,3.5 4.3,6.1 8.3,0 10,1.2z"
                          Fill="#FF212121"
                          FlowDirection="LeftToRight" />
                </Border>
                <ContentPresenter Grid.Column="2"
                                  Margin="{TemplateBinding Padding}"
                                  HorizontalAlignment="Left"
                                  VerticalAlignment="Center"
                                  Content="{TemplateBinding Header}"
                                  ContentSource="Header"
                                  ContentStringFormat="{TemplateBinding HeaderStringFormat}"
                                  ContentTemplate="{TemplateBinding HeaderTemplate}"
                                  RecognizesAccessKey="True"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                <TextBlock Grid.Column="4"
                           Margin="{TemplateBinding Padding}"
                           VerticalAlignment="Center"
                           Opacity="0.7"
                           Text="{TemplateBinding InputGestureText}" />
                <Path x:Name="RightArrow"
                      Grid.Column="5"
                      Margin="10,0,0,0"
                      HorizontalAlignment="Left"
                      VerticalAlignment="Center"
                      Data="M0,0L4,3.5 0,7z"
                      Fill="{StaticResource ControlGlyphColor}"
                      Visibility="Hidden" />
                <Popup x:Name="PART_Popup"
                       AllowsTransparency="True"
                       Focusable="False"
                       HorizontalOffset="-2"
                       IsOpen="{Binding IsSubmenuOpen,
                                        RelativeSource={RelativeSource TemplatedParent}}"
                       Placement="Right"
                       PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
                       VerticalOffset="-3">
                    <Border x:Name="SubMenuBorder"
                            Padding="0"
                            Background="{StaticResource ControlDefaultBackground}"
                            BorderBrush="{StaticResource ControlDefaultBorderBrush}"
                            BorderThickness="1">
                        <ScrollViewer x:Name="SubMenuScrollViewer"
                                      Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer,
                                                                                    TypeInTargetAssembly={x:Type FrameworkElement}}}">
                            <Grid RenderOptions.ClearTypeHint="Enabled">
                                <Canvas x:Name="Canvas"
                                        Width="22"
                                        Height="Auto"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Stretch">
                                    <Rectangle x:Name="OpaqueRect"
                                               Width="{Binding ActualWidth,
                                                               ElementName=SubMenuBorder}"
                                               Height="{Binding ActualHeight,
                                                                ElementName=SubMenuBorder}"
                                               Fill="{Binding Background,
                                                              ElementName=SubMenuBorder}" />
                                </Canvas>
                                <Rectangle x:Name="Rectangle"
                                           Width="1"
                                           Margin="22,0,0,0"
                                           HorizontalAlignment="Left"
                                           Fill="{StaticResource ControlDarkerBorderBrush}" />
                                <Rectangle Width="22"
                                           Margin="0"
                                           HorizontalAlignment="Left"
                                           Fill="{StaticResource ControlBrightDefaultBackground}" />
                                <ItemsPresenter x:Name="ItemsPresenter"
                                                Grid.IsSharedSizeScope="True"
                                                KeyboardNavigation.DirectionalNavigation="Cycle"
                                                KeyboardNavigation.TabNavigation="Cycle"
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSuspendingPopupAnimation" Value="True">
                <Setter TargetName="PART_Popup"
                        Property="PopupAnimation"
                        Value="None" />
            </Trigger>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon"
                        Property="Visibility"
                        Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter TargetName="GlyphPanel"
                        Property="Visibility"
                        Value="Visible" />
                <Setter TargetName="Icon"
                        Property="Visibility"
                        Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter TargetName="templateRoot"
                        Property="Background"
                        Value="{StaticResource ControlPrimaryMouseOverBackground}" />
                <Setter TargetName="templateRoot"
                        Property="BorderBrush"
                        Value="{StaticResource ControlPrimaryMouseOverBorderBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="templateRoot"
                        Property="TextElement.Foreground"
                        Value="{StaticResource ControlDisabledGlyphColor}" />
                <Setter TargetName="Glyph"
                        Property="Fill"
                        Value="{StaticResource ControlDisabledGlyphColor}" />
                <Setter TargetName="RightArrow"
                        Property="Fill"
                        Value="{StaticResource ControlDisabledGlyphColor}" />
            </Trigger>
            <Trigger SourceName="SubMenuScrollViewer" Property="CanContentScroll" Value="False">
                <Setter TargetName="OpaqueRect"
                        Property="Canvas.Top"
                        Value="{Binding VerticalOffset,
                                        ElementName=SubMenuScrollViewer}" />
                <Setter TargetName="OpaqueRect"
                        Property="Canvas.Left"
                        Value="{Binding HorizontalOffset,
                                        ElementName=SubMenuScrollViewer}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--  -_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-  -->

    <!--  Password Box  -->
    <Style TargetType="{x:Type PasswordBox}">
        <Setter Property="PasswordChar"
                Value="●" />
        <Setter Property="Background"
                Value="{StaticResource ControlDefaultBackground}" />
        <Setter Property="BorderBrush"
                Value="{StaticResource ControlDefaultBorderBrush}" />
        <Setter Property="Foreground"
                Value="{StaticResource ControlDefaultForeground}" />
        <Setter Property="CaretBrush"
                Value="{StaticResource ControlPrimaryCaretBackground}" />
        <Setter Property="SelectionBrush"
                Value="{StaticResource ControlPrimaryCaretSelectionBackground}" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="KeyboardNavigation.TabNavigation"
                Value="None" />
        <Setter Property="HorizontalContentAlignment"
                Value="Left" />
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}" />
        <Setter Property="AllowDrop"
                Value="true" />
        <Setter Property="ScrollViewer.PanningMode"
                Value="VerticalFirst" />
        <Setter Property="Stylus.IsFlicksEnabled"
                Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}">
                    <Border x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="PART_ContentHost"
                                      Focusable="false"
                                      HorizontalScrollBarVisibility="Hidden"
                                      VerticalScrollBarVisibility="Hidden" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="border"
                                    Property="Opacity"
                                    Value="0.56" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border"
                                    Property="BorderBrush"
                                    Value="{StaticResource ControlPrimaryMouseOverBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter TargetName="border"
                                    Property="BorderBrush"
                                    Value="{StaticResource ControlPrimarySelectedBorderBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true" />
                    <Condition Property="IsSelectionActive" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="SelectionBrush"
                        Value="{StaticResource ControlPrimaryDisabledGlyphColor}" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <!--  -_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-  -->

    <!--  ProgressBar  -->
    <Style TargetType="{x:Type ProgressBar}">
        <Setter Property="Foreground"
                Value="{StaticResource ControlPrimaryDefaultBackground}" />
        <Setter Property="Background"
                Value="{StaticResource ControlDefaultBackground}" />
        <Setter Property="BorderBrush"
                Value="{StaticResource ControlDefaultBorderBrush}" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ProgressBar}">
                    <Grid x:Name="TemplateRoot">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}" />
                        <Rectangle x:Name="PART_Track" />
                        <Grid x:Name="PART_Indicator"
                              Margin="1"
                              HorizontalAlignment="Left"
                              ClipToBounds="true">
                            <Rectangle x:Name="Indicator"
                                       Fill="{TemplateBinding Foreground}" />
                            <Rectangle x:Name="Animation"
                                       Fill="{TemplateBinding Foreground}"
                                       RenderTransformOrigin="0.5,0.5">
                                <Rectangle.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform />
                                        <SkewTransform />
                                        <RotateTransform />
                                        <TranslateTransform />
                                    </TransformGroup>
                                </Rectangle.RenderTransform>
                            </Rectangle>
                        </Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Determinate" />
                                <VisualState x:Name="Indeterminate">
                                    <Storyboard RepeatBehavior="Forever">
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Animation"
                                                                       Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="0.25" />
                                            <EasingDoubleKeyFrame KeyTime="0:0:1"
                                                                  Value="0.25" />
                                            <EasingDoubleKeyFrame KeyTime="0:0:2"
                                                                  Value="0.25" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <PointAnimationUsingKeyFrames Storyboard.TargetName="Animation"
                                                                      Storyboard.TargetProperty="(UIElement.RenderTransformOrigin)">
                                            <EasingPointKeyFrame KeyTime="0"
                                                                 Value="-0.5,0.5" />
                                            <EasingPointKeyFrame KeyTime="0:0:1"
                                                                 Value="0.5,0.5" />
                                            <EasingPointKeyFrame KeyTime="0:0:2"
                                                                 Value="1.5,0.5" />
                                        </PointAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Orientation" Value="Vertical">
                            <Setter TargetName="TemplateRoot"
                                    Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsIndeterminate" Value="true">
                            <Setter TargetName="Indicator"
                                    Property="Visibility"
                                    Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  -_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-  -->

    <!--  RadioButton  -->
    <Style TargetType="{x:Type RadioButton}">
        <Setter Property="FocusVisualStyle"
                Value="{StaticResource FocusVisual}" />
        <Setter Property="Background"
                Value="{StaticResource ControlDefaultBackground}" />
        <Setter Property="BorderBrush"
                Value="{StaticResource ControlDefaultBorderBrush}" />
        <Setter Property="Foreground"
                Value="{StaticResource ControlDefaultForeground}" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="MinHeight"
                Value="16" />
        <Setter Property="Height"
                Value="20" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid x:Name="templateRoot"
                          Background="Transparent"
                          SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"
                                              MinWidth="16" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Border x:Name="radioButtonBorder"
                                Width="16"
                                Height="16"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="6">
                            <Grid x:Name="markGrid"
                                  Margin="2">
                                <Ellipse x:Name="optionMark"
                                         MinWidth="6"
                                         MinHeight="6"
                                         Fill="{DynamicResource ControlPrimaryGlyphColor}"
                                         Opacity="0" />
                            </Grid>
                        </Border>
                        <ContentPresenter x:Name="contentPresenter"
                                          Grid.Column="1"
                                          Margin="3,0,0,0"
                                          HorizontalAlignment="Left"
                                          VerticalAlignment="Center"
                                          Focusable="False"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent" Value="true">
                            <Setter Property="FocusVisualStyle"
                                    Value="{StaticResource OptionMarkFocusVisual}" />
                            <Setter Property="Padding"
                                    Value="4,-1,0,0" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="radioButtonBorder"
                                    Property="Background"
                                    Value="{StaticResource ControlMouseOverBackground}" />
                            <Setter TargetName="radioButtonBorder"
                                    Property="BorderBrush"
                                    Value="{StaticResource ControlMouseOverBorderBrush}" />
                            <Setter TargetName="optionMark"
                                    Property="Fill"
                                    Value="{StaticResource ControlPrimaryMouseOverGlyphColor}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="radioButtonBorder"
                                    Property="Background"
                                    Value="{StaticResource ControlDisabledBackground}" />
                            <Setter TargetName="radioButtonBorder"
                                    Property="BorderBrush"
                                    Value="{StaticResource ControlDisabledBorderBrush}" />
                            <Setter TargetName="optionMark"
                                    Property="Fill"
                                    Value="{StaticResource ControlPrimaryDisabledGlyphColor}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="radioButtonBorder"
                                    Property="Background"
                                    Value="{StaticResource ControlSelectedBackground}" />
                            <Setter TargetName="radioButtonBorder"
                                    Property="BorderBrush"
                                    Value="{StaticResource ControlSelectedBorderBrush}" />
                            <Setter TargetName="optionMark"
                                    Property="Fill"
                                    Value="{StaticResource ControlPrimarySelectedGlyphColor}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="true" />
                                <Condition Property="IsPressed" Value="true" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="optionMark"
                                    Property="Fill"
                                    Value="{StaticResource ControlPrimarySelectedMouseOverGlyphColor}" />
                        </MultiTrigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="optionMark"
                                    Property="Opacity"
                                    Value="1" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter TargetName="optionMark"
                                    Property="Opacity"
                                    Value="0.56" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  -_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-  -->

    <!--  RichTextBox  -->
    <Style TargetType="{x:Type RichTextBox}">
        <Style.Resources>
            <Style x:Key="{x:Type FlowDocument}"
                   TargetType="{x:Type FlowDocument}">
                <Setter Property="OverridesDefaultStyle"
                        Value="true" />
            </Style>
            <Style x:Key="{x:Type Hyperlink}"
                   BasedOn="{StaticResource {x:Type Hyperlink}}"
                   TargetType="{x:Type Hyperlink}">
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="true">
                        <Setter Property="Foreground"
                                Value="Blue" />
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="false">
                        <Setter Property="Foreground"
                                Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                    </Trigger>
                </Style.Triggers>
            </Style>
        </Style.Resources>
        <Setter Property="MinWidth"
                Value="10" />
        <Style.BasedOn>
            <StaticResource ResourceKey="{x:Type TextBoxBase}" />
        </Style.BasedOn>
    </Style>

    <Style x:Key="{x:Type TextBoxBase}"
           TargetType="{x:Type TextBoxBase}">
        <Setter Property="Background"
                Value="{StaticResource ContainerBackground}" />
        <Setter Property="BorderBrush"
                Value="{StaticResource ControlDefaultBorderBrush}" />
        <Setter Property="Foreground"
                Value="{StaticResource ControlDefaultForeground}" />
        <Setter Property="CaretBrush"
                Value="{StaticResource ControlPrimaryCaretBackground}" />
        <Setter Property="SelectionBrush"
                Value="{StaticResource ControlPrimaryCaretSelectionBackground}" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="KeyboardNavigation.TabNavigation"
                Value="None" />
        <Setter Property="HorizontalContentAlignment"
                Value="Left" />
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}" />
        <Setter Property="AllowDrop"
                Value="true" />
        <Setter Property="ScrollViewer.PanningMode"
                Value="VerticalFirst" />
        <Setter Property="Stylus.IsFlicksEnabled"
                Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                    <Border x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="PART_ContentHost"
                                      Focusable="false"
                                      HorizontalScrollBarVisibility="Hidden"
                                      VerticalScrollBarVisibility="Hidden" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="border"
                                    Property="Opacity"
                                    Value="0.56" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border"
                                    Property="BorderBrush"
                                    Value="{StaticResource ControlMouseOverBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter TargetName="border"
                                    Property="BorderBrush"
                                    Value="{StaticResource ControlSelectedBorderBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true" />
                    <Condition Property="IsSelectionActive" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="SelectionBrush"
                        Value="{StaticResource ControlDisabledGlyphColor}" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{x:Type Hyperlink}"
           TargetType="{x:Type Hyperlink}">
        <Setter Property="Foreground"
                Value="{StaticResource ControlPrimaryCaretBackground}" />
        <Setter Property="TextDecorations"
                Value="Underline" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Foreground"
                        Value="{StaticResource ControlPrimaryBrightDefaultBackground}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground"
                        Value="{StaticResource ControlDisabledGlyphColor}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="true">
                <Setter Property="Cursor"
                        Value="Hand" />
            </Trigger>
        </Style.Triggers>
    </Style>


    <!--  -_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-  -->

    <!--  ScrollBar  -->

    <Style TargetType="{x:Type ScrollBar}">
        <Setter Property="Stylus.IsPressAndHoldEnabled"
                Value="false" />
        <Setter Property="Stylus.IsFlicksEnabled"
                Value="false" />
        <Setter Property="Background"
                Value="{StaticResource ControlDefaultBackground}" />
        <Setter Property="BorderBrush"
                Value="{StaticResource ControlDefaultBorderBrush}" />
        <Setter Property="Foreground"
                Value="{StaticResource ControlBrightDefaultBorderBrush}" />
        <Setter Property="BorderThickness"
                Value="1,0" />
        <Setter Property="Width"
                Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
        <Setter Property="MinWidth"
                Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid x:Name="Bg"
                          SnapsToDevicePixels="true">
                        <Grid.RowDefinitions>
                            <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" />
                            <RowDefinition Height="0.00001*" />
                            <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" />
                        </Grid.RowDefinitions>
                        <Button x:Name="PART_LineUpButton"
                                Command="{x:Static ScrollBar.LineUpCommand}"
                                BorderThickness="1,1,1,0">
                            <Path x:Name="ArrowTop"
                                  Margin="3,4,3,3"
                                  Data="M 0,4 C0,4 0,6 0,6 0,6 3.5,2.5 3.5,2.5 3.5,2.5 7,6 7,6 7,6 7,4 7,4 7,4 3.5,0.5 3.5,0.5 3.5,0.5 0,4 0,4 z"
                                  Fill="{StaticResource ControlGlyphColor}"
                                  Stretch="Uniform" />
                        </Button>
                        <Border Grid.Row="1"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="1,0,1,0">
                            <Track x:Name="PART_Track"
                                   Grid.Row="1"
                                   IsDirectionReversed="true">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}"
                                                  Style="{StaticResource RepeatButtonTransparent}" />
                                </Track.DecreaseRepeatButton>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}"
                                                  Style="{StaticResource RepeatButtonTransparent}" />
                                </Track.IncreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb Style="{DynamicResource ScrollBarThumbVertical}" />
                                </Track.Thumb>
                            </Track>
                        </Border>

                        <Button x:Name="PART_LineDownButton"
                                Grid.Row="2"
                                Command="{x:Static ScrollBar.LineDownCommand}"
                                BorderThickness="1,0,1,1">
                            <Path x:Name="ArrowBottom"
                                  Margin="3,4,3,3"
                                  Data="M 0,2.5 C0,2.5 0,0.5 0,0.5 0,0.5 3.5,4 3.5,4 3.5,4 7,0.5 7,0.5 7,0.5 7,2.5 7,2.5 7,2.5 3.5,6 3.5,6 3.5,6 0,2.5 0,2.5 z"
                                  Fill="{StaticResource ControlGlyphColor}"
                                  Stretch="Uniform" />
                        </Button>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}" Value="true" />
                                <Condition Binding="{Binding IsPressed, ElementName=PART_LineDownButton}" Value="true" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="ArrowBottom"
                                    Property="Fill"
                                    Value="{StaticResource ControlSelectedGlyphColor}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}" Value="true" />
                                <Condition Binding="{Binding IsPressed, ElementName=PART_LineUpButton}" Value="true" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="ArrowTop"
                                    Property="Fill"
                                    Value="{StaticResource ControlSelectedGlyphColor}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}" Value="true" />
                                <Condition Binding="{Binding IsPressed, ElementName=PART_LineDownButton}" Value="false" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="ArrowBottom"
                                    Property="Fill"
                                    Value="{StaticResource ControlMouseOverGlyphColor}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}" Value="true" />
                                <Condition Binding="{Binding IsPressed, ElementName=PART_LineUpButton}" Value="false" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="ArrowTop"
                                    Property="Fill"
                                    Value="{StaticResource ControlMouseOverGlyphColor}" />
                        </MultiDataTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="ArrowTop"
                                    Property="Fill"
                                    Value="{StaticResource ControlDisabledGlyphColor}" />
                            <Setter TargetName="ArrowBottom"
                                    Property="Fill"
                                    Value="{StaticResource ControlDisabledGlyphColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width"
                        Value="Auto" />
                <Setter Property="Background"
                        Value="{StaticResource ControlDefaultBackground}" />
                <Setter Property="BorderBrush"
                        Value="{StaticResource ControlDefaultBorderBrush}" />
                <Setter Property="Foreground"
                        Value="{StaticResource ControlBrightDefaultBorderBrush}" />
                <Setter Property="MinWidth"
                        Value="0" />
                <Setter Property="Height"
                        Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}" />
                <Setter Property="MinHeight"
                        Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}" />
                <Setter Property="BorderThickness"
                        Value="1" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid x:Name="Bg"
                                  SnapsToDevicePixels="true">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}" />
                                    <ColumnDefinition Width="0.00001*" />
                                    <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}" />
                                </Grid.ColumnDefinitions>
                                <Button x:Name="PART_LineLeftButton"
                                        Command="{x:Static ScrollBar.LineLeftCommand}"
                                        BorderThickness="1,1,0,1">
                                    <Path x:Name="ArrowLeft"
                                          Margin="3"
                                          Data="M 3.18,7 C3.18,7 5,7 5,7 5,7 1.81,3.5 1.81,3.5 1.81,3.5 5,0 5,0 5,0 3.18,0 3.18,0 3.18,0 0,3.5 0,3.5 0,3.5 3.18,7 3.18,7 z"
                                          Fill="{StaticResource ControlGlyphColor}"
                                          Stretch="Uniform" />
                                </Button>
                                <Border Grid.Column="1"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="0,1,0,1">
                                    <Track x:Name="PART_Track"
                                           Grid.Column="1">
                                        <Track.DecreaseRepeatButton>
                                            <RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}"
                                                          Style="{StaticResource RepeatButtonTransparent}" />
                                        </Track.DecreaseRepeatButton>
                                        <Track.IncreaseRepeatButton>
                                            <RepeatButton Command="{x:Static ScrollBar.PageRightCommand}"
                                                          Style="{StaticResource RepeatButtonTransparent}" />
                                        </Track.IncreaseRepeatButton>
                                        <Track.Thumb>
                                            <Thumb Style="{DynamicResource ScrollBarThumbHorizontal}" />
                                        </Track.Thumb>
                                    </Track>
                                </Border>

                                <Button x:Name="PART_LineRightButton"
                                        Grid.Column="2"
                                        Command="{x:Static ScrollBar.LineRightCommand}"
                                        BorderThickness="0,1,1,1">
                                    <Path x:Name="ArrowRight"
                                          Margin="3"
                                          Data="M 1.81,7 C1.81,7 0,7 0,7 0,7 3.18,3.5 3.18,3.5 3.18,3.5 0,0 0,0 0,0 1.81,0 1.81,0 1.81,0 5,3.5 5,3.5 5,3.5 1.81,7 1.81,7 z"
                                          Fill="{StaticResource ControlGlyphColor}"
                                          Stretch="Uniform" />
                                </Button>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineRightButton}" Value="true" />
                                        <Condition Binding="{Binding IsPressed, ElementName=PART_LineRightButton}" Value="true" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="ArrowRight"
                                            Property="Fill"
                                            Value="{StaticResource ControlSelectedGlyphColor}" />
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineLeftButton}" Value="true" />
                                        <Condition Binding="{Binding IsPressed, ElementName=PART_LineLeftButton}" Value="true" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="ArrowLeft"
                                            Property="Fill"
                                            Value="{StaticResource ControlSelectedGlyphColor}" />
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineRightButton}" Value="true" />
                                        <Condition Binding="{Binding IsPressed, ElementName=PART_LineRightButton}" Value="false" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="ArrowRight"
                                            Property="Fill"
                                            Value="{StaticResource ControlMouseOverGlyphColor}" />
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineLeftButton}" Value="true" />
                                        <Condition Binding="{Binding IsPressed, ElementName=PART_LineLeftButton}" Value="false" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="ArrowLeft"
                                            Property="Fill"
                                            Value="{StaticResource ControlMouseOverGlyphColor}" />
                                </MultiDataTrigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter TargetName="ArrowLeft"
                                            Property="Fill"
                                            Value="{StaticResource ControlDisabledGlyphColor}" />
                                    <Setter TargetName="ArrowRight"
                                            Property="Fill"
                                            Value="{StaticResource ControlDisabledGlyphColor}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ScrollBarButton"
           TargetType="{x:Type RepeatButton}">
        <Setter Property="FocusVisualStyle"
                Value="{StaticResource FocusVisual}" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="Background"
                Value="{StaticResource ControlDefaultBackground}" />
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Padding"
                Value="1" />
        <Setter Property="Focusable"
                Value="false" />
        <Setter Property="IsTabStop"
                Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border x:Name="border"
                            Background="{StaticResource ControlDefaultBackground}"
                            BorderBrush="{StaticResource ControlDefaultBorderBrush}"
                            BorderThickness="1"
                            SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter"
                                          Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Focusable="False"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border"
                                    Property="Background"
                                    Value="{StaticResource ControlDefaultBackground}" />
                            <Setter TargetName="border"
                                    Property="BorderBrush"
                                    Value="{StaticResource ControlDefaultBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="false">
                            <Setter TargetName="border"
                                    Property="Background"
                                    Value="{StaticResource ControlDefaultBackground}" />
                            <Setter TargetName="border"
                                    Property="BorderBrush"
                                    Value="{StaticResource ControlDefaultBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="border"
                                    Property="Background"
                                    Value="{StaticResource ControlSelectedBackground}" />
                            <Setter TargetName="border"
                                    Property="BorderBrush"
                                    Value="{StaticResource ControlSelectedBackground}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="contentPresenter"
                                    Property="Opacity"
                                    Value="0.56" />
                            <Setter TargetName="border"
                                    Property="Background"
                                    Value="{StaticResource ControlDisabledBackground}" />
                            <Setter TargetName="border"
                                    Property="BorderBrush"
                                    Value="{StaticResource ControlDisabledBorderBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarThumbVertical"
           TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle"
                Value="true" />
        <Setter Property="Background"
                Value="{StaticResource ControlBrightDefaultBackground}" />
        <Setter Property="BorderBrush"
                Value="{StaticResource ControlBrightDefaultBorderBrush}" />
        <Setter Property="IsTabStop"
                Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid Width="{TemplateBinding Width}"
                          Height="{TemplateBinding Height}">
                        <Rectangle x:Name="rectangle"
                                   Fill="{TemplateBinding Background}"
                                   SnapsToDevicePixels="True" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="rectangle"
                                    Property="Fill"
                                    Value="{StaticResource ControlMouseOverBackground}" />
                            <Setter Property="BorderBrush"
                                    Value="{StaticResource ControlMouseOverBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsDragging" Value="true">
                            <Setter TargetName="rectangle"
                                    Property="Fill"
                                    Value="{StaticResource ControlBrightDefaultBackground}" />
                            <Setter Property="BorderBrush"
                                    Value="{StaticResource ControlBrightDefaultBackground}" />
                            <Setter Property="Foreground"
                                    Value="{StaticResource ControlBrightDefaultBorderBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarThumbHorizontal"
           TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle"
                Value="true" />
        <Setter Property="Background"
                Value="{StaticResource ControlBrightDefaultBackground}" />
        <Setter Property="BorderBrush"
                Value="{StaticResource ControlBrightDefaultBorderBrush}" />
        <Setter Property="IsTabStop"
                Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid Width="{TemplateBinding Width}"
                          Height="{TemplateBinding Height}">
                        <Rectangle x:Name="rectangle"
                                   Fill="{TemplateBinding Background}"
                                   SnapsToDevicePixels="True" />

                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="rectangle"
                                    Property="Fill"
                                    Value="{StaticResource ControlMouseOverBackground}" />
                            <Setter Property="BorderBrush"
                                    Value="{StaticResource ControlMouseOverBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsDragging" Value="true">
                            <Setter TargetName="rectangle"
                                    Property="Fill"
                                    Value="{StaticResource ControlBrightDefaultBackground}" />
                            <Setter Property="BorderBrush"
                                    Value="{StaticResource ControlBrightDefaultBackground}" />
                            <Setter Property="Foreground"
                                    Value="{StaticResource ControlBrightDefaultBorderBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  -_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-  -->

    <!--  ScrollViewer  -->
    <Style TargetType="{x:Type ScrollViewer}">
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="BorderBrush"
                Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid x:Name="Grid"
                          Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Rectangle x:Name="Corner"
                                   Grid.Row="1"
                                   Grid.Column="1"
                                   Fill="Transparent" />
                        <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
                                                Grid.Row="0"
                                                Grid.Column="0"
                                                Margin="{TemplateBinding Padding}"
                                                CanContentScroll="{TemplateBinding CanContentScroll}"
                                                CanHorizontallyScroll="False"
                                                CanVerticallyScroll="False"
                                                Content="{TemplateBinding Content}"
                                                ContentTemplate="{TemplateBinding ContentTemplate}" />
                        <ScrollBar x:Name="PART_VerticalScrollBar"
                                   Grid.Row="0"
                                   Grid.RowSpan="2"
                                   Grid.Column="1"
                                   AutomationProperties.AutomationId="VerticalScrollBar"
                                   Cursor="Arrow"
                                   Maximum="{TemplateBinding ScrollableHeight}"
                                   Minimum="0"
                                   ViewportSize="{TemplateBinding ViewportHeight}"
                                   Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                   Value="{Binding VerticalOffset,
                                                   Mode=OneWay,
                                                   RelativeSource={RelativeSource TemplatedParent}}" />
                        <ScrollBar x:Name="PART_HorizontalScrollBar"
                                   Grid.Row="1"
                                   Grid.Column="0"
                                   Grid.ColumnSpan="1"
                                   AutomationProperties.AutomationId="HorizontalScrollBar"
                                   Cursor="Arrow"
                                   Maximum="{TemplateBinding ScrollableWidth}"
                                   Minimum="0"
                                   Orientation="Horizontal"
                                   ViewportSize="{TemplateBinding ViewportWidth}"
                                   Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                   Value="{Binding HorizontalOffset,
                                                   Mode=OneWay,
                                                   RelativeSource={RelativeSource TemplatedParent}}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  -_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-  -->

    <!--  Separator  -->
    <Style TargetType="{x:Type Separator}">
        <Setter Property="Background"
                Value="{StaticResource ControlBrightDefaultBackground}" />
        <Setter Property="Margin"
                Value="0,2,0,2" />
        <Setter Property="Focusable"
                Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Separator}">
                    <Border Height="1"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="VerticalSeparator"
           TargetType="{x:Type Separator}">
        <Setter Property="Background"
                Value="{StaticResource ControlBrightDefaultBackground}" />
        <Setter Property="Width"
                Value="2" />
        <Setter Property="Margin"
                Value="2,0,2,0" />
        <Setter Property="Focusable"
                Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Separator}">
                    <Border Height="Auto"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="MenuItemSeparator"
           TargetType="{x:Type Separator}">
        <Setter Property="Background"
                Value="{StaticResource ControlBrightDefaultBorderBrush}" />
        <Setter Property="Margin"
                Value="0,2,0,2" />
        <Setter Property="Focusable"
                Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Separator}">
                    <Border Height="1"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="true" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  -_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-  -->

    <!--  Slider  -->
    <ControlTemplate x:Key="SliderThumbHorizontalTop"
                     TargetType="{x:Type Thumb}">
        <Grid HorizontalAlignment="Center"
              VerticalAlignment="Center"
              UseLayoutRounding="True">
            <Path x:Name="grip"
                  VerticalAlignment="Center"
                  Data="M 0,6 C0,6 5.5,0 5.5,0 5.5,0 11,6 11,6 11,6 11,18 11,18 11,18 0,18 0,18 0,18 0,6 0,6 z"
                  Fill="{StaticResource ControlBrightDefaultBackground}"
                  SnapsToDevicePixels="True"
                  Stretch="Fill"
                  Stroke="{StaticResource ControlBrightDefaultBorderBrush}"
                  StrokeLineJoin="Round"
                  StrokeThickness="1"
                  UseLayoutRounding="True" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter TargetName="grip"
                        Property="Fill"
                        Value="{StaticResource ControlPrimaryDarkerBackground}" />
                <Setter TargetName="grip"
                        Property="Stroke"
                        Value="{StaticResource ControlPrimaryDarkerBorderBrush}" />
            </Trigger>
            <Trigger Property="IsDragging" Value="true">
                <Setter TargetName="grip"
                        Property="Fill"
                        Value="{StaticResource ControlPrimarySelectedMouseOverBackground}" />
                <Setter TargetName="grip"
                        Property="Stroke"
                        Value="{StaticResource ControlPrimarySelectedMouseOverBorderBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter TargetName="grip"
                        Property="Fill"
                        Value="{StaticResource ControlDisabledBackground}" />
                <Setter TargetName="grip"
                        Property="Stroke"
                        Value="{StaticResource ControlDisabledBorderBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="SliderThumbHorizontalBottom"
                     TargetType="{x:Type Thumb}">
        <Grid HorizontalAlignment="Center"
              VerticalAlignment="Center"
              UseLayoutRounding="True">
            <Path x:Name="grip"
                  VerticalAlignment="Center"
                  Data="M 0,12 C0,12 5.5,18 5.5,18 5.5,18 11,12 11,12 11,12 11,0 11,0 11,0 0,0 0,0 0,0 0,12 0,12 z"
                  Fill="{StaticResource ControlBrightDefaultBackground}"
                  SnapsToDevicePixels="True"
                  Stretch="Fill"
                  Stroke="{StaticResource ControlBrightDefaultBorderBrush}"
                  StrokeLineJoin="Round"
                  StrokeThickness="1"
                  UseLayoutRounding="True" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter TargetName="grip"
                        Property="Fill"
                        Value="{StaticResource ControlPrimaryDarkerBackground}" />
                <Setter TargetName="grip"
                        Property="Stroke"
                        Value="{StaticResource ControlPrimaryDarkerBorderBrush}" />
            </Trigger>
            <Trigger Property="IsDragging" Value="true">
                <Setter TargetName="grip"
                        Property="Fill"
                        Value="{StaticResource ControlPrimarySelectedMouseOverBackground}" />
                <Setter TargetName="grip"
                        Property="Stroke"
                        Value="{StaticResource ControlPrimarySelectedMouseOverBorderBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter TargetName="grip"
                        Property="Fill"
                        Value="{StaticResource ControlDisabledBackground}" />
                <Setter TargetName="grip"
                        Property="Stroke"
                        Value="{StaticResource ControlDisabledBorderBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <SolidColorBrush x:Key="SliderThumb.Track.Border"
                     Color="#FFD6D6D6" />
    <SolidColorBrush x:Key="SliderThumb.Track.Background"
                     Color="#FFE7EAEA" />
    <ControlTemplate x:Key="SliderThumbHorizontalDefault"
                     TargetType="{x:Type Thumb}">
        <Grid Width="11"
              Margin="0"
              HorizontalAlignment="Center"
              VerticalAlignment="Stretch"
              UseLayoutRounding="True">
            <Rectangle x:Name="grip"
                       HorizontalAlignment="Stretch"
                       VerticalAlignment="Stretch"
                       Fill="{StaticResource ControlBrightDefaultBackground}"
                       RadiusX="1"
                       RadiusY="1"
                       SnapsToDevicePixels="True"
                       Stroke="{StaticResource ControlBrightDefaultBorderBrush}"
                       StrokeLineJoin="Round"
                       StrokeThickness="1"
                       UseLayoutRounding="True" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter TargetName="grip"
                        Property="Fill"
                        Value="{StaticResource ControlPrimaryDarkerBackground}" />
                <Setter TargetName="grip"
                        Property="Stroke"
                        Value="{StaticResource ControlPrimaryDarkerBorderBrush}" />
            </Trigger>
            <Trigger Property="IsDragging" Value="true">
                <Setter TargetName="grip"
                        Property="Fill"
                        Value="{StaticResource ControlPrimarySelectedMouseOverBackground}" />
                <Setter TargetName="grip"
                        Property="Stroke"
                        Value="{StaticResource ControlPrimarySelectedMouseOverBorderBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter TargetName="grip"
                        Property="Fill"
                        Value="{StaticResource ControlDisabledBackground}" />
                <Setter TargetName="grip"
                        Property="Stroke"
                        Value="{StaticResource ControlDisabledBorderBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="SliderHorizontal"
                     TargetType="{x:Type Slider}">
        <Border x:Name="border"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                SnapsToDevicePixels="True">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto"
                                   MinHeight="{TemplateBinding MinHeight}" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <TickBar x:Name="TopTick"
                         Grid.Row="0"
                         Height="4"
                         Margin="0,0,0,2"
                         Fill="{TemplateBinding Foreground}"
                         Placement="Top"
                         Visibility="Collapsed" />
                <TickBar x:Name="BottomTick"
                         Grid.Row="2"
                         Height="4"
                         Margin="0,2,0,0"
                         Fill="{TemplateBinding Foreground}"
                         Placement="Bottom"
                         Visibility="Collapsed" />
                <Border x:Name="TrackBackground"
                        Grid.Row="1"
                        Height="4.0"
                        Margin="5,0"
                        VerticalAlignment="center"
                        Background="{StaticResource ControlDefaultBackground}"
                        BorderBrush="{StaticResource ControlDefaultBorderBrush}"
                        BorderThickness="1">
                    <Canvas Margin="-6,-1">
                        <Rectangle x:Name="PART_SelectionRange"
                                   Height="4.0"
                                   Fill="Red"
                                   Visibility="Hidden" />
                    </Canvas>
                </Border>
                <Track x:Name="PART_Track"
                       Grid.Row="1">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Command="{x:Static Slider.DecreaseLarge}"
                                      Style="{StaticResource RepeatButtonTransparent}" />
                    </Track.DecreaseRepeatButton>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Command="{x:Static Slider.IncreaseLarge}"
                                      Style="{StaticResource RepeatButtonTransparent}" />
                    </Track.IncreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb x:Name="Thumb"
                               Width="11"
                               Height="20"
                               VerticalAlignment="Center"
                               Focusable="False"
                               OverridesDefaultStyle="True"
                               Template="{StaticResource SliderThumbHorizontalDefault}" />
                    </Track.Thumb>
                </Track>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="TickPlacement" Value="TopLeft">
                <Setter TargetName="TopTick"
                        Property="Visibility"
                        Value="Visible" />
                <Setter TargetName="Thumb"
                        Property="Template"
                        Value="{StaticResource SliderThumbHorizontalTop}" />
                <Setter TargetName="TrackBackground"
                        Property="Margin"
                        Value="5,2,5,0" />
            </Trigger>
            <Trigger Property="TickPlacement" Value="BottomRight">
                <Setter TargetName="BottomTick"
                        Property="Visibility"
                        Value="Visible" />
                <Setter TargetName="Thumb"
                        Property="Template"
                        Value="{StaticResource SliderThumbHorizontalBottom}" />
                <Setter TargetName="TrackBackground"
                        Property="Margin"
                        Value="5,0,5,2" />
            </Trigger>
            <Trigger Property="TickPlacement" Value="Both">
                <Setter TargetName="TopTick"
                        Property="Visibility"
                        Value="Visible" />
                <Setter TargetName="BottomTick"
                        Property="Visibility"
                        Value="Visible" />
            </Trigger>
            <Trigger Property="IsSelectionRangeEnabled" Value="true">
                <Setter TargetName="PART_SelectionRange"
                        Property="Visibility"
                        Value="Visible" />
            </Trigger>
            <Trigger Property="IsKeyboardFocused" Value="true">
                <Setter TargetName="Thumb"
                        Property="Foreground"
                        Value="Blue" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="SliderThumbVerticalLeft"
                     TargetType="{x:Type Thumb}">
        <Grid HorizontalAlignment="Center"
              VerticalAlignment="Center"
              UseLayoutRounding="True">
            <Path x:Name="grip"
                  Data="M 6,11 C6,11 0,5.5 0,5.5 0,5.5 6,0 6,0 6,0 18,0 18,0 18,0 18,11 18,11 18,11 6,11 6,11 z"
                  Fill="{StaticResource ControlBrightDefaultBackground}"
                  SnapsToDevicePixels="True"
                  Stretch="Fill"
                  Stroke="{StaticResource ControlBrightDefaultBorderBrush}"
                  StrokeLineJoin="Round"
                  StrokeThickness="1" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter TargetName="grip"
                        Property="Fill"
                        Value="{StaticResource ControlPrimaryDarkerBackground}" />
                <Setter TargetName="grip"
                        Property="Stroke"
                        Value="{StaticResource ControlPrimaryDarkerBorderBrush}" />
            </Trigger>
            <Trigger Property="IsDragging" Value="true">
                <Setter TargetName="grip"
                        Property="Fill"
                        Value="{StaticResource ControlPrimarySelectedMouseOverBackground}" />
                <Setter TargetName="grip"
                        Property="Stroke"
                        Value="{StaticResource ControlPrimarySelectedMouseOverBorderBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter TargetName="grip"
                        Property="Fill"
                        Value="{StaticResource ControlDisabledBackground}" />
                <Setter TargetName="grip"
                        Property="Stroke"
                        Value="{StaticResource ControlDisabledBorderBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="SliderThumbVerticalRight"
                     TargetType="{x:Type Thumb}">
        <Grid HorizontalAlignment="Center"
              VerticalAlignment="Center"
              UseLayoutRounding="True">
            <Path x:Name="grip"
                  Data="M 12,11 C12,11 18,5.5 18,5.5 18,5.5 12,0 12,0 12,0 0,0 0,0 0,0 0,11 0,11 0,11 12,11 12,11 z"
                  Fill="{StaticResource ControlBrightDefaultBackground}"
                  SnapsToDevicePixels="True"
                  Stretch="Fill"
                  Stroke="{StaticResource ControlBrightDefaultBorderBrush}"
                  StrokeLineJoin="Round" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter TargetName="grip"
                        Property="Fill"
                        Value="{StaticResource ControlPrimaryDarkerBackground}" />
                <Setter TargetName="grip"
                        Property="Stroke"
                        Value="{StaticResource ControlPrimaryDarkerBorderBrush}" />
            </Trigger>
            <Trigger Property="IsDragging" Value="true">
                <Setter TargetName="grip"
                        Property="Fill"
                        Value="{StaticResource ControlPrimarySelectedMouseOverBackground}" />
                <Setter TargetName="grip"
                        Property="Stroke"
                        Value="{StaticResource ControlPrimarySelectedMouseOverBorderBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter TargetName="grip"
                        Property="Fill"
                        Value="{StaticResource ControlDisabledBackground}" />
                <Setter TargetName="grip"
                        Property="Stroke"
                        Value="{StaticResource ControlDisabledBorderBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="SliderThumbVerticalDefault"
                     TargetType="{x:Type Thumb}">
        <Grid HorizontalAlignment="Center"
              VerticalAlignment="Center"
              UseLayoutRounding="True">
            <Rectangle x:Name="grip"
                       Width="18"
                       Height="11"
                       HorizontalAlignment="Stretch"
                       VerticalAlignment="Stretch"
                       Fill="{StaticResource ControlBrightDefaultBackground}"
                       RadiusX="1"
                       RadiusY="1"
                       SnapsToDevicePixels="True"
                       Stroke="{StaticResource ControlBrightDefaultBorderBrush}"
                       StrokeLineJoin="Round"
                       StrokeThickness="1"
                       UseLayoutRounding="True" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter TargetName="grip"
                        Property="Fill"
                        Value="{StaticResource ControlPrimaryDarkerBackground}" />
                <Setter TargetName="grip"
                        Property="Stroke"
                        Value="{StaticResource ControlPrimaryDarkerBorderBrush}" />
            </Trigger>
            <Trigger Property="IsDragging" Value="true">
                <Setter TargetName="grip"
                        Property="Fill"
                        Value="{StaticResource ControlPrimarySelectedMouseOverBackground}" />
                <Setter TargetName="grip"
                        Property="Stroke"
                        Value="{StaticResource ControlPrimarySelectedMouseOverBorderBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter TargetName="grip"
                        Property="Fill"
                        Value="{StaticResource ControlDisabledBackground}" />
                <Setter TargetName="grip"
                        Property="Stroke"
                        Value="{StaticResource ControlDisabledBorderBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="SliderVertical"
                     TargetType="{x:Type Slider}">
        <Border x:Name="border"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                SnapsToDevicePixels="True">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto"
                                      MinWidth="{TemplateBinding MinWidth}" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <TickBar x:Name="TopTick"
                         Grid.Column="0"
                         Width="4"
                         Margin="0,0,2,0"
                         Fill="{TemplateBinding Foreground}"
                         Placement="Left"
                         Visibility="Collapsed" />
                <TickBar x:Name="BottomTick"
                         Grid.Column="2"
                         Width="4"
                         Margin="2,0,0,0"
                         Fill="{TemplateBinding Foreground}"
                         Placement="Right"
                         Visibility="Collapsed" />
                <Border x:Name="TrackBackground"
                        Grid.Column="1"
                        Width="4.0"
                        Margin="0,5"
                        HorizontalAlignment="center"
                        Background="{StaticResource ControlDefaultBackground}"
                        BorderBrush="{StaticResource ControlDefaultBorderBrush}"
                        BorderThickness="1">
                    <Canvas Margin="-1,-6">
                        <Rectangle x:Name="PART_SelectionRange"
                                   Width="4.0"
                                   Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"
                                   Visibility="Hidden" />
                    </Canvas>
                </Border>
                <Track x:Name="PART_Track"
                       Grid.Column="1">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Command="{x:Static Slider.DecreaseLarge}"
                                      Style="{StaticResource RepeatButtonTransparent}" />
                    </Track.DecreaseRepeatButton>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Command="{x:Static Slider.IncreaseLarge}"
                                      Style="{StaticResource RepeatButtonTransparent}" />
                    </Track.IncreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb x:Name="Thumb"
                               Width="18"
                               Height="11"
                               VerticalAlignment="Top"
                               Focusable="False"
                               OverridesDefaultStyle="True"
                               Template="{StaticResource SliderThumbVerticalDefault}" />
                    </Track.Thumb>
                </Track>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="TickPlacement" Value="TopLeft">
                <Setter TargetName="TopTick"
                        Property="Visibility"
                        Value="Visible" />
                <Setter TargetName="Thumb"
                        Property="Template"
                        Value="{StaticResource SliderThumbVerticalLeft}" />
                <Setter TargetName="TrackBackground"
                        Property="Margin"
                        Value="2,5,0,5" />
            </Trigger>
            <Trigger Property="TickPlacement" Value="BottomRight">
                <Setter TargetName="BottomTick"
                        Property="Visibility"
                        Value="Visible" />
                <Setter TargetName="Thumb"
                        Property="Template"
                        Value="{StaticResource SliderThumbVerticalRight}" />
                <Setter TargetName="TrackBackground"
                        Property="Margin"
                        Value="0,5,2,5" />
            </Trigger>
            <Trigger Property="TickPlacement" Value="Both">
                <Setter TargetName="TopTick"
                        Property="Visibility"
                        Value="Visible" />
                <Setter TargetName="BottomTick"
                        Property="Visibility"
                        Value="Visible" />
            </Trigger>
            <Trigger Property="IsSelectionRangeEnabled" Value="true">
                <Setter TargetName="PART_SelectionRange"
                        Property="Visibility"
                        Value="Visible" />
            </Trigger>
            <Trigger Property="IsKeyboardFocused" Value="true">
                <Setter TargetName="Thumb"
                        Property="Foreground"
                        Value="Blue" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style TargetType="{x:Type Slider}">
        <Setter Property="Stylus.IsPressAndHoldEnabled"
                Value="false" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="BorderBrush"
                Value="Transparent" />
        <Setter Property="Foreground"
                Value="{StaticResource ControlPrimaryGlyphColor}" />
        <Setter Property="Template"
                Value="{StaticResource SliderHorizontal}" />
        <Setter Property="Minimum"
                Value="0" />
        <Setter Property="Maximum"
                Value="100" />
        <Setter Property="Value"
                Value="0" />
        <Setter Property="IsSnapToTickEnabled"
                Value="True" />
        <Setter Property="IsMoveToPointEnabled"
                Value="True" />
        <Setter Property="SmallChange"
                Value="1" />
        <Setter Property="LargeChange"
                Value="5" />
        <Setter Property="Orientation"
                Value="Horizontal" />
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Template"
                        Value="{StaticResource SliderVertical}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  -_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-  -->

    <!--  Tab Control  -->
    <Style TargetType="{x:Type TabControl}">
        <Setter Property="Padding"
                Value="2" />
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Background"
                Value="{StaticResource BackgroundColor}" />
        <Setter Property="BorderBrush"
                Value="{StaticResource ControlDefaultBorderBrush}" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="Foreground"
                Value="{StaticResource ControlDefaultForeground}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid x:Name="templateRoot"
                          ClipToBounds="true"
                          KeyboardNavigation.TabNavigation="Local"
                          SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="ColumnDefinition0" />
                            <ColumnDefinition x:Name="ColumnDefinition1"
                                              Width="0" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition x:Name="RowDefinition0"
                                           Height="Auto" />
                            <RowDefinition x:Name="RowDefinition1"
                                           Height="*" />
                        </Grid.RowDefinitions>
                        <TabPanel x:Name="headerPanel"
                                  Grid.Row="0"
                                  Grid.Column="0"
                                  Margin="2,2,2,0"
                                  Panel.ZIndex="1"
                                  Background="Transparent"
                                  IsItemsHost="true"
                                  KeyboardNavigation.TabIndex="1" />
                        <Border x:Name="contentPanel"
                                Grid.Row="1"
                                Grid.Column="0"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                KeyboardNavigation.DirectionalNavigation="Contained"
                                KeyboardNavigation.TabIndex="2"
                                KeyboardNavigation.TabNavigation="Local">
                            <ContentPresenter x:Name="PART_SelectedContentHost"
                                              Margin="{TemplateBinding Padding}"
                                              ContentSource="SelectedContent"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter TargetName="headerPanel"
                                    Property="Grid.Row"
                                    Value="1" />
                            <Setter TargetName="contentPanel"
                                    Property="Grid.Row"
                                    Value="0" />
                            <Setter TargetName="RowDefinition0"
                                    Property="Height"
                                    Value="*" />
                            <Setter TargetName="RowDefinition1"
                                    Property="Height"
                                    Value="Auto" />
                            <Setter TargetName="headerPanel"
                                    Property="Margin"
                                    Value="2,0,2,2" />
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Left">
                            <Setter TargetName="headerPanel"
                                    Property="Grid.Row"
                                    Value="0" />
                            <Setter TargetName="contentPanel"
                                    Property="Grid.Row"
                                    Value="0" />
                            <Setter TargetName="headerPanel"
                                    Property="Grid.Column"
                                    Value="0" />
                            <Setter TargetName="contentPanel"
                                    Property="Grid.Column"
                                    Value="1" />
                            <Setter TargetName="ColumnDefinition0"
                                    Property="Width"
                                    Value="Auto" />
                            <Setter TargetName="ColumnDefinition1"
                                    Property="Width"
                                    Value="*" />
                            <Setter TargetName="RowDefinition0"
                                    Property="Height"
                                    Value="*" />
                            <Setter TargetName="RowDefinition1"
                                    Property="Height"
                                    Value="0" />
                            <Setter TargetName="headerPanel"
                                    Property="Margin"
                                    Value="2,2,0,2" />
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter TargetName="headerPanel"
                                    Property="Grid.Row"
                                    Value="0" />
                            <Setter TargetName="contentPanel"
                                    Property="Grid.Row"
                                    Value="0" />
                            <Setter TargetName="headerPanel"
                                    Property="Grid.Column"
                                    Value="1" />
                            <Setter TargetName="contentPanel"
                                    Property="Grid.Column"
                                    Value="0" />
                            <Setter TargetName="ColumnDefinition0"
                                    Property="Width"
                                    Value="*" />
                            <Setter TargetName="ColumnDefinition1"
                                    Property="Width"
                                    Value="Auto" />
                            <Setter TargetName="RowDefinition0"
                                    Property="Height"
                                    Value="*" />
                            <Setter TargetName="RowDefinition1"
                                    Property="Height"
                                    Value="0" />
                            <Setter TargetName="headerPanel"
                                    Property="Margin"
                                    Value="0,2,2,2" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="templateRoot"
                                    Property="TextElement.Foreground"
                                    Value="{StaticResource ControlDisabledGlyphColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type TabItem}">
        <Setter Property="FocusVisualStyle"
                Value="{StaticResource FocusVisual}" />
        <Setter Property="Foreground"
                Value="{StaticResource ControlDefaultForeground}" />
        <Setter Property="Background"
                Value="{StaticResource ControlDarkerBackground}" />
        <Setter Property="BorderBrush"
                Value="{StaticResource ControlDarkerBorderBrush}" />
        <Setter Property="Margin"
                Value="0" />
        <Setter Property="Padding"
                Value="6,4,6,4" />
        <Setter Property="HorizontalContentAlignment"
                Value="Stretch" />
        <Setter Property="VerticalContentAlignment"
                Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid x:Name="templateRoot"
                          SnapsToDevicePixels="true">
                        <Border x:Name="mainBorder"
                                Margin="0"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="1,1,1,0">
                            <Border x:Name="innerBorder"
                                    Margin="-1"
                                    Background="{StaticResource BackgroundColor}"
                                    BorderBrush="{StaticResource ControlDefaultBorderBrush}"
                                    BorderThickness="1,1,1,0"
                                    Opacity="0" />
                        </Border>
                        <ContentPresenter x:Name="contentPresenter"
                                          Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{Binding HorizontalContentAlignment,
                                                                        RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                          VerticalAlignment="{Binding VerticalContentAlignment,
                                                                      RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                          ContentSource="Header"
                                          Focusable="False"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true" />
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="mainBorder"
                                    Property="Background"
                                    Value="{StaticResource ControlPrimaryMouseOverBackground}" />
                            <Setter TargetName="mainBorder"
                                    Property="BorderBrush"
                                    Value="{StaticResource ControlPrimaryMouseOverBorderBrush}" />
                            <Setter TargetName="innerBorder"
                                    Property="BorderThickness"
                                    Value="1,1,0,1" />
                            <Setter TargetName="mainBorder"
                                    Property="BorderThickness"
                                    Value="1,1,0,1" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true" />
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="mainBorder"
                                    Property="Background"
                                    Value="{StaticResource ControlPrimaryMouseOverBackground}" />
                            <Setter TargetName="mainBorder"
                                    Property="BorderBrush"
                                    Value="{StaticResource ControlPrimaryMouseOverBorderBrush}" />
                            <Setter TargetName="innerBorder"
                                    Property="BorderThickness"
                                    Value="1,0,1,1" />
                            <Setter TargetName="mainBorder"
                                    Property="BorderThickness"
                                    Value="1,0,1,1" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true" />
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="mainBorder"
                                    Property="Background"
                                    Value="{StaticResource ControlPrimaryMouseOverBackground}" />
                            <Setter TargetName="mainBorder"
                                    Property="BorderBrush"
                                    Value="{StaticResource ControlPrimaryMouseOverBorderBrush}" />
                            <Setter TargetName="innerBorder"
                                    Property="BorderThickness"
                                    Value="0,1,1,1" />
                            <Setter TargetName="mainBorder"
                                    Property="BorderThickness"
                                    Value="0,1,1,1" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true" />
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="mainBorder"
                                    Property="Background"
                                    Value="{StaticResource ControlPrimaryMouseOverBackground}" />
                            <Setter TargetName="mainBorder"
                                    Property="BorderBrush"
                                    Value="{StaticResource ControlPrimaryMouseOverBorderBrush}" />
                            <Setter TargetName="innerBorder"
                                    Property="BorderThickness"
                                    Value="1,1,1,0" />
                            <Setter TargetName="mainBorder"
                                    Property="BorderThickness"
                                    Value="1,1,1,0" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false" />
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="contentPresenter"
                                    Property="Opacity"
                                    Value="0.56" />
                            <Setter TargetName="mainBorder"
                                    Property="Background"
                                    Value="{StaticResource ControlDisabledBackground}" />
                            <Setter TargetName="mainBorder"
                                    Property="BorderBrush"
                                    Value="{StaticResource ControlDisabledBorderBrush}" />
                            <Setter TargetName="innerBorder"
                                    Property="BorderThickness"
                                    Value="1,1,0,1" />
                            <Setter TargetName="mainBorder"
                                    Property="BorderThickness"
                                    Value="1,1,0,1" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false" />
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="contentPresenter"
                                    Property="Opacity"
                                    Value="0.56" />
                            <Setter TargetName="mainBorder"
                                    Property="Background"
                                    Value="{StaticResource ControlDisabledBackground}" />
                            <Setter TargetName="mainBorder"
                                    Property="BorderBrush"
                                    Value="{StaticResource ControlDisabledBorderBrush}" />
                            <Setter TargetName="innerBorder"
                                    Property="BorderThickness"
                                    Value="1,0,1,1" />
                            <Setter TargetName="mainBorder"
                                    Property="BorderThickness"
                                    Value="1,0,1,1" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false" />
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="contentPresenter"
                                    Property="Opacity"
                                    Value="0.56" />
                            <Setter TargetName="mainBorder"
                                    Property="Background"
                                    Value="{StaticResource ControlDisabledBackground}" />
                            <Setter TargetName="mainBorder"
                                    Property="BorderBrush"
                                    Value="{StaticResource ControlDisabledBorderBrush}" />
                            <Setter TargetName="innerBorder"
                                    Property="BorderThickness"
                                    Value="0,1,1,1" />
                            <Setter TargetName="mainBorder"
                                    Property="BorderThickness"
                                    Value="0,1,1,1" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false" />
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="contentPresenter"
                                    Property="Opacity"
                                    Value="0.56" />
                            <Setter TargetName="mainBorder"
                                    Property="Background"
                                    Value="{StaticResource ControlDisabledBackground}" />
                            <Setter TargetName="mainBorder"
                                    Property="BorderBrush"
                                    Value="{StaticResource ControlDisabledBorderBrush}" />
                            <Setter TargetName="innerBorder"
                                    Property="BorderThickness"
                                    Value="1,1,1,0" />
                            <Setter TargetName="mainBorder"
                                    Property="BorderThickness"
                                    Value="1,1,1,0" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false" />
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="innerBorder"
                                    Property="BorderThickness"
                                    Value="1,1,0,1" />
                            <Setter TargetName="mainBorder"
                                    Property="BorderThickness"
                                    Value="1,1,0,1" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true" />
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Panel.ZIndex"
                                    Value="1" />
                            <Setter Property="Margin"
                                    Value="-2,-2,0,-2" />
                            <Setter TargetName="innerBorder"
                                    Property="Opacity"
                                    Value="1" />
                            <Setter TargetName="innerBorder"
                                    Property="BorderThickness"
                                    Value="1,1,0,1" />
                            <Setter TargetName="mainBorder"
                                    Property="BorderThickness"
                                    Value="1,1,0,1" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false" />
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="innerBorder"
                                    Property="BorderThickness"
                                    Value="1,0,1,1" />
                            <Setter TargetName="mainBorder"
                                    Property="BorderThickness"
                                    Value="1,0,1,1" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true" />
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Panel.ZIndex"
                                    Value="1" />
                            <Setter Property="Margin"
                                    Value="-2,0,-2,-2" />
                            <Setter TargetName="innerBorder"
                                    Property="Opacity"
                                    Value="1" />
                            <Setter TargetName="innerBorder"
                                    Property="BorderThickness"
                                    Value="1,0,1,1" />
                            <Setter TargetName="mainBorder"
                                    Property="BorderThickness"
                                    Value="1,0,1,1" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false" />
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="innerBorder"
                                    Property="BorderThickness"
                                    Value="0,1,1,1" />
                            <Setter TargetName="mainBorder"
                                    Property="BorderThickness"
                                    Value="0,1,1,1" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true" />
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Panel.ZIndex"
                                    Value="1" />
                            <Setter Property="Margin"
                                    Value="0,-2,-2,-2" />
                            <Setter TargetName="innerBorder"
                                    Property="Opacity"
                                    Value="1" />
                            <Setter TargetName="innerBorder"
                                    Property="BorderThickness"
                                    Value="0,1,1,1" />
                            <Setter TargetName="mainBorder"
                                    Property="BorderThickness"
                                    Value="0,1,1,1" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false" />
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="innerBorder"
                                    Property="BorderThickness"
                                    Value="1,1,1,0" />
                            <Setter TargetName="mainBorder"
                                    Property="BorderThickness"
                                    Value="1,1,1,0" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true" />
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Panel.ZIndex"
                                    Value="1" />
                            <Setter Property="Margin"
                                    Value="-2,-2,-2,0" />
                            <Setter TargetName="innerBorder"
                                    Property="Opacity"
                                    Value="1" />
                            <Setter TargetName="innerBorder"
                                    Property="BorderThickness"
                                    Value="1,1,1,0" />
                            <Setter TargetName="mainBorder"
                                    Property="BorderThickness"
                                    Value="1,1,1,0" />
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--  Alternative Styles  -->
    <ControlTemplate x:Key="CloseButton"
                     TargetType="{x:Type TabItem}">
        <Grid x:Name="templateRoot"
              SnapsToDevicePixels="true">
            <Border x:Name="mainBorder"
                    Margin="0"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="0,1,1,1">
                <Border x:Name="innerBorder"
                        Margin="-1"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="0,1,1,0"
                        Opacity="0" />
            </Border>


            <ContentPresenter x:Name="contentPresenter"
                              Margin="10,9,36,9"
                              HorizontalAlignment="{Binding HorizontalContentAlignment,
                                                            RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                              VerticalAlignment="{Binding VerticalContentAlignment,
                                                          RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                              ContentSource="Header"
                              Focusable="False"
                              RecognizesAccessKey="True"
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            <Border Width="24"
                    Height="24"
                    Margin="0,8,8,7"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Center">
                <Button HorizontalAlignment="Stretch"
                        VerticalAlignment="Stretch"
                        Command="{Binding CloseTabCommand}"
                        Background="Transparent"
                        BorderBrush="{x:Null}"
                        Content="x"
                        FontFamily="Consolas" />
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true" />
                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="mainBorder"
                        Property="Background"
                        Value="{StaticResource ControlPrimaryMouseOverBackground}" />
                <Setter TargetName="mainBorder"
                        Property="BorderBrush"
                        Value="{StaticResource ControlPrimaryMouseOverBorderBrush}" />
                <Setter TargetName="innerBorder"
                        Property="BorderThickness"
                        Value="1,1,0,1" />
                <Setter TargetName="mainBorder"
                        Property="BorderThickness"
                        Value="1,1,0,1" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true" />
                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="mainBorder"
                        Property="Background"
                        Value="{StaticResource ControlPrimaryMouseOverBackground}" />
                <Setter TargetName="mainBorder"
                        Property="BorderBrush"
                        Value="{StaticResource ControlPrimaryMouseOverBorderBrush}" />
                <Setter TargetName="innerBorder"
                        Property="BorderThickness"
                        Value="1,0,1,1" />
                <Setter TargetName="mainBorder"
                        Property="BorderThickness"
                        Value="1,0,1,1" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true" />
                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="mainBorder"
                        Property="Background"
                        Value="{StaticResource ControlPrimaryMouseOverBackground}" />
                <Setter TargetName="mainBorder"
                        Property="BorderBrush"
                        Value="{StaticResource ControlPrimaryMouseOverBorderBrush}" />
                <Setter TargetName="innerBorder"
                        Property="BorderThickness"
                        Value="0,1,1,1" />
                <Setter TargetName="mainBorder"
                        Property="BorderThickness"
                        Value="0,1,1,1" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true" />
                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="mainBorder"
                        Property="Background"
                        Value="{StaticResource ControlPrimaryMouseOverBackground}" />
                <Setter TargetName="mainBorder"
                        Property="BorderBrush"
                        Value="{StaticResource ControlPrimaryMouseOverBorderBrush}" />
                <Setter TargetName="innerBorder"
                        Property="BorderThickness"
                        Value="1,1,1,0" />
                <Setter TargetName="mainBorder"
                        Property="BorderThickness"
                        Value="1,1,1,0" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false" />
                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="contentPresenter"
                        Property="Opacity"
                        Value="0.56" />
                <Setter TargetName="mainBorder"
                        Property="Background"
                        Value="{StaticResource ControlDisabledBackground}" />
                <Setter TargetName="mainBorder"
                        Property="BorderBrush"
                        Value="{StaticResource ControlDisabledBorderBrush}" />
                <Setter TargetName="innerBorder"
                        Property="BorderThickness"
                        Value="1,1,0,1" />
                <Setter TargetName="mainBorder"
                        Property="BorderThickness"
                        Value="1,1,0,1" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false" />
                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="contentPresenter"
                        Property="Opacity"
                        Value="0.56" />
                <Setter TargetName="mainBorder"
                        Property="Background"
                        Value="{StaticResource ControlDisabledBackground}" />
                <Setter TargetName="mainBorder"
                        Property="BorderBrush"
                        Value="{StaticResource ControlDisabledBorderBrush}" />
                <Setter TargetName="innerBorder"
                        Property="BorderThickness"
                        Value="1,0,1,1" />
                <Setter TargetName="mainBorder"
                        Property="BorderThickness"
                        Value="1,0,1,1" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false" />
                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="contentPresenter"
                        Property="Opacity"
                        Value="0.56" />
                <Setter TargetName="mainBorder"
                        Property="Background"
                        Value="{StaticResource ControlDisabledBackground}" />
                <Setter TargetName="mainBorder"
                        Property="BorderBrush"
                        Value="{StaticResource ControlDisabledBorderBrush}" />
                <Setter TargetName="innerBorder"
                        Property="BorderThickness"
                        Value="0,1,1,1" />
                <Setter TargetName="mainBorder"
                        Property="BorderThickness"
                        Value="0,1,1,1" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false" />
                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="contentPresenter"
                        Property="Opacity"
                        Value="0.56" />
                <Setter TargetName="mainBorder"
                        Property="Background"
                        Value="{StaticResource ControlDisabledBackground}" />
                <Setter TargetName="mainBorder"
                        Property="BorderBrush"
                        Value="{StaticResource ControlDisabledBorderBrush}" />
                <Setter TargetName="innerBorder"
                        Property="BorderThickness"
                        Value="1,1,1,0" />
                <Setter TargetName="mainBorder"
                        Property="BorderThickness"
                        Value="1,1,1,0" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false" />
                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="innerBorder"
                        Property="BorderThickness"
                        Value="1,1,0,1" />
                <Setter TargetName="mainBorder"
                        Property="BorderThickness"
                        Value="1,1,0,1" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true" />
                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Panel.ZIndex"
                        Value="1" />
                <Setter Property="Margin"
                        Value="-2,-2,0,-2" />
                <Setter TargetName="innerBorder"
                        Property="Opacity"
                        Value="1" />
                <Setter TargetName="innerBorder"
                        Property="BorderThickness"
                        Value="1,1,0,1" />
                <Setter TargetName="mainBorder"
                        Property="BorderThickness"
                        Value="1,1,0,1" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false" />
                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="innerBorder"
                        Property="BorderThickness"
                        Value="1,0,1,1" />
                <Setter TargetName="mainBorder"
                        Property="BorderThickness"
                        Value="1,0,1,1" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true" />
                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Panel.ZIndex"
                        Value="1" />
                <Setter Property="Margin"
                        Value="-2,0,-2,-2" />
                <Setter TargetName="innerBorder"
                        Property="Opacity"
                        Value="1" />
                <Setter TargetName="innerBorder"
                        Property="BorderThickness"
                        Value="1,0,1,1" />
                <Setter TargetName="mainBorder"
                        Property="BorderThickness"
                        Value="1,0,1,1" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false" />
                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="innerBorder"
                        Property="BorderThickness"
                        Value="0,1,1,1" />
                <Setter TargetName="mainBorder"
                        Property="BorderThickness"
                        Value="0,1,1,1" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true" />
                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Panel.ZIndex"
                        Value="1" />
                <Setter Property="Margin"
                        Value="0,-2,-2,-2" />
                <Setter TargetName="innerBorder"
                        Property="Opacity"
                        Value="1" />
                <Setter TargetName="innerBorder"
                        Property="BorderThickness"
                        Value="0,1,1,1" />
                <Setter TargetName="mainBorder"
                        Property="BorderThickness"
                        Value="0,1,1,1" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false" />
                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="innerBorder"
                        Property="BorderThickness"
                        Value="1,1,1,0" />
                <Setter TargetName="mainBorder"
                        Property="BorderThickness"
                        Value="1,1,1,0" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true" />
                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Panel.ZIndex"
                        Value="1" />
                <Setter Property="Margin"
                        Value="-2,-2,-2,0" />
                <Setter TargetName="innerBorder"
                        Property="Opacity"
                        Value="1" />
                <Setter TargetName="innerBorder"
                        Property="BorderThickness"
                        Value="1,1,1,0" />
                <Setter TargetName="mainBorder"
                        Property="BorderThickness"
                        Value="1,1,1,0" />
            </MultiDataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="AddButtons"
                     TargetType="{x:Type TabControl}">
        <Grid x:Name="templateRoot"
              ClipToBounds="true"
              KeyboardNavigation.TabNavigation="Local"
              SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
                <ColumnDefinition x:Name="ColumnDefinition0" />
                <ColumnDefinition x:Name="ColumnDefinition1"
                                  Width="0" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition x:Name="RowDefinition0"
                               Height="Auto" />
                <RowDefinition x:Name="RowDefinition1"
                               Height="*" />
            </Grid.RowDefinitions>
            <StackPanel Orientation="Horizontal">
                <TabPanel x:Name="headerPanel"
                          Grid.Row="0"
                          Grid.Column="0"
                          Margin="0,2,0,0"
                          Panel.ZIndex="1"
                          IsItemsHost="true"
                          KeyboardNavigation.TabIndex="1" />
                <Border Width="28"
                        Height="28"
                        Margin="8,0,0,0"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Background="{StaticResource ContainerBackground}"
                        CornerRadius="3">
                    <Button HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Command="{Binding NewTabCommand}"
                            Background="Transparent"
                            BorderBrush="{x:Null}"
                            Content="+"
                            FontFamily="Consolas"
                            FontSize="16"
                            Foreground="{DynamicResource ControlDefaultForeground}" />
                </Border>
            </StackPanel>
            <Border x:Name="contentPanel"
                    Grid.Row="1"
                    Grid.Column="0"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    KeyboardNavigation.DirectionalNavigation="Contained"
                    KeyboardNavigation.TabIndex="2"
                    KeyboardNavigation.TabNavigation="Local">
                <ContentPresenter x:Name="PART_SelectedContentHost"
                                  Margin="{TemplateBinding Padding}"
                                  ContentSource="SelectedContent"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="TabStripPlacement" Value="Bottom">
                <Setter TargetName="headerPanel"
                        Property="Grid.Row"
                        Value="1" />
                <Setter TargetName="contentPanel"
                        Property="Grid.Row"
                        Value="0" />
                <Setter TargetName="RowDefinition0"
                        Property="Height"
                        Value="*" />
                <Setter TargetName="RowDefinition1"
                        Property="Height"
                        Value="Auto" />
                <Setter TargetName="headerPanel"
                        Property="Margin"
                        Value="2,0,2,2" />
            </Trigger>
            <Trigger Property="TabStripPlacement" Value="Left">
                <Setter TargetName="headerPanel"
                        Property="Grid.Row"
                        Value="0" />
                <Setter TargetName="contentPanel"
                        Property="Grid.Row"
                        Value="0" />
                <Setter TargetName="headerPanel"
                        Property="Grid.Column"
                        Value="0" />
                <Setter TargetName="contentPanel"
                        Property="Grid.Column"
                        Value="1" />
                <Setter TargetName="ColumnDefinition0"
                        Property="Width"
                        Value="Auto" />
                <Setter TargetName="ColumnDefinition1"
                        Property="Width"
                        Value="*" />
                <Setter TargetName="RowDefinition0"
                        Property="Height"
                        Value="*" />
                <Setter TargetName="RowDefinition1"
                        Property="Height"
                        Value="0" />
                <Setter TargetName="headerPanel"
                        Property="Margin"
                        Value="2,2,0,2" />
            </Trigger>
            <Trigger Property="TabStripPlacement" Value="Right">
                <Setter TargetName="headerPanel"
                        Property="Grid.Row"
                        Value="0" />
                <Setter TargetName="contentPanel"
                        Property="Grid.Row"
                        Value="0" />
                <Setter TargetName="headerPanel"
                        Property="Grid.Column"
                        Value="1" />
                <Setter TargetName="contentPanel"
                        Property="Grid.Column"
                        Value="0" />
                <Setter TargetName="ColumnDefinition0"
                        Property="Width"
                        Value="*" />
                <Setter TargetName="ColumnDefinition1"
                        Property="Width"
                        Value="Auto" />
                <Setter TargetName="RowDefinition0"
                        Property="Height"
                        Value="*" />
                <Setter TargetName="RowDefinition1"
                        Property="Height"
                        Value="0" />
                <Setter TargetName="headerPanel"
                        Property="Margin"
                        Value="0,2,2,2" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter TargetName="templateRoot"
                        Property="TextElement.Foreground"
                        Value="{StaticResource ControlDisabledGlyphColor}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--  -_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-  -->

    <!--  Textblock  -->
    <Style TargetType="{x:Type TextBlock}">
        <Setter Property="TextWrapping"
                Value="Wrap" />
        <Setter Property="TextTrimming"
                Value="None" />
        <Setter Property="TextAlignment"
                Value="Left" />
    </Style>

    <!--  -_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-  -->

    <!--  Textbox  -->
    <Style TargetType="{x:Type TextBox}">
        <Setter Property="Background"
                Value="{StaticResource ContainerBackground}" />
        <Setter Property="BorderBrush"
                Value="{StaticResource ControlDefaultBorderBrush}" />
        <Setter Property="Foreground"
                Value="{StaticResource ControlDefaultForeground}" />
        <Setter Property="CaretBrush"
                Value="{StaticResource ControlPrimaryCaretBackground}" />
        <Setter Property="SelectionBrush"
                Value="{StaticResource ControlPrimaryCaretSelectionBackground}" />
        <Setter Property="SelectionOpacity"
                Value="0.7" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="KeyboardNavigation.TabNavigation"
                Value="None" />
        <Setter Property="HorizontalContentAlignment"
                Value="Left" />
        <!--  using VCA=top because a multilined textbox is assumed  -->
        <Setter Property="VerticalContentAlignment"
                Value="Top" />
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}" />
        <Setter Property="AllowDrop"
                Value="true" />
        <Setter Property="ScrollViewer.PanningMode"
                Value="VerticalFirst" />
        <Setter Property="Stylus.IsFlicksEnabled"
                Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="PART_ContentHost"
                                      Focusable="false"
                                      HorizontalScrollBarVisibility="Hidden"
                                      VerticalScrollBarVisibility="Hidden" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="border"
                                    Property="Opacity"
                                    Value="0.56" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border"
                                    Property="BorderBrush"
                                    Value="{StaticResource ControlMouseOverBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter TargetName="border"
                                    Property="BorderBrush"
                                    Value="{StaticResource ControlSelectedBorderBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true" />
                    <Condition Property="IsSelectionActive" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="SelectionBrush"
                        Value="{StaticResource ControlDisabledGlyphColor}" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <!--  -_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-  -->

    <!--  ToolBar  -->
    <Style x:Key="ToolBarVerticalOverflowButtonStyle"
           TargetType="{x:Type ToggleButton}">
        <Setter Property="Background"
                Value="{StaticResource ControlDefaultBackground}" />
        <Setter Property="Foreground"
                Value="{StaticResource ControlDefaultForeground}" />
        <Setter Property="MinHeight"
                Value="0" />
        <Setter Property="MinWidth"
                Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="Bd"
                            Background="{TemplateBinding Background}"
                            CornerRadius="0,0,3,3"
                            SnapsToDevicePixels="true">
                        <Canvas Width="7"
                                Height="6"
                                Margin="2,7,2,2"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Bottom"
                                SnapsToDevicePixels="true">
                            <Path Data="M 1.5 1 L 1.5 6"
                                  Stroke="{TemplateBinding Foreground}" />
                            <Path Data="M 0.5 0 L 0.5 5"
                                  Stroke="{TemplateBinding Foreground}" />
                            <Path Data="M 3.5 0.5 L 7 3.5 L 4 6.5 Z"
                                  Fill="{TemplateBinding Foreground}" />
                            <Path Data="M 3 -0.5 L 6 2.5 L 3 5.5 Z"
                                  Fill="{TemplateBinding Foreground}" />
                        </Canvas>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{StaticResource ControlDefaultBackground}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{StaticResource ControlDefaultBackground}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground"
                                    Value="{StaticResource ControlGlyphColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ToolBarHorizontalOverflowButtonStyle"
           TargetType="{x:Type ToggleButton}">
        <Setter Property="Background"
                Value="{StaticResource ControlDarkerBackground}" />
        <Setter Property="BorderBrush"
                Value="{StaticResource ControlBrightDefaultBorderBrush}" />
        <Setter Property="Foreground"
                Value="{StaticResource ControlDefaultForeground}" />
        <Setter Property="MinHeight"
                Value="0" />
        <Setter Property="MinWidth"
                Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="Bd"
                            Background="{TemplateBinding Background}"
                            CornerRadius="0,3,3,0"
                            SnapsToDevicePixels="true">
                        <Canvas Width="6"
                                Height="7"
                                Margin="7,2,2,2"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Bottom"
                                SnapsToDevicePixels="true">
                            <Path Data="M 1 1.5 L 6 1.5"
                                  Stroke="{StaticResource ControlBrightDefaultBackground}" />
                            <Path Data="M 0 0.5 L 5 0.5"
                                  Stroke="{StaticResource ControlBrightDefaultBorderBrush}" />
                            <Path Data="M 0.5 4 L 6.5 4 L 3.5 7 Z"
                                  Fill="{StaticResource ControlBrightDefaultBackground}" />
                            <Path Data="M -0.5 3 L 5.5 3 L 2.5 6 Z"
                                  Fill="{StaticResource ControlBrightDefaultBorderBrush}" />
                        </Canvas>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{StaticResource ControlPrimaryMouseOverBackground}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{StaticResource ControlDefaultBackground}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground"
                                    Value="{StaticResource ControlGlyphColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="NoCornersToolBarHorizontalOverflowButtonStyle"
           TargetType="{x:Type ToggleButton}">
        <Setter Property="Background"
                Value="{StaticResource ControlDarkerBackground}" />
        <Setter Property="BorderBrush"
                Value="{StaticResource ControlBrightDefaultBorderBrush}" />
        <Setter Property="Foreground"
                Value="{StaticResource ControlDefaultForeground}" />
        <Setter Property="MinHeight"
                Value="0" />
        <Setter Property="MinWidth"
                Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="Bd"
                            Background="{TemplateBinding Background}"
                            CornerRadius="0"
                            SnapsToDevicePixels="true">
                        <Canvas Width="6"
                                Height="7"
                                Margin="7,2,2,2"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Bottom"
                                SnapsToDevicePixels="true">
                            <Path Data="M 1 1.5 L 6 1.5"
                                  Stroke="{StaticResource ControlBrightDefaultBackground}" />
                            <Path Data="M 0 0.5 L 5 0.5"
                                  Stroke="{StaticResource ControlBrightDefaultBorderBrush}" />
                            <Path Data="M 0.5 4 L 6.5 4 L 3.5 7 Z"
                                  Fill="{StaticResource ControlBrightDefaultBackground}" />
                            <Path Data="M -0.5 3 L 5.5 3 L 2.5 6 Z"
                                  Fill="{StaticResource ControlBrightDefaultBorderBrush}" />
                        </Canvas>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{StaticResource ControlPrimaryMouseOverBackground}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{StaticResource ControlDefaultBackground}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground"
                                    Value="{StaticResource ControlGlyphColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ToolBarThumbStyle"
           TargetType="{x:Type Thumb}">
        <Setter Property="Background"
                Value="{StaticResource ControlDefaultBackground}" />
        <Setter Property="BorderBrush"
                Value="{StaticResource ControlDefaultBorderBrush}" />
        <Setter Property="Foreground"
                Value="{StaticResource ControlDefaultForeground}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Padding="{TemplateBinding Padding}"
                            Background="Transparent"
                            SnapsToDevicePixels="True">
                        <Rectangle>
                            <Rectangle.Fill>
                                <DrawingBrush TileMode="Tile"
                                              Viewbox="0,0,4,4"
                                              ViewboxUnits="Absolute"
                                              Viewport="0,0,4,4"
                                              ViewportUnits="Absolute">
                                    <DrawingBrush.Drawing>
                                        <DrawingGroup>
                                            <GeometryDrawing Brush="{StaticResource ControlBrightDefaultBackground}"
                                                             Geometry="M 1 1 L 1 3 L 3 3 L 3 1 z" />
                                            <GeometryDrawing Brush="{StaticResource ControlBrightDefaultBorderBrush}"
                                                             Geometry="M 0 0 L 0 2 L 2 2 L 2 0 z" />
                                        </DrawingGroup>
                                    </DrawingBrush.Drawing>
                                </DrawingBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Cursor"
                                    Value="SizeAll" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ToolBarMainPanelBorderStyle"
           TargetType="{x:Type Border}">
        <Setter Property="Background"
                Value="{StaticResource ControlDefaultBackground}" />
        <Setter Property="BorderBrush"
                Value="{StaticResource ControlDefaultBorderBrush}" />
        <Setter Property="Margin"
                Value="0,0,11,0" />
        <Setter Property="CornerRadius"
                Value="3,3,3,3" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static SystemParameters.HighContrast}}"
                         Value="true">
                <Setter Property="CornerRadius"
                        Value="0,0,0,0" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="NoCornersToolBarStyle"
           TargetType="{x:Type Border}">
        <Setter Property="Background"
                Value="{StaticResource ControlDefaultBackground}" />
        <Setter Property="BorderBrush"
                Value="{StaticResource ControlDefaultBorderBrush}" />
        <Setter Property="Margin"
                Value="0,0,11,0" />
        <Setter Property="CornerRadius"
                Value="0" />
    </Style>
    <Style TargetType="{x:Type ToolBar}">
        <Setter Property="Background"
                Value="{StaticResource ControlDefaultBackground}" />
        <Setter Property="BorderBrush"
                Value="{StaticResource ControlDefaultBorderBrush}" />
        <Setter Property="Foreground"
                Value="{StaticResource ControlDefaultForeground}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToolBar}">
                    <Grid x:Name="Grid"
                          Margin="3,1,1,1"
                          SnapsToDevicePixels="true">
                        <Grid x:Name="OverflowGrid"
                              HorizontalAlignment="Right">
                            <ToggleButton x:Name="OverflowButton"
                                          ClickMode="Press"
                                          FocusVisualStyle="{x:Null}"
                                          IsChecked="{Binding IsOverflowOpen,
                                                              Mode=TwoWay,
                                                              RelativeSource={RelativeSource TemplatedParent}}"
                                          IsEnabled="{TemplateBinding HasOverflowItems}"
                                          Style="{StaticResource ToolBarHorizontalOverflowButtonStyle}" />
                            <Popup x:Name="OverflowPopup"
                                   AllowsTransparency="true"
                                   Focusable="false"
                                   IsOpen="{Binding IsOverflowOpen,
                                                    RelativeSource={RelativeSource TemplatedParent}}"
                                   Placement="Bottom"
                                   PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                                   StaysOpen="false">
                                <Themes:SystemDropShadowChrome x:Name="Shdw"
                                                               Color="Transparent">
                                    <Border x:Name="ToolBarSubMenuBorder"
                                            Background="{TemplateBinding Background}"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="1"
                                            RenderOptions.ClearTypeHint="Enabled">
                                        <ToolBarOverflowPanel x:Name="PART_ToolBarOverflowPanel"
                                                              Margin="2"
                                                              FocusVisualStyle="{x:Null}"
                                                              Focusable="true"
                                                              KeyboardNavigation.DirectionalNavigation="Cycle"
                                                              KeyboardNavigation.TabNavigation="Cycle"
                                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                              WrapWidth="200" />
                                    </Border>
                                </Themes:SystemDropShadowChrome>
                            </Popup>
                        </Grid>
                        <Border x:Name="MainPanelBorder"
                                Padding="{TemplateBinding Padding}"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Style="{StaticResource ToolBarMainPanelBorderStyle}">
                            <DockPanel KeyboardNavigation.TabIndex="1"
                                       KeyboardNavigation.TabNavigation="Local">
                                <Thumb x:Name="ToolBarThumb"
                                       Width="10"
                                       Margin="-3,-1,0,0"
                                       Padding="6,5,1,6"
                                       Style="{StaticResource ToolBarThumbStyle}" />
                                <ContentPresenter x:Name="ToolBarHeader"
                                                  Margin="4,0,4,0"
                                                  HorizontalAlignment="Center"
                                                  VerticalAlignment="Center"
                                                  ContentSource="Header"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                <ToolBarPanel x:Name="PART_ToolBarPanel"
                                              Margin="0,1,2,2"
                                              IsItemsHost="true"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </DockPanel>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsOverflowOpen" Value="true">
                            <Setter TargetName="ToolBarThumb"
                                    Property="IsEnabled"
                                    Value="false" />
                        </Trigger>
                        <Trigger Property="Header" Value="{x:Null}">
                            <Setter TargetName="ToolBarHeader"
                                    Property="Visibility"
                                    Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="ToolBarTray.IsLocked" Value="true">
                            <Setter TargetName="ToolBarThumb"
                                    Property="Visibility"
                                    Value="Collapsed" />
                        </Trigger>
                        <Trigger SourceName="OverflowPopup" Property="HasDropShadow" Value="true">
                            <Setter TargetName="Shdw"
                                    Property="Margin"
                                    Value="0,0,5,5" />
                            <Setter TargetName="Shdw"
                                    Property="SnapsToDevicePixels"
                                    Value="true" />
                            <Setter TargetName="Shdw"
                                    Property="Color"
                                    Value="#71000000" />
                        </Trigger>
                        <Trigger Property="Orientation" Value="Vertical">
                            <Setter TargetName="Grid"
                                    Property="Margin"
                                    Value="1,3,1,1" />
                            <Setter TargetName="OverflowButton"
                                    Property="Style"
                                    Value="{StaticResource ToolBarVerticalOverflowButtonStyle}" />
                            <Setter TargetName="ToolBarThumb"
                                    Property="Height"
                                    Value="10" />
                            <Setter TargetName="ToolBarThumb"
                                    Property="Width"
                                    Value="Auto" />
                            <Setter TargetName="ToolBarThumb"
                                    Property="Margin"
                                    Value="-1,-3,0,0" />
                            <Setter TargetName="ToolBarThumb"
                                    Property="Padding"
                                    Value="5,6,6,1" />
                            <Setter TargetName="ToolBarHeader"
                                    Property="Margin"
                                    Value="0,0,0,4" />
                            <Setter TargetName="PART_ToolBarPanel"
                                    Property="Margin"
                                    Value="1,0,2,2" />
                            <Setter TargetName="ToolBarThumb"
                                    Property="DockPanel.Dock"
                                    Value="Top" />
                            <Setter TargetName="ToolBarHeader"
                                    Property="DockPanel.Dock"
                                    Value="Top" />
                            <Setter TargetName="OverflowGrid"
                                    Property="HorizontalAlignment"
                                    Value="Stretch" />
                            <Setter TargetName="OverflowGrid"
                                    Property="VerticalAlignment"
                                    Value="Bottom" />
                            <Setter TargetName="OverflowPopup"
                                    Property="Placement"
                                    Value="Right" />
                            <Setter TargetName="MainPanelBorder"
                                    Property="Margin"
                                    Value="0,0,0,11" />
                            <Setter Property="Background"
                                    Value="{StaticResource ControlDefaultBackground}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground"
                                    Value="{StaticResource ControlDisabledGlyphColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="NoCornersToolBar"
                     TargetType="{x:Type ToolBar}">
        <Grid x:Name="Grid"
              Margin="0"
              SnapsToDevicePixels="true">
            <Grid x:Name="OverflowGrid"
                  HorizontalAlignment="Right">
                <ToggleButton x:Name="OverflowButton"
                              ClickMode="Press"
                              FocusVisualStyle="{x:Null}"
                              IsChecked="{Binding IsOverflowOpen,
                                                  Mode=TwoWay,
                                                  RelativeSource={RelativeSource TemplatedParent}}"
                              IsEnabled="{TemplateBinding HasOverflowItems}"
                              Style="{StaticResource NoCornersToolBarHorizontalOverflowButtonStyle}" />
                <Popup x:Name="OverflowPopup"
                       AllowsTransparency="true"
                       Focusable="false"
                       IsOpen="{Binding IsOverflowOpen,
                                        RelativeSource={RelativeSource TemplatedParent}}"
                       Placement="Bottom"
                       PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                       StaysOpen="false">
                    <Themes:SystemDropShadowChrome x:Name="Shdw"
                                                   Color="Transparent">
                        <Border x:Name="ToolBarSubMenuBorder"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="1"
                                RenderOptions.ClearTypeHint="Enabled">
                            <ToolBarOverflowPanel x:Name="PART_ToolBarOverflowPanel"
                                                  Margin="2"
                                                  FocusVisualStyle="{x:Null}"
                                                  Focusable="true"
                                                  KeyboardNavigation.DirectionalNavigation="Cycle"
                                                  KeyboardNavigation.TabNavigation="Cycle"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                  WrapWidth="200" />
                        </Border>
                    </Themes:SystemDropShadowChrome>
                </Popup>
            </Grid>
            <Border x:Name="MainPanelBorder"
                    Padding="{TemplateBinding Padding}"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    CornerRadius="0"
                    Style="{StaticResource ToolBarMainPanelBorderStyle}">
                <DockPanel KeyboardNavigation.TabIndex="1"
                           KeyboardNavigation.TabNavigation="Local">
                    <Thumb x:Name="ToolBarThumb"
                           Width="10"
                           Margin="-3,-1,0,0"
                           Padding="6,5,1,6"
                           Style="{StaticResource ToolBarThumbStyle}" />
                    <ContentPresenter x:Name="ToolBarHeader"
                                      Margin="4,0,4,0"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      ContentSource="Header"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    <ToolBarPanel x:Name="PART_ToolBarPanel"
                                  Margin="0,1,2,2"
                                  IsItemsHost="true"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                </DockPanel>
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsOverflowOpen" Value="true">
                <Setter TargetName="ToolBarThumb"
                        Property="IsEnabled"
                        Value="false" />
            </Trigger>
            <Trigger Property="Header" Value="{x:Null}">
                <Setter TargetName="ToolBarHeader"
                        Property="Visibility"
                        Value="Collapsed" />
            </Trigger>
            <Trigger Property="ToolBarTray.IsLocked" Value="true">
                <Setter TargetName="ToolBarThumb"
                        Property="Visibility"
                        Value="Collapsed" />
            </Trigger>
            <Trigger SourceName="OverflowPopup" Property="HasDropShadow" Value="true">
                <Setter TargetName="Shdw"
                        Property="Margin"
                        Value="0,0,5,5" />
                <Setter TargetName="Shdw"
                        Property="SnapsToDevicePixels"
                        Value="true" />
                <Setter TargetName="Shdw"
                        Property="Color"
                        Value="#71000000" />
            </Trigger>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter TargetName="Grid"
                        Property="Margin"
                        Value="1,3,1,1" />
                <Setter TargetName="OverflowButton"
                        Property="Style"
                        Value="{StaticResource ToolBarVerticalOverflowButtonStyle}" />
                <Setter TargetName="ToolBarThumb"
                        Property="Height"
                        Value="10" />
                <Setter TargetName="ToolBarThumb"
                        Property="Width"
                        Value="Auto" />
                <Setter TargetName="ToolBarThumb"
                        Property="Margin"
                        Value="-1,-3,0,0" />
                <Setter TargetName="ToolBarThumb"
                        Property="Padding"
                        Value="5,6,6,1" />
                <Setter TargetName="ToolBarHeader"
                        Property="Margin"
                        Value="0,0,0,4" />
                <Setter TargetName="PART_ToolBarPanel"
                        Property="Margin"
                        Value="1,0,2,2" />
                <Setter TargetName="ToolBarThumb"
                        Property="DockPanel.Dock"
                        Value="Top" />
                <Setter TargetName="ToolBarHeader"
                        Property="DockPanel.Dock"
                        Value="Top" />
                <Setter TargetName="OverflowGrid"
                        Property="HorizontalAlignment"
                        Value="Stretch" />
                <Setter TargetName="OverflowGrid"
                        Property="VerticalAlignment"
                        Value="Bottom" />
                <Setter TargetName="OverflowPopup"
                        Property="Placement"
                        Value="Right" />
                <Setter TargetName="MainPanelBorder"
                        Property="Margin"
                        Value="0,0,0,11" />
                <Setter Property="Background"
                        Value="{StaticResource ControlDefaultBackground}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground"
                        Value="{StaticResource ControlDisabledGlyphColor}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--  -_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-  -->

    <!--  ToolBarTray  -->
    <Style TargetType="{x:Type ToolBarTray}">
        <Setter Property="Background"
                Value="{StaticResource ContainerBackground}" />
    </Style>

    <!--  -_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-  -->

    <!--  ContextMenu  -->

    <ControlTemplate x:Key="ContextmenuStyle"
                     TargetType="{x:Type ContextMenu}">
        <Border x:Name="Border"
                Background="{TemplateBinding Background}"
                BorderThickness="1">
            <ScrollViewer x:Name="ScrollViewer">
                <ItemsPresenter />
            </ScrollViewer>
        </Border>
    </ControlTemplate>

    <!--  -_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-  -->

    <!--  Tooltip  -->
    <Style TargetType="{x:Type ToolTip}">
        <Setter Property="Background"
                Value="{StaticResource ControlDefaultBackground}" />
        <Setter Property="BorderBrush"
                Value="{StaticResource ControlDefaultBorderBrush}" />
        <Setter Property="Foreground"
                Value="{StaticResource ControlDefaultForeground}" />
        <Setter Property="OverridesDefaultStyle"
                Value="true" />
        <Setter Property="HasDropShadow"
                Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToolTip">
                    <Border Name="Border"
                            Width="{TemplateBinding Width}"
                            Height="{TemplateBinding Height}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="1">
                        <ContentPresenter Margin="4"
                                          HorizontalAlignment="Left"
                                          VerticalAlignment="Top" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasDropShadow" Value="true">
                            <Setter TargetName="Border"
                                    Property="CornerRadius"
                                    Value="4" />
                            <Setter TargetName="Border"
                                    Property="SnapsToDevicePixels"
                                    Value="true" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  -_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-  -->

    <!--  WindowTemplates  -->
    <ControlTemplate x:Key="WindowTemplateKey"
                     TargetType="{x:Type Window}">
        <Border Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}">
            <Grid>
                <AdornerDecorator>
                    <ContentPresenter />
                </AdornerDecorator>
                <ResizeGrip x:Name="WindowResizeGrip"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Bottom"
                            IsTabStop="false"
                            Visibility="Visible" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="ResizeMode" Value="CanResizeWithGrip" />
                    <Condition Property="WindowState" Value="Normal" />
                </MultiTrigger.Conditions>
                <Setter TargetName="WindowResizeGrip"
                        Property="Visibility"
                        Value="Visible" />
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!--  Simple Win32 Window style  -->
    <Style x:Key="MainWindowStyle"
           TargetType="{x:Type Window}">
        <Setter Property="Foreground"
                Value="{StaticResource ControlDefaultForeground}" />
        <Setter Property="Background"
                Value="{StaticResource BackgroundColor}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <AdornerDecorator>
                            <ContentPresenter />
                        </AdornerDecorator>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="ResizeMode" Value="CanResizeWithGrip">
                <Setter Property="Template"
                        Value="{StaticResource WindowTemplateKey}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  Custom Window style (unaffected by win32 style stuff)  -->

    <Style x:Key="CustomWindowStyle"
           TargetType="{x:Type Window}">
        <Setter Property="BorderBrush"
                Value="{StaticResource WindowBorderColor}" />
        <Setter Property="Background"
                Value="{StaticResource BackgroundColor}" />
        <Setter Property="Foreground"
                Value="{StaticResource ControlDefaultForeground}" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="ResizeMode"
                Value="CanResizeWithGrip" />
        <Setter Property="WindowStyle"
                Value="SingleBorderWindow" />
        <Setter Property="WindowChrome.WindowChrome">
            <Setter.Value>
                <WindowChrome CaptionHeight="26"
                              CornerRadius="0"
                              GlassFrameThickness="0"
                              NonClientFrameEdges="None"
                              ResizeBorderThickness="6"
                              UseAeroCaptionButtons="False" />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Grid>
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <Grid>
                                <AdornerDecorator Margin="0,30,0,0">
                                    <ContentPresenter />
                                </AdornerDecorator>
                                <Grid x:Name="titlebar"
                                      Height="30"
                                      Margin="0"
                                      VerticalAlignment="Top"
                                      Background="{TemplateBinding BorderBrush}">
                                    <DockPanel Margin="0,0,130,0">
                                        <Image Height="24"
                                               Margin="4,3,0,0"
                                               HorizontalAlignment="Left"
                                               VerticalAlignment="Top"
                                               Source="{Binding Icon,
                                                                RelativeSource={RelativeSource TemplatedParent}}" />
                                        <TextBlock Grid.Column="1"
                                                   Width="Auto"
                                                   Margin="5,3"
                                                   HorizontalAlignment="Stretch"
                                                   VerticalAlignment="Center"
                                                   FontSize="14"
                                                   Foreground="{StaticResource ControlDefaultForeground}"
                                                   Text="{Binding Title,
                                                                  RelativeSource={RelativeSource TemplatedParent}}"
                                                   TextAlignment="Left" />
                                    </DockPanel>
                                    <StackPanel Grid.Column="0"
                                                HorizontalAlignment="Right"
                                                Orientation="Horizontal">
                                        <Button x:Name="btnMinimize"
                                                Width="40"
                                                VerticalContentAlignment="Bottom"
                                                Background="Transparent"
                                                BorderBrush="Transparent"
                                                Click="Minimize_Event"
                                                WindowChrome.IsHitTestVisibleInChrome="True">
                                            <Rectangle Width="10"
                                                       Margin="1,1,0,0"
                                                       VerticalAlignment="Center"
                                                       Stroke="{StaticResource ControlGlyphColor}"
                                                       StrokeThickness="2" />
                                        </Button>

                                        <Button x:Name="btnRestore"
                                                Width="40"
                                                Background="Transparent"
                                                BorderBrush="Transparent"
                                                Click="AutoMinimize_Event"
                                                WindowChrome.IsHitTestVisibleInChrome="True">
                                            <Grid Width="12"
                                                  Height="12">
                                                <Rectangle Margin="3,0,0,3"
                                                           Stroke="{StaticResource ControlGlyphColor}"
                                                           StrokeThickness="2" />
                                                <Rectangle Margin="0,3,3,0"
                                                           Fill="{TemplateBinding BorderBrush}"
                                                           Stroke="{StaticResource ControlGlyphColor}"
                                                           StrokeThickness="2" />
                                            </Grid>
                                        </Button>
                                        <Button x:Name="btnClose"
                                                Width="40"
                                                Background="Transparent"
                                                BorderBrush="Transparent"
                                                Click="CloseWindow_Event"
                                                Template="{DynamicResource CloseWindowButton}"
                                                WindowChrome.IsHitTestVisibleInChrome="True">
                                            <Grid Margin="0,1,0,0">
                                                <Line Stroke="{StaticResource ControlGlyphColor}"
                                                      StrokeThickness="2"
                                                      X1="0"
                                                      X2="11"
                                                      Y1="0"
                                                      Y2="11" />
                                                <Line Stroke="{StaticResource ControlGlyphColor}"
                                                      StrokeThickness="2"
                                                      X1="0"
                                                      X2="11"
                                                      Y1="11"
                                                      Y2="0" />
                                            </Grid>
                                        </Button>
                                    </StackPanel>
                                </Grid>
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="WindowState" Value="Maximized">
                <Setter Property="BorderThickness"
                        Value="8" />
            </Trigger>
            <Trigger Property="WindowState" Value="Normal">
                <Setter Property="BorderThickness"
                        Value="1" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  Same window but auto maximize/minimize button removed. Tool window  -->

    <Style x:Key="CustomToolWindowStyle"
           TargetType="{x:Type Window}">
        <Setter Property="BorderBrush"
                Value="{StaticResource WindowBorderColor}" />
        <Setter Property="Background"
                Value="{StaticResource BackgroundColor}" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="ResizeMode"
                Value="NoResize" />
        <Setter Property="WindowStyle"
                Value="SingleBorderWindow" />
        <Setter Property="WindowChrome.WindowChrome">
            <Setter.Value>
                <WindowChrome CaptionHeight="26"
                              CornerRadius="0"
                              GlassFrameThickness="0"
                              NonClientFrameEdges="None"
                              ResizeBorderThickness="0"
                              UseAeroCaptionButtons="False" />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Grid>
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <Grid>
                                <AdornerDecorator Margin="0,30,0,0">
                                    <ContentPresenter />
                                </AdornerDecorator>
                                <Grid x:Name="titlebar"
                                      Height="30"
                                      Margin="0"
                                      VerticalAlignment="Top"
                                      Background="{TemplateBinding BorderBrush}">
                                    <DockPanel Margin="0,0,130,0">
                                        <Image Height="24"
                                               Margin="4,4,0,0"
                                               HorizontalAlignment="Left"
                                               VerticalAlignment="Top"
                                               Source="{Binding Icon,
                                                                RelativeSource={RelativeSource TemplatedParent}}" />
                                        <TextBlock Grid.Column="1"
                                                   Width="Auto"
                                                   Margin="5,3"
                                                   HorizontalAlignment="Stretch"
                                                   VerticalAlignment="Center"
                                                   FontSize="14"
                                                   Foreground="{StaticResource ControlDefaultForeground}"
                                                   Text="{Binding Title,
                                                                  RelativeSource={RelativeSource TemplatedParent}}"
                                                   TextAlignment="Left" />
                                    </DockPanel>
                                    <StackPanel Grid.Column="0"
                                                HorizontalAlignment="Right"
                                                Orientation="Horizontal">
                                        <Button x:Name="btnMinimize"
                                                Width="40"
                                                VerticalContentAlignment="Bottom"
                                                Background="Transparent"
                                                BorderBrush="Transparent"
                                                Click="Minimize_Event"
                                                WindowChrome.IsHitTestVisibleInChrome="True">
                                            <Rectangle Width="10"
                                                       Margin="1,1,0,0"
                                                       VerticalAlignment="Center"
                                                       Stroke="{StaticResource ControlGlyphColor}"
                                                       StrokeThickness="2" />
                                        </Button>
                                        <Button x:Name="btnClose"
                                                Width="40"
                                                Background="Transparent"
                                                BorderBrush="Transparent"
                                                Click="CloseWindow_Event"
                                                Template="{DynamicResource CloseWindowButton}"
                                                WindowChrome.IsHitTestVisibleInChrome="True">
                                            <Grid Margin="0,1,0,0">
                                                <Line Stroke="{StaticResource ControlGlyphColor}"
                                                      StrokeThickness="2"
                                                      X1="0"
                                                      X2="11"
                                                      Y1="0"
                                                      Y2="11" />
                                                <Line Stroke="{StaticResource ControlGlyphColor}"
                                                      StrokeThickness="2"
                                                      X1="0"
                                                      X2="11"
                                                      Y1="11"
                                                      Y2="0" />
                                            </Grid>
                                        </Button>
                                    </StackPanel>
                                </Grid>
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="WindowState" Value="Maximized">
                <Setter Property="BorderThickness"
                        Value="8" />
            </Trigger>
            <Trigger Property="WindowState" Value="Normal">
                <Setter Property="BorderThickness"
                        Value="1" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  Gives the button red color properties when mouseover/clicked  -->
    <ControlTemplate x:Key="CloseWindowButton"
                     TargetType="{x:Type Button}">
        <Border x:Name="border"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                SnapsToDevicePixels="true">
            <ContentPresenter x:Name="contentPresenter"
                              Margin="{TemplateBinding Padding}"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center"
                              Focusable="False"
                              RecognizesAccessKey="True"
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsDefaulted" Value="true">
                <Setter TargetName="border"
                        Property="BorderBrush"
                        Value="{StaticResource ControlMouseOverBorderBrush}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter TargetName="border"
                        Property="Background"
                        Value="#FFF01428" />
                <Setter TargetName="border"
                        Property="BorderBrush"
                        Value="#FFF01428" />
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter TargetName="border"
                        Property="Background"
                        Value="#FF940A14" />
                <Setter TargetName="border"
                        Property="BorderBrush"
                        Value="#FF940A14" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter TargetName="border"
                        Property="Background"
                        Value="{StaticResource ControlBrightDefaultBackground}" />
                <Setter TargetName="border"
                        Property="BorderBrush"
                        Value="{StaticResource ControlBrightDefaultBorderBrush}" />
                <Setter TargetName="contentPresenter"
                        Property="TextElement.Foreground"
                        Value="{StaticResource ControlDisabledGlyphColor}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!--  -_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-  -->
</ResourceDictionary>